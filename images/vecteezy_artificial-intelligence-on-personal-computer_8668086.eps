%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: vecteezy_future-technology-artificial-intelegence-illustration_AA0522.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: alaik
%%CreationDate: 6/30/2022
%%BoundingBox: 0 0 2000 2000
%%HiResBoundingBox: 0 0 2000 2000
%%CropBox: 0 0 2000 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 35897 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45270005002700050027000500270005002700050027000500270005
%002700050027000500270005002700050027000500270005002700050027
%000500270005002700050027000500270005002700050027000500270005
%002700050027000500270005002700050027000500270005002700050027
%0005002700050027000500000500050005000500050000062EF800000500
%05000500050005000500050005000500000006F800000500050005000500
%050005000500050005000500050005000500050005000500050005000500
%05000500050005000500050005F8000506F8050005000500050005000500
%050005F80500050005000500050005000500050500050005000500050005
%00050D2F050500050005000500050005000500050005000500050D2F0505
%00050005000500050005000500050005F805000500050005000500050005
%000500050005000500050005000500050005000500050C35060500050005
%0005000500050005000500280005000500050005000500050005000000F8
%050000F8050000F805F800052F0600F8050000F8050000F8050000F80500
%00F805F805062F0600F8050000F8050000F8050005F805050C00050005F8
%050005F8050005F8050005F8050005F8050000F8050000F8050000F82E0D
%0CF8000000F8050000F8050000F8050000002F0C00F8050000F8050000F8
%050000F805050027000500270005002700050027052F0D28000500270005
%0027000500270005002700050027052F0D2E000500270005002700050027
%002F0D350005002700050027000500270005002700050027000500270005
%0027000505350D28F8270005002700050027000500270005063606050027
%00050027000500270005002700000500050005000500050005F8000005F8
%060D2E0000000500050005000500050005000500050005F8060C2F0000F8
%050005000500050005063506050005000500050005000505050005000500
%050005000500050000F8050C2F05000005000500050005000500050005F8
%050D2FFD0400F80500050005000500050005000505000500050005000500
%05002F0605000500050C3505050005000500050005000500050005000500
%05000506350C05F82700050027000500270D05002700050027000500050D
%360C05000500270005002700050005002F0D2E0005000500000005000500
%0500050005002E0D2E00050005052F05050005000500050005000500F805
%0000F8050000F805F80C0D350000F805F800052F0600F8050000F8050000
%052E0000F8050005F8050000002F0D06F8000005F8050000002F0000F805
%0005F8050005F82F0D2FF8050005F8050005F805F800052F0605F8050000
%F8060605F8050000F8050000002F0C05F8050000F82F0D2F00050000F805
%0000F805000027000500270005002700050636352F002700050027052F0D
%2800050027000505362F2EF827000500270005002700280D350505002700
%0500270D270027000500270005002705350527000500270005002700280D
%2F05050027000500272F360C270005002700050636060500270005F8282F
%360D27000500270005002700050000050005000500050005000000050C2F
%000000050005F8060D2E0000000500050C350D05F8050005000500050005
%0000052F0C05F8050000062F0005000500050005000500050C0500050005
%00050000002F0D06F80500050005F80006360D06F8050000F8060D2F0000
%00050005000C0D060005F805000500050005000500050500050005000500
%05000500050005063506050005000500050C3505FD04000500280D0D0005
%00050027000500270005002F0D2E00280D2F002700050027000500270005
%002F00050027000500270635060500050027000500280D2F002700050005
%002E0D2E00050005000505350D05F8050005000500050005000500050000
%00F8050000F8050000F8050000F800002F0C05F800F805F800050D052650
%7B577C577B582DF8000005F8050005F8050005F805062F0D06F800000500
%0500050005000500050D06F8050005F8060D2F0000F8050005F80500050C
%06F800F8050000002F0605F8050000F800062F0500F800F8050000F80500
%00F8050000F8050500270005002700050027000500270005002E2F2E0027
%0005000551A6838B67676167618B83A65105002700050027000500270005
%05350D2800270005002700050027000500282F2F0027052F0D2800050027
%000500270005052F00050027000506360D050027000500280D2F00270005
%002700050027000500270005002705000500050005000500050005000500
%050005F8050C2F0005062E7B89616136362F2F2F36363D618A7B27000500
%050005000500050000F82E0D2F000500050005000500050005F805062F06
%2F0600F805000500050005000500050C050005F8060D0D060D0C2E060600
%060D2EF8000005000500050005000500050005F8050C2805000500050005
%000500050005000500050005000506350758A68B3D5A0628002805270028
%06363D8BA65100270005002700050027000500270C350627000500270005
%00270005002E2F2F0005000500270005002700050027062F0005002F0D06
%F85151827C8258350D05F8050005000500050005000500050005002F0D2E
%00F8050000F8050000F8050000F8050000F8050000F80000277B61372F00
%2F06283628362E052F002E36678251000500050005000500050005F80000
%2F0605000500050005F805052F0605F805000500050005000500050005F8
%280600052F06004AA683613C6160837B51F800F8050000F8050000F80500
%00F800062F0605F800280005002700050027000500270005002700050027
%0027818B3D2800613C28366706613C283661002837678227002700270027
%0027002700270505052F00270027052700280D3506270027002700270027
%0005002700050027062F0635050074AE61613D6161613D67837B00270005
%0027000500270005F8280D2F0527000500052F0500F80500050005000500
%050005000500050000748A3D28062E052806613D2836670C280628062837
%677B05000500050005000500050005000606050005000500060D2E000000
%050005000500050005000500050005F82F0D0C0000508A3D613D613D613D
%613D6183500005000500050005F800002F0D28F8000005000505052F0D06
%F805000500050005000500050005000526AD3D2F0561612F0028282F052F
%2E28002F6161052F3D892605000500270005002700050027062F00270005
%00270D28002700050027000500270005002700050005052F0C28000526AD
%3D613D6161613D6161613D678227000500050005000506350605F8050005
%0005000000F8060D0CF8000000F8050000F8050000F805F87B603D00363D
%6136062F2F0605062F35282F613D360036617BF805000500050005000500
%05F806060000050005F82F05000005000500050005000500050005000005
%2F0600F805F87B60613D6136613D6136613D61378A5000F8050000F8060D
%2F0000F800F8050000F80505002700050C35060500270005002700050027
%002782672F2E6161613506676161056161672E2F6161612F2E6782270027
%00270527002805270027062F0027052700270D2800280527002705270027
%0527002700280D2F0027262700007C676161616761613D613D613D61617B
%00272627002F0D2E0027000500270005002700000500050000002F0C05F8
%05000500050005000526833D282F613D61062F3D61360636613D2F06613D
%612F283D8426050005000500050005000500280C0500050005002F050500
%0500050005000500050000002E0D06F87B7C83828250823D613D6036613D
%61618561613D617B507B8382825705F80500050005000500050005050005
%00050005002E0D2F00050005000500050051846105616167612F2F676161
%0661616735283D67616105618457002700050027000500270005052F0005
%002700050C28000500270005002700050027062F0C0626A660673D6161AD
%82613D61052E3D6761AFAFFFA9613DAD83613D61618A7B27000500050005
%0005000500F8050000F8050000F805062F0500F800F8050000508A36062F
%362F35052F2F352F282F352F2F05352F352F05358B500000050005000500
%0500050006060500050005002F050500050005000500050005062F0500F8
%A5603D36613D6137613D360505002E366185AFA9AF3D6137613D6136613D
%847B000000F8050000F8050000270005002700050027000505350D280027
%0005007B8461052F282E0628062F062F052E062F0628062F282E055A677B
%002805270028052700280527062F0027002805270C2E0027002805270028
%052705350527007584613D6161613D61616005280528002E61AFAFFF8561
%3D6161613D6161613DAE5005002700050027000500000500050005000500
%050000F8280D2F00050000508A360636613D6106356161362836613D3605
%613D613C06368B5000000500050005000500050006060500050005002F05
%05000500050005000500060605000057673D613D613D613D613635052800
%2E2F60A9AFA9AF3D613D613D613D613D61607B0005000500050005000505
%000500050005000500050005F8050C3506050051836105366161612E2F67
%6161056161672F2E61613D6005618451000500270505002705050027062F
%0027050500270C2800270505002705050027062F0005F882FD04613D6161
%613D67612E00272F6761AFAFFF858561613D6161613D613D675705000500
%0500050005000000F8050000F8050000F8050000F800002F0C06F8823D2F
%066136610C2E3D613D0636613D2F06613D610C283D832005000500050005
%000500050006060500050005002F05050005000500050005F82E0600F800
%576136613D6136613D613C610605002F61AFA9AFA9AF85613D6136613D61
%3661607BF8050000F8050000F80505002700050027000500270005002700
%05002E0D2F7B8B36283667613606613636055A3661063661613D2835677B
%27002700280527002805270027062F0028052700270D2800280527002805
%270027062F0027007B606161613D6161613D61612E05282F6161FFAFFFA9
%8B3D613D6161613D613D8A50050005002700050027000005000500050005
%00050005000500050005F80506588361062E3D6736050528050605280505
%2F67612F05618451F8050005000500050005000500280C0500050005002F
%05050005000500050005002E0605000026A63D613D613D613D613D610500
%F82F3D3D61FFA96137613D613D613D613D61812700050005000500050005
%05000500050005000500050005000500270005000505A6616105352F2800
%2F3C6106603D2F00282F36003661A6F80500270505002705050027050505
%2F0005002805050C2E00050027050500270505062F0005000050AD61613D
%613D613D613D362F2F36613D6161613D613D613D613D613D678251000500
%0500050005000500F8050000F8050000F8050005F8050005F80500050000
%26A73D360000353605613628366105353605F8353D832600000500050005
%0005000500050006060500050005002F05050005000500050005000C0605
%0005F80026828384608460846084608B6084608460606084608460846084
%5F837B27F8050000F8050000F80500002700050027000500270005002700
%05002700050027000550AE3D5A052F36282F6106612F28362F055A3D8A50
%050027002805270028052700280527052F00270028052706280527002805
%2700280527062F002700270000F8FD045157515151575151515751515157
%51515157FD0451260500270D2F0027000500270005000005000500050005
%0005000500050005000500050005000050893D3D06280500062806050028
%06373D8A7B00000500050005000500050005000500050005000500050005
%00050005000500050005002E0605000500050005FD0800F80000060600F8
%00F8000000F8000000F800F80506360D06F8050005000500050500050005
%000500050005000500270005002700050027000550AD616136362E280628
%2835366761AD500505050027050500280505002805050006000500280505
%00060006000605050028050500270C2E0027050500270505002705050027
%0505002706360C2E05050027000500270005052F0D2F062F000500050005
%0005000000F8050000F805F80500050005F8050005000500050005000026
%82828B3D613D3D37613D67837B2600002F00050005000500050005000500
%27507B502700050000277B747B2705000500050005F82F06050005000500
%0500050005000500050005F82F0606062F0606FD0400F806062F0605F800
%F8050000F8050000F8050500270005002700280D35050500270005002700
%050027002700050D5151A68283838A83825151000500280D270028052700
%2805270528007BFECCC6CCFE5100062DCCC6CCC6CC7B060028052700270D
%2E0028052700280527002805270028052700270D280027052E0C350C2806
%2F0D2E002700050027000500270005002700000500050005000505350D2F
%0500F80500050005000500050000F82F0600F82726272627F80000050005
%002F00050005000500050005007BFE7B000500A5A40500C69E27000550FE
%7A0000050005002F050500050005000500050005000500050000002F0005
%00050000002E0C2F0505F805000500050005000500050005000505000500
%0500050005062E06350D28000500050027000500280C2F0D2E0005000500
%0500270505002705050D280005002805050551057BFE57000500062DCC27
%2DFE510028000151CC7B2727280027052805050028050500270505002705
%050027062F06270005002700050027000500270005002700050005000500
%05000500F8050000F8050005F800F800F8060C2F0505F800F806062F0C2F
%00060605000500050005000500050005002F05050005000505A4C6FEC67B
%272700050027C62D27FE27050005272D50FEC6FE9E270005000500050005
%00050005000500050005062F050000050005000500050005000500050005
%F8050005F8050000F8050000270005002700050027000500270005052F0D
%2E062F0D2F05270005052F00270028052700280527002805270C2F002705
%2800A5C6517BCCC6CCFE7B000627CC2751C62D00287BCCC6CCC69F2DCCA4
%060028052700280527002805270027002F0D2F0505002805270027052700
%270005002700050027000500270005002700050000050005000500050005
%000500050000F806062F05050005000500050D0600050005000500050005
%0005000606050005007BFE2D0005A4A5057BC62D002DC62D27FE270027FE
%50279EC7000027FE7A00000500050005000500050005052F0C05F8050005
%000500050005000500050005000500050005000500050005000500050500
%05000500050005002700050027000500270005002700050027002E0D2E00
%050027050500280505002805270006007BFE7B000505CC510100CC510127
%CC2751C62D007BC6280057C628000651CC7B05002805050028050500280D
%2F0627000500270005002700050027000500270005002700050027000500
%0500050005000000F8050000F8050005F805000500050005000500050005
%0005000500060C2F050000050005000500050005000027C7FE5100050005
%7AFE2D7BC6270027C62D27FE270527FE7A51A4A50005000050FEA4270005
%00050005000C0D2E00050005000500050005000500050005000500050005
%00050000F8050005F8050000F80505002700050027000500270005002700
%05002700270027052700280527002706350C28002700280527002800287A
%CCA451002805280028A4CCA451000627CC2751C652000651CCFEA5272805
%28000627C7FE7B0506002806350C28002700280527002805270028052700
%270005002700050027000505280005002700050027000005000500050005
%000500050005000500050005000500050005000500050005002E0D2E0005
%0005000500057AFE50050005000500050005052D27270027C65127FE2706
%055127270005000500050005007BC6A50005062F05050005000500050005
%0005000500050000002E060C062E060C062E062F0D060005000500050005
%050005000500050027000500270005002700050027000500270005002705
%05002700280C3506050028050527CC51010028052700280527007BFEFEC6
%5127CC2751C62727CCFECC510605270028052700280051FE510028002705
%0500280505002705050027000500270535062F062E062F062E062F0D3505
%0500050005000500F8050000F8060000F805F800F805F800000500050005
%0005000500050005000500050000052F0C0600050051C605000500050005
%0005002DC67B27A49E27C62D27FE27A49E2750FE27050005000500050005
%00FE500000050005000500050005000500050005000005350500F805F800
%F800F800F8060500F8050005F8050000270005002F352F062E062E062E06
%2E05270027002705270028052700280527002805270027002F0C28050651
%CC270605280051A4CC7B0651CC050151CC2DCC2751C651C67B0028C67B00
%7BA4C72D0605280527C67B00280028052700280527002805270028050505
%360605002705270027000500270005002700050027000500000500000636
%0D0C062F060C062F062F0005000500050005000500050005000500050005
%000500050005002DC65100050027C6A57AFE5127C69F51C67A27C62D27CC
%279FC6517AFE057BFE7B9EFE2705000527FE270500050005000500050005
%000500050005062F05050005000500050005000500050005000500050005
%0005050005000506280005F8050005000506350027000500270005002705
%05002705050028050500280527000600CC7A06050650CC05017AC727C7C6
%CC9E2827CC2751C62E05A5C6CCC627A49F0006C67B0027007BC605002805
%270028050500280505002705050636050500270005002700050027000500
%270005002700050005000000F8050000F8050005F80500050000062FF805
%00050005000500050005000500050005000500050000007BC6C600050051
%C62D00A59E51C62700050027C65127FE2706000527FE27A57A0527FE5005
%0027A4FE7A270005000500050005000500050005062F0005000500050005
%0005000500050005F8050005F8050000F805050027000500270005002700
%05002700050D2F002700280527002805270028052700280527002805062D
%CCC67BC6A5000605C7C6C7C65127CC2D06000627CC2751C65200060051FE
%2D27CCA4CCA42800067ACC7BCCC651002800280527002805270027063505
%270527002805270027002700270005002700050027000500270000050005
%00050005000500050005000500050D060000000500050005000500050005
%00050005000551FE7A270051FE9F0500007BFE5100069EFE505127A5A427
%05C69E512751C6A5000050FE7A0000277AFE270105A5FE51000500050005
%00050005062F00000005000500050005000500050005000500050005F805
%0000F8050500050027000500270005002700050005002E587B2727000500
%0500270505002805050028050627CC7B0600280051C6CC7B7BA4CC050600
%287AFEC6CCC65100062DC7C6CCFEA505060527C6C7517BC6CC5106000600
%7BFE5100270528052805280C350027050500280505002805050028050500
%280505002705050027050500F8050005F8050005F8050005000500275058
%5152598A7C7B502700050005000500050005000500C67A05000500050027
%7AC7A49F2705000500060527272700050006002727270005000500277AC6
%A47B27050005000500A5A427002F0C2F0C2F0C350C2F0C2F0C2F0C2F0C2F
%0C2F0C2F0C2F0C2F062F0C2F062F0C2F062F060027000500270005002700
%05002700277B592F2F065B3D6161AE7B00002805270028052700280051FE
%2D0028052805280006052800060528052805060028052805280528002805
%280528052800060528000605280528050627CC5106052805280528052805
%280528052805280528052805280527002805270028052700280505000005
%0005000500050005000500052658072F062936613D613D7BF80500050005
%00050005000074C600050005000500050006000500060005002800050028
%0005002800050028000500280000000600050027000500050005A47B0005
%000500050005000500050005000500050005000500050005000500050005
%0005F805000505000500050027000500270005517C2F2F062F065A3D6161
%6160A651050028050500280527007BC6050028050500280506057B9E7B05
%28052805280528002805280528050500280528002875A551280528002805
%06000605C77A060527002805050027050500270505002700050027000500
%27000500270005002700050005000000F8050005F805000500050057062F
%062F062F366136613D3D60510005000500050005000050FE000500270005
%0005009FC6A5C69F000500050005052E0505000500282828050500057AFE
%9EFE7A050005000505270005C67B00050005000500050005000500050005
%00050005000500050005000500050005F8050005F8050500270005002700
%0500270005512F292F062F285AFD04613D8B510000270027002705280051
%C6A5A4CCFE9F0528052DFE7B0051FE2E05280528007EAFAF2828052805AF
%AF59000627CC510151CC270600287BCCC6C79ECC27060528002805270028
%052700280527002805270027002700270005002700050027000500270000
%06062E0606062E0606062E0658282F062F062F36613D613D616051000C06
%2E060C0505000500A5FE9F507BFE7B000627FE510151FE270600050028A8
%FFAF5900050028A9FF2E050027C6510051C62D000574FE50517AFEA40500
%050005000500050005000500050000F80500050506000500050005000500
%05000500050005280C2F062F0C2F062F0C2F062F582F062F292F065A6161
%3D613D8A51060C2F062F0C2F0028007BFE510006007BC62700287BCC9ECC
%7B06002805052EFFAFFF8428050605AFAF59002805A5FEA5C69F000605CC
%7406000651CC7B060028062F062F062F062F062E062E062E062E0D350D28
%000500270005002700050027000500F800F800F800F800F800F800F8512E
%2F062F062936613D6136616051F8050000F8050005002DC67B0005000527
%FE51000027C6C6502700050005007EAF8484AF28050028A8FF2E00000500
%51A4FE05050051C6270005000050FE2700002E060C062E060C062E0658A5
%58060C062F0D2F0005000500050005F8050005F805000027000500270005
%002700050027512F072F292F065A61613D613D8A51050527002805270006
%7BCC002805280028A4CC05067BCC2706052805280528A9FF2E84FF7E0028
%05AFFF5900280528002EFE7B0028C6A5002805280028C69F002800270027
%00270051000074FE74000051002805270027002700050027000500270005
%00000500050005000500050005F8582E2F062F062936613D613D61605100
%0500050005000500CC740000050005002DC6C69EFE510000280005000553
%FF84052EFF84280028A8FF5205002800050057FEA5A4FE27050005000500
%7BA4050005000500050051C67B74C6C6C6747BC67B000500050005000500
%05000500050005000505000500050027000500270005512F072F062F065A
%3D6161613D8A50000027000500280027C65700270028052700519EA52D06
%05060028052800A9FF842859AFFF2E0505AFAF590028050605280051A4A5
%270605270028050651CC050500280505000651CCC6CCACADA6CCFECC5005
%00050027000500270005002700050005000000F8050005F8050005F80506
%7C282F062F062F366136613D3D8327000605060005000505FE2C05000500
%0500050005000050C6A4510005002EA9AFAFFFAFFFAF840028A8FF2E0500
%0527A5A47B000500050005000500050051C62700050005000500059ECC5F
%2F062F59CCA405000500050005000500050005F8050005F8050500270005
%002700050027002F357D072F062F285AFD0561A6052F0C2F062700280527
%C67B002805280528052805067BCC7BA5C652050559FFA9847EA884FFA92E
%05AFAF59000627CCA47BFE7B0028052805280528050651CC050600280527
%002851FE832FF800F82F83FE512805270027000500270005002700050027
%00000500050005000500050005050C5159072F062F36613C613D83260000
%05000500050005009FA405000500050005000500C67A0100FE500605A9AF
%7E00050028A9FF5305A9FF2E05007BC606007BA427000500050005000500
%A47A05000500050027A4FEC659F8050000F85AC6FEA45100050005000500
%0500050005000500050500050027000500270005002700055159072F065A
%616161AD2600002705050028050500062DFE7A060005002805280028A4A5
%0051FE570053AFAF2E0505060084AF8405AFAF53000651FE2728A4A50028
%052700280506007BFE5100280505000627C7C6CC59000005000035CCC6CC
%2705000500270005002700050027000500F8050005F8050005F805000500
%0500002C7C2E070E67837B260000050005000500050005000550FE7A5105
%05000500050051C6C6C6A500050028050500050005002805050028000500
%057AFEA4FE27050005000000272DA5C6570005000500050005F851C68306
%F8F8F80683C651F800F8050000F8050000F805F800F805F8002700050027
%000500270005002700050005277B57837C51F80500270028052700280527
%0028050651CCFECCA47B27060528002DFEA5050605280528052805280528
%052805280528052805067ACC2706052800277BC7C6CCFE570028002F0D2F
%0C2F0D2F06C7FE840D2F2F84C7CC0C2F0D350D2F0C2F0C2F0C2F0C2F0C2F
%0C2F05000500050005000500050005000605050006002726050005000605
%0500060505002805050005009FA451517BC6C70500000127FE2706000500
%28000500280005000600050028000500280051C62D00050027A4FE7A512D
%C67A0500050528050605280657C6FEFEAC82ACC6FEC67B06613D35000605
%060506050605060506050505062F0D2F0C2F0D2F0C2F0D2F0C2F0D2F0C2F
%0D2F0C2F0D2F0D2F0D360D2F0D2F0D2F0005007BFE5100060027C6C72D27
%27CCA4280028052805280528002805060028052805280528002805C7A451
%2751A4CC270600062DFE5106050500270005000551FE7A7BC6FEC67B7BFE
%50053D672F00F82805050005000500050005000000F8050005F805000500
%050005000500050005000500050005F82E0D050005000500050005A49F00
%050005002DA4FEC6FEA427000500050005000500277A2727A50505000500
%050000000105A4C6FEC6C62705000500007AC60005000500050005000526
%00007BFE7B0E612E2E36613D612F2E366106000005F8050000F805050027
%00050027000500270005002700270027002700270527002F0D2700280527
%0028050627CC51060528052800282D512728057BA47B05060528050627CC
%272DFE510028052805287BC77B28005151510506052805280051C62D0027
%002805270028050500062DA4586161613D67618B61676161613500050027
%000500270000050005000500050005000500050005000500050005000500
%0C0D0500050005000500050051C62D0005000500050006000000A5C69FC6
%A500050006009FA42800C67A06000500067AFE7AFE9E0500060005000500
%05000527FE2705000500050005000500050005000006613D61858459A985
%613D35F80500050005000500050500050027000500270005002800050027
%000500270005002F2F050027050500270505000627CC2706052700280527
%0028002DC6510051C62D00062DC7FE51000651FEA451000627CC51012DCC
%270600280527002805270051C6510028050500270505002705050005F82E
%3D8BA952F805007E85673605F80500050005000500F8050000F8050005F8
%05F8060D2F0506050605060506050C0D05000500050005000500050027C6
%510005000500050005000527FE500150FE050150FE9E510005000527A4FE
%7B0027C6570051C6270005000500050005000050FE050500050005000500
%0500050005002835618552F800F800F8846161060500050005F805000027
%000500270005002700050C362F2F0C2F0C2F0C2F0D2F0C28002700280527
%00280527002800A5C628002805280528052805067ACCA4CC7A0627CC7B06
%002805280506007BFE51009FC6A5FEA50528052805280528050605CC9E06
%00280527002805270028052700FD0461AF050500270000528B3D61612F00
%05002700050000050005000500050005000506280000F805000500050000
%000500050005000500050005000527FEA42D0000000500050027000550FE
%9E0000A5A405000500050006000500C79E0000A5C6510005000500050005
%000527A4C627000500050005000500050005000536673D61840500050005
%F85385613D613606F8050005000505000500050027000500270005002700
%050027000500270005002700050027050500270505000627C7FEA52D0600
%2805270028000151CC2D7BFE51000605A527277A28050651CC7B51C67B00
%0600280527002800519ECCA42D0027000500270005002705050027002806
%6061AF2705050500057E8B3D2F0635060500050005000000F8050005F805
%0005F8050005000500050005000500050005000500050005000500050005
%000500519EFE7A0500050005000500057AFEC67B00050027C65127FE2705
%000050FEC6A50005002700050005007BFEA42C050005052E060606050005
%000500050005F8F8066161A80000F80052AF3D36F8000505F8050000F805
%050027000500270005002700050027000500270027002700270027002700
%2805270028052700280506000651FE510600279ECCA42D00282D2D002805
%0651CC2727C651002800062751050627C7C6A52706007BFE7B0006052700
%2F0C2F0C2F2F2700280527002805270028616161AF7D7D84AF61672F0500
%050027000500270000050005000500050005000500050005000500050005
%000500050005000500050005000500050005000500007AFE27019EC650C7
%A42700050005000500A5A40500A49E0600050005000500C7A451A4A50027
%FE7B00050005000500050000F82F0C00000500050005000536613D613D8B
%85613D613D610C0000050005000500050500050005000500050005000500
%050005000500280D2F062F0C2F062F0C2F062F0C2F062F0C2F0527050500
%28A4CC50CC510127CC510600280506007BFE51000651FE7A060027002800
%51C62D0051C67BC6C7000605050028050500270505003506050027000500
%27056161352F613D613D360C61612FF82700050005000500F8050000F805
%0000F80500000005000000050000060C0005000500050005000500050005
%000500000005000500277AFEC67B007BC62700050005009FC65100050005
%50FE7A050005000527FE50057AFEC6A50500000500050005000500050005
%00350500F805F800F8000028F80005613D35F8F8052EF800F8050000F805
%00002700050027000527A59EA57AA59EA57AA59EA57BA69EA57AA59EA57A
%A59EA57AA59EA59EA59EA57A2E002700280006277BFECCC67B0028052800
%9FFE5100280528050651CC7B06002805067BCCC6CC7B2D00060028052700
%2805270028052700270635062F0C2F0C2F0C2E062F0D2F3D672F00000500
%05002700050027000500000500050005007BFEFEC6FEC6FEC6FEC6FEC6FE
%C6FEC6FEC6FEC6FEC6FEC6FEC6FEC6FEC6FEC6FE500000050005000000A5
%FE5100050005007BFE51000500050005000050FE5000000500002CFE9E00
%000500050005000500050005000500050005050C062E0606062E0606052F
%0D06060500050005000500050005000500050500050005000051FEC6CCC6
%CCC6CCC6CCC6CCC6CCC6CCC6CCC6CCC6CCC6CCC65127A5057B2D2EFE7B00
%2805050028050527CCA4510028057BFE7B000500280527002805067ACC51
%2700282DC7C62D0005002805050028050500270505002705050027000500
%27000500270005002800000027000500270005000500050005000000F805
%0000007BFEC6C6FEC6C6C6FEC6C6C6FEC6C6C6FEC6C6C6FEC6C6C6FE5051
%7A277A5126FE500000050005F805000005A5C6C6A4FEC67B000500050005
%00050005000574FEC6C6A4FE9E2700050005000500050005000500050005
%00050005000500050005000500050000F8050005F8050005F8050000F805
%0000F8050500270005000551CCA5CCA5CCA5CCA5CCA5CCA5CCA5CCA5CCA5
%CCA5CCA5CCA5CCA5CCA5CCA5CCCC7B00280527052F0627000600517B7B51
%2D0028052800280527052E05280006277B7B7B510600280527062E002700
%280527002805270028052700280527002700270027000500270005002700
%050027000500270005002700000500050005F87B60613C613D613C613D61
%3C613D613C613D613C613D613C613D613C613D613D8B50000005062F0606
%00050005000000050005000500050005000C060500050005000000050005
%000500060D2F050500050005000500050005000500050005000500050005
%000500050005000500050005000500050005000505000500050000518B3D
%613D613D613D613D613D613D613D6161613D613D613D613D613D613D6160
%7B002E0D2F0505002805050028050500280505052805050027062F002805
%0500280505002805050028000506350C2800270505002700050027000500
%27000500270005002700050027000500270005000500050005000500F805
%0000F805F85160613D6136613D6136613D6136613D6136613D6136613D61
%36613D6136613D6150060D06F805000500050005000500050005002F0005
%0005002E060000050005000500050005000500050000002E0D0C00050005
%0005000500050005000500050005000500050005F8050005F8050000F805
%0000F805000027000500270000518B61613D6161613D6161613DFD04612F
%35673D6161613D6161613D616161607B0527002805270028052700280527
%002805280D2805270027062F002805270028052700280527002805270027
%00280C350627002705270027052700270027002700050027000500270005
%0027000500270005002700050000050005F805F85160613D613D613D613D
%613D613D603D61056136613D613D613D613D613D613D6150000005000500
%0500050005000500050005002F00050005002E0605000500050005000500
%0500050005000500050000002F0D06000500050005000500050005000500
%05F805F800F805F800F805F800F805F8050505000505002F0D2E0006518B
%3D6161613D6161613D61362E2E672F2F3D2E2E603D6161613D6161613D61
%617B0027050500270505002705050027050500280D2800270505062F0005
%002705050027050500270505002705050027000500280D2F052700050027
%0005002700050005002E062F062E062F062E062E062E062E0D360D0500F8
%050D350D2F067C606136613D6136613D610C002F613D2E36613D35F82F3D
%613D6136613D613767500000050005000500050005000500050005002F00
%0500050006060000050005000500050005000500050005000500050005F8
%000636060600000005000000050000002F0606060C0606060C0606062E06
%06062F0D2FF80505002E0D280005518B3D6161613DFD05612F2E2F612E61
%3D35282F366761613D6161613D61617B0028052700280527052805270028
%052700280D2800280527062F052705280527052805270528052705270527
%052705270527052E2E2E2F2F052705270527052705352827002700270027
%0027000500050027002E0527000005F805F805F87B60613D613D613D613D
%613D67363606353D612E613D613C613D613D613D613D8B50000005000500
%05062F0005000500050005002F00050005000658C6A4C6A4C7A4C6A4C7A4
%C6A4C7A4C6A4C7A4C6A4C7A4C6A4C7A4C6A4C7A4C6A4C7A4C6A4C7A4CCA4
%C6A4C6A4C7C6C6A4FEC675000500050005F800000505000500050000518B
%3D613D6161613D6161613D676136366161613D6161613D6161613D616161
%607B00050027000505360505002705050027002E0D280005002705A5FECC
%C6CCC6CCC6CCC6CCC6CCC6CCC6CCC6CCC6CCC6CCC6CCC6CCC6CCC6CCC6CC
%C6CCC6CCC6CCC6FEC6CCA4C7C6A5C6C79ECCA405000500050005000500F8
%050000F805F85160613D6136613D6136613D6136613D6136613D6136613D
%6136613D6136613D61500000050005002F0505000500050000002F0D2F00
%05000500057AFEA4FEC6C6A4FEC6C6A4FEC6C6A4FEC6C6A4FEC6C6A4FEC6
%C6A4FEC6C6A4FEC6C6A4FEC6C6A4FEC6FEA427057B007B51019EC70000F8
%050000F805000027000500270000518B3D613D613D613D613D613D613D61
%3D613D613D613D613D613D613D613D61617B00270027002F0C2705270028
%0027063606270D280527002700A5FECCC6FEC6CCC6FEC6CCC6FEC6CCC6FE
%C6CCC6FEC6CCC6FEC6CCC6FEC6CCC6FEC6CCC6FEC6CCC6FEC6CC517BA451
%7A9F2DCCC6270027000500270005000005000500050051828383835F8383
%835F8383835F8383835F8383835F8383835F8383835F8383A626000005F8
%2E0D050005000500060D2F0005002F0005000500057ACCA5CCA5A5A5CCA5
%A5A5CCA5A5A5CCA5A5A5CCA5A5A5CCA5A5A5CCA5A5A5CCA5A5A5CCA5A5A5
%CCA5A5A5CCA5CCA5CCA5CCA5A50000000500050005000505000500050005
%002726272627262726272627262D272D2627262726272627262726512727
%26512605002700280D280005002700050C2F000500280D0500270005F882
%61613D6161613D6161613D6161613D6161613D6161613D6161613D616161
%3D6161613D6161613D6161613D6161613D6161617C270005000500050005
%000000F8050000F8050000F8000000F800F800000D0600F8000000F80000
%00F800000C06050000F8000005F8050D05F80500050005F82F0005000500
%2F00050005000057613D6137613D6137613D6137613D6137613D6137613D
%6137613D6137613D6137613D6137613D6137613D6137613D6137613D82F8
%050000F8050000F80505002700050027000500270005002700280D350605
%0027000500270005002706350C2800050027052700272F2E002705270027
%00280D2F002700280D2800280505008261613D6161613D6161613D616161
%3D6161613D6161613D6161613D6161613D6161613D6161613D6161613D61
%61613D616161822700050027000500270000050005000500050005000500
%00002F0D06F805000500050005000500050635050000050005000500000C
%2F00050005000500050C350D050005002F00050005000557613D613D613D
%613D613D613D613D613D613D613D613D613D613D613D613D613D613D613D
%613D613D613D613D613D613D613D82F80500050005000500050500050005
%000500050005F8270C2F06270005000500050027000506350D2F00050005
%002700050005062F002700050027000500280D2E002700050C2800050005
%0082FD04613C6161613D613D5A366761613667616136616161366761613D
%61616136613C613D6761613D6761613D6161613D61822700050005000500
%0500F8050000F8050000F80000060D2F0000F8050000F8050000F805F82F
%0D2FF800F805000500050000053500000005000500050005F80500050005
%002F000500050005576136612F2F3D362F2F353605353636353636602F35
%3D612F2F3536352F36602F350C363636356036362F61FD0536613D83F800
%F8050000F805000027000500270005002706350C28000500270005002700
%0500270005052F0605002700050027000505360505002700050027002700
%270027002700280D280027002700826161612F06612F362F5A2F3535352F
%352F352E363567615A35352F2F2E3528353536FD042F2E2E2F352F353535
%05356167832F052700050027000500000500050005F8060C2F0500F80500
%05000500050005000500050000F8050005000500050005002F0600000500
%05000500050005000500050005002F00050005000558613D362E2F2F3536
%FD052F0C352F2F0C2E2E2F3661FD042F2E2F0C2F2F2F2E2F2E2F0C2F2F35
%2F2F2E352F2E35613D82052F0605F800000500050500050005052F0D28F8
%050005000500050005000500050005000500050027000500270005002F0D
%2F0505000500270005002700050027000500280D0500270005F882616136
%616161366136603661366136613661366136352F61366136613661366136
%613661282F3D60366136613661366161617C27002E0D2F05050005000000
%F8050C2F0505F800F8050000F8050000F8050000F8050000F8050005F805
%0005F805F80C0C00052F0500000500050005000500050005000500050005
%0005000057613D613D613D6136613D613D613D613D613D613D613D613D61
%3D613D613D613D613D61366036613D613D613D613D613D613D82F800F805
%062F0605F80505002F2F2E00270005002700050027000500270005002700
%050027000500270005002700280D28000505360C05002700050027000500
%2700050027000500270005008261613D6161613D6161613D6161613D6161
%613D6161613D6161613D6161613D6161613D6161613D6161613D6161613D
%616161822700050027052F0D2E00000C0605F80000050005000500050005
%000500050005000500050005000500050005F8050D06F8050000002F0C05
%000500050005000500050005000500050005000557613D613D613D613D61
%3D613D613D613D613D613D613D613D613D613D613D613D613D613D613D61
%3D613D613D613D613D613D82F80500050005F80605050500050005000500
%0500050005000500050005000500050005000500050005000500050D2E00
%0500270005003505050027000500270005002700050027000500050082FD
%04613D6161613D6161613D6161613D6161613D6161613D6161613D616161
%3D6161613D6161613D6161613D6161613D618227000500050005000500F8
%050000F8050000F8050000F8050000F8050000F8050000F8050000F80500
%00F8000C0CF8050005F805000006050005F8050005F8050005F8050005F8
%050005F8057B6137613D6137613D6137613D6137613D6137613D6137613D
%6137613D6137613D6137613D6137613D6137613D6137613D613D83F800F8
%050000F80500002700050027000500270005002700050027000500270005
%00270005002700050027062F002700050027000500350505002700050027
%000500270005002700050027007B838B608B608B608B608B608B608B608B
%608B608B608B608A608B608B608B608B608B608B608B608B608B608B608B
%608B608A7B05002700050027000500000500050005000500050005000500
%050005000500050005000500050005000005350000000500050005F8060D
%2F0005000500050005000500050005000500050005005150515051505150
%515051505150515051505150515051515126515051505150515051505150
%515051505150515051505150270005000500050005000505000500050005
%000500050005000500050005000500050005000500050005053505050005
%0005000500050D360D270005002700050027000500270005002700050528
%FD0D000D06FD09000606F8FD1800270005000500050005000000F8050000
%F8050000F8050000F8050000F8050000F8050000F8050000F82F0600F805
%0000F8050000F8050606F8050005F8050005F8050005F8050005F805F806
%06000005F8050005F8050005F82E0D3500050000F8050000F8050D06F805
%0000F8050000F8050000F8050000F8050000F8050000F8050000F8050000
%F80505002700050027000500270005002700050027000500270005002700
%05002F0C0500270005002700050027000500270005002700050027000500
%27000500270005062F00050027000500270005002705350D270005002700
%05002700280D280005002700050027000500270005002700050027000500
%270005002700050027000005000500050005000500050005000500050005
%000500050005000500050505000500050005000500050005000500050005
%0005000500050005000500050005F8060605000500050005000500050005
%0005F8050005000500050005F8060D050005000500050005000500050005
%000500050005000500050005000500050005050005000500050005000500
%050005000500050005000500050005000500050005000500050005000500
%050005000500050005000500050005000500050005000505060005000500
%050005000500050005000500050005000500050005002E05050005000500
%0500050005000500050005000500050005000500050005000500F8050000
%F8050000F8050000F8050000F8050000F8050000F8050000F8050000F805
%0000F8050000F8050000F8050000F8050000F8050000F8050000F8050000
%F805F805F8050000F8050000F8050000F8050000F8050000F8050000F805
%F800F8050000F8050000F8050000F8050000F8050000F8050000F8050000
%F8050000
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2022-06-30T09:33:57+07:00</xmp:CreateDate>
         <xmp:MetadataDate>2022-06-30T09:33:57+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2022-06-30T09:33:57+07:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A835sXDdirsVTqHSrDU4E&#xA;/Rkhj1BVAlsZmH7xgN2hfYGv8p3y0QEh6efc4ks0sZ9Y9PeOnv8A1pRLFLDI0UqNHIho6MCGBHYg&#xA;5URTlAgiwsxS7FXYq7FU1tNFiv7VWsLlZL4A+rYyURzQ/wC6iTxfbt1yyOPiGx37nGnnMD6h6e/9&#xA;fclssUsMjRSo0ciGjowIYHwIOVkU3iQIsLMWTsVbpihWksryKGOeWCRIJf7qVkYI3+qxFDhMSBbE&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2000.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Artificial Intelligence On Computer System</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>artificial</rdf:li>
               <rdf:li>intelligence</rdf:li>
               <rdf:li>cyber</rdf:li>
               <rdf:li>digital</rdf:li>
               <rdf:li>technology</rdf:li>
               <rdf:li>online</rdf:li>
               <rdf:li>computer</rdf:li>
               <rdf:li>system</rdf:li>
               <rdf:li>brain</rdf:li>
               <rdf:li>network</rdf:li>
               <rdf:li>code</rdf:li>
               <rdf:li>coding</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:InstanceID>xmp.iid:7E39115016F8EC11AE15B19FF9CB2FF8</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:7E39115016F8EC11AE15B19FF9CB2FF8</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>xmp.did:D954DA363BACE7118734B3FD8CD4800D</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D954DA363BACE7118734B3FD8CD4800D</stEvt:instanceID>
                  <stEvt:when>2017-10-08T22:15:27+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:DB54DA363BACE7118734B3FD8CD4800D</stEvt:instanceID>
                  <stEvt:when>2017-10-08T22:15:46+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3e1c8dca-004a-3148-9889-98da9dbd3ff2</stEvt:instanceID>
                  <stEvt:when>2017-11-11T14:46:33+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ad65c90d-da64-964a-9e1b-bd70780ec907</stEvt:instanceID>
                  <stEvt:when>2017-11-12T03:09:50+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:194d10fc-9c23-7a48-8bde-ec928790d7ab</stEvt:instanceID>
                  <stEvt:when>2017-11-12T13:18:51+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:bb9e8573-89e5-1544-9ed3-6f325b7e3d79</stEvt:instanceID>
                  <stEvt:when>2017-11-12T19:19:40+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D5A77CEAB3C7E71199B4ACF14C623BB5</stEvt:instanceID>
                  <stEvt:when>2017-11-12T21:15:20+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D9A77CEAB3C7E71199B4ACF14C623BB5</stEvt:instanceID>
                  <stEvt:when>2017-11-12T21:17:18+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:54ed3743-dce6-0347-b179-517fb308b98c</stEvt:instanceID>
                  <stEvt:when>2017-11-12T21:21:42+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:eb3c047d-f577-b243-9feb-3f0622fbfcdf</stEvt:instanceID>
                  <stEvt:when>2017-11-12T23:37:39+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:DBA77CEAB3C7E71199B4ACF14C623BB5</stEvt:instanceID>
                  <stEvt:when>2017-11-12T23:44:18+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:43F0EAAAFB38E911A1D5AAB8D5C41BC9</stEvt:instanceID>
                  <stEvt:when>2019-02-25T19:48:36+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:44F0EAAAFB38E911A1D5AAB8D5C41BC9</stEvt:instanceID>
                  <stEvt:when>2019-02-25T21:40:53+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E5723E831039E911BEA49E0473DAB38B</stEvt:instanceID>
                  <stEvt:when>2019-02-25T22:17:51+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FBE2BE011339E911BEA49E0473DAB38B</stEvt:instanceID>
                  <stEvt:when>2019-02-25T22:35:40+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5F4663C9C14FE9118EB1C0E216DFC5A9</stEvt:instanceID>
                  <stEvt:when>2019-03-26T19:22:13+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:604663C9C14FE9118EB1C0E216DFC5A9</stEvt:instanceID>
                  <stEvt:when>2019-03-26T20:28:46+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:A9E6F692CB4FE9119F8FA084DF0ECFDE</stEvt:instanceID>
                  <stEvt:when>2019-03-26T20:32:17+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0896820DCC4FE9119F8FA084DF0ECFDE</stEvt:instanceID>
                  <stEvt:when>2019-03-26T20:35:43+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D37A56EB7A69E9119AA9BC587C6FCF81</stEvt:instanceID>
                  <stEvt:when>2019-04-28T13:00:26+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D47A56EB7A69E9119AA9BC587C6FCF81</stEvt:instanceID>
                  <stEvt:when>2019-04-28T13:43:56+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:341FB10C8169E91189FD99452634B4EF</stEvt:instanceID>
                  <stEvt:when>2019-04-28T13:44:19+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3A1FB10C8169E91189FD99452634B4EF</stEvt:instanceID>
                  <stEvt:when>2019-04-28T14:01:59+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:34881B7DE69AE911B920A064713A03F3</stEvt:instanceID>
                  <stEvt:when>2019-06-30T10:23:54+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:35881B7DE69AE911B920A064713A03F3</stEvt:instanceID>
                  <stEvt:when>2019-06-30T12:07:21+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:90B9C907F59AE911B585968B79A49289</stEvt:instanceID>
                  <stEvt:when>2019-06-30T12:07:59+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:99B9C907F59AE911B585968B79A49289</stEvt:instanceID>
                  <stEvt:when>2019-06-30T12:20:52+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:631D3BC59750EB11870ACB7BC4D3F50F</stEvt:instanceID>
                  <stEvt:when>2021-01-07T10:23:54+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:651D3BC59750EB11870ACB7BC4D3F50F</stEvt:instanceID>
                  <stEvt:when>2021-01-07T13:05:06+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:56537559B550EB1196F0AEEC1F53494B</stEvt:instanceID>
                  <stEvt:when>2021-01-07T13:55:39+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E873BC32B650EB1196F0AEEC1F53494B</stEvt:instanceID>
                  <stEvt:when>2021-01-07T14:04:12+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:85F808256C51EB11B10CB963F9E2BA5B</stEvt:instanceID>
                  <stEvt:when>2021-01-08T11:44:08+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:86F808256C51EB11B10CB963F9E2BA5B</stEvt:instanceID>
                  <stEvt:when>2021-01-08T13:55:41+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:34B5EA418251EB11BD1FFFDC3762A4CA</stEvt:instanceID>
                  <stEvt:when>2021-01-08T14:22:26+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3AB5EA418251EB11BD1FFFDC3762A4CA</stEvt:instanceID>
                  <stEvt:when>2021-01-08T14:28:47+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C3541D4A9551EB118CF696CA06AF1505</stEvt:instanceID>
                  <stEvt:when>2021-01-08T16:38:40+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2743905F8952EB11B0C4C8CCDF82F1E0</stEvt:instanceID>
                  <stEvt:when>2021-01-09T21:45:53+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:69ECE90E9652EB1194938910B79EFE3C</stEvt:instanceID>
                  <stEvt:when>2021-01-09T23:16:41+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6BECE90E9652EB1194938910B79EFE3C</stEvt:instanceID>
                  <stEvt:when>2021-01-09T23:18:45+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2843905F8952EB11B0C4C8CCDF82F1E0</stEvt:instanceID>
                  <stEvt:when>2021-01-09T23:23:21+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2943905F8952EB11B0C4C8CCDF82F1E0</stEvt:instanceID>
                  <stEvt:when>2021-01-09T23:35:50+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6DECE90E9652EB1194938910B79EFE3C</stEvt:instanceID>
                  <stEvt:when>2021-01-09T23:46:45+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B56420649A52EB1194938910B79EFE3C</stEvt:instanceID>
                  <stEvt:when>2021-01-09T23:49:38+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:27EB6D90835FEB119D509A6E718621C5</stEvt:instanceID>
                  <stEvt:when>2021-01-26T10:07:03+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:694011704660EB11B384B82528DEA254</stEvt:instanceID>
                  <stEvt:when>2021-01-27T09:22+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:A079C6567360EB11ACB59D8D8D24C169</stEvt:instanceID>
                  <stEvt:when>2021-01-27T14:44:28+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BC2328D57460EB11ACB59D8D8D24C169</stEvt:instanceID>
                  <stEvt:when>2021-01-27T15:00:46+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:57AF656B34E8EB11AED7AB8632728973</stEvt:instanceID>
                  <stEvt:when>2021-07-19T13:36:55+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E16EF93C9FE8EB118A60E840A6723E07</stEvt:instanceID>
                  <stEvt:when>2021-07-19T21:40:18+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E26EF93C9FE8EB118A60E840A6723E07</stEvt:instanceID>
                  <stEvt:when>2021-07-19T21:40:30+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4ABC3CFF9FE8EB11BEB0C2E4032B38E8</stEvt:instanceID>
                  <stEvt:when>2021-07-19T21:45:44+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4CBC3CFF9FE8EB11BEB0C2E4032B38E8</stEvt:instanceID>
                  <stEvt:when>2021-07-19T21:47:41+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2897A13A9FEAEB118487F8F7739424E9</stEvt:instanceID>
                  <stEvt:when>2021-07-22T15:15:40+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5EEB2F67E6EAEB11B6C39541E0F65505</stEvt:instanceID>
                  <stEvt:when>2021-07-22T19:14:45+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D28BA01FC2EAEB11BC3A9CD215B4A311</stEvt:instanceID>
                  <stEvt:when>2021-07-22T19:17+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D38BA01FC2EAEB11BC3A9CD215B4A311</stEvt:instanceID>
                  <stEvt:when>2021-07-22T19:17:53+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6CDF4F33D7F4EB11895C8E72DB2E2799</stEvt:instanceID>
                  <stEvt:when>2021-08-04T10:51:08+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7ABA0FE5F6F4EB1182B6F81531B0BA56</stEvt:instanceID>
                  <stEvt:when>2021-08-04T14:38+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7BBA0FE5F6F4EB1182B6F81531B0BA56</stEvt:instanceID>
                  <stEvt:when>2021-08-04T14:42:46+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2BD2001C10F5EB118AA9F02731F6CFD0</stEvt:instanceID>
                  <stEvt:when>2021-08-04T17:38:30+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C49D695BF9F5EB11921FA645E86A9E29</stEvt:instanceID>
                  <stEvt:when>2021-08-05T21:28:09+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:90C73D95F8F5EB11BA6EA89EFFD61508</stEvt:instanceID>
                  <stEvt:when>2021-08-05T21:30:02+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:56A96CB4F9F5EB11BA6EA89EFFD61508</stEvt:instanceID>
                  <stEvt:when>2021-08-05T21:31:02+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1C56B8E864FAEB11B09BBC808C65C599</stEvt:instanceID>
                  <stEvt:when>2021-08-11T12:28:07+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0360ED4F2DFBEB11988080668BA84733</stEvt:instanceID>
                  <stEvt:when>2021-08-12T12:22:39+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BD2D3DAA2EFBEB11B4D9E0C701CF5642</stEvt:instanceID>
                  <stEvt:when>2021-08-12T12:32:20+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C02D3DAA2EFBEB11B4D9E0C701CF5642</stEvt:instanceID>
                  <stEvt:when>2021-08-12T12:33:54+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CA5F4AFC4009EC11B177A264AF023E38</stEvt:instanceID>
                  <stEvt:when>2021-08-30T10:18:45+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9DAF054B6B09EC1190C5E2990F244F59</stEvt:instanceID>
                  <stEvt:when>2021-08-30T15:21:36+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1CEF200B2A0AEC11B74DC8889D4EA100</stEvt:instanceID>
                  <stEvt:when>2021-08-31T14:07:03+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7D3253812A0AEC1180FBAB147DB553F5</stEvt:instanceID>
                  <stEvt:when>2021-08-31T14:10:21+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7E3253812A0AEC1180FBAB147DB553F5</stEvt:instanceID>
                  <stEvt:when>2021-08-31T14:11:06+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1A9271534C14EC119D0E9D41CFFAFDC3</stEvt:instanceID>
                  <stEvt:when>2021-09-13T14:37:53+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:63D313251915EC119E50E0D26CBCBD26</stEvt:instanceID>
                  <stEvt:when>2021-09-14T12:03:48+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:786D56E71915EC119CB1BB8F18568DB9</stEvt:instanceID>
                  <stEvt:when>2021-09-14T12:09:14+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:796D56E71915EC119CB1BB8F18568DB9</stEvt:instanceID>
                  <stEvt:when>2021-09-14T12:10:09+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:64D313251915EC119E50E0D26CBCBD26</stEvt:instanceID>
                  <stEvt:when>2021-09-14T13:52:57+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:242E85884715EC119328B1A6DC294A0A</stEvt:instanceID>
                  <stEvt:when>2021-09-14T17:35:51+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7C6D56E71915EC119CB1BB8F18568DB9</stEvt:instanceID>
                  <stEvt:when>2021-09-14T17:37:11+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7D6D56E71915EC119CB1BB8F18568DB9</stEvt:instanceID>
                  <stEvt:when>2021-09-14T17:37:30+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5395845BD315EC11A65ED010213F3A12</stEvt:instanceID>
                  <stEvt:when>2021-09-15T10:16:45+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:311703F0FC15EC1199328605B83EBA32</stEvt:instanceID>
                  <stEvt:when>2021-09-15T15:14:24+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:51794266FD15EC118764B8D07A509A31</stEvt:instanceID>
                  <stEvt:when>2021-09-15T15:17:42+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:55794266FD15EC118764B8D07A509A31</stEvt:instanceID>
                  <stEvt:when>2021-09-15T15:23:35+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:39F2D3C17917EC11A1A4CF8D3CD983B8</stEvt:instanceID>
                  <stEvt:when>2021-09-17T14:45:55+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:A4BE7541E319EC11A1B4B6D42E962448</stEvt:instanceID>
                  <stEvt:when>2021-09-20T14:20:38+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6C380E7CE419EC11ABECA9F42A0360FE</stEvt:instanceID>
                  <stEvt:when>2021-09-20T14:29:26+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6E380E7CE419EC11ABECA9F42A0360FE</stEvt:instanceID>
                  <stEvt:when>2021-09-20T14:30:24+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:21B7E61BC124EC11B7239E556DD556C5</stEvt:instanceID>
                  <stEvt:when>2021-10-04T10:13:55+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7B73986C1D25EC11B567EB240D61282F</stEvt:instanceID>
                  <stEvt:when>2021-10-04T21:14:44+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:88F6F7251E25EC119F1FBAA7BDC71EB3</stEvt:instanceID>
                  <stEvt:when>2021-10-04T21:19:55+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C14864CB1E25EC119F1FBAA7BDC71EB3</stEvt:instanceID>
                  <stEvt:when>2021-10-04T21:25:13+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D2E167E81F25EC11B718F6844D49D103</stEvt:instanceID>
                  <stEvt:when>2021-10-04T21:32:31+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D3E167E81F25EC11B718F6844D49D103</stEvt:instanceID>
                  <stEvt:when>2021-10-04T21:33:17+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2E8DD9D2E132EC11A786833700F04B5B</stEvt:instanceID>
                  <stEvt:when>2021-10-22T09:43:22+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2F8DD9D2E132EC11A786833700F04B5B</stEvt:instanceID>
                  <stEvt:when>2021-10-22T11:59:12+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F43E3921F532EC1192EFA82D5A1CA525</stEvt:instanceID>
                  <stEvt:when>2021-10-22T12:01:34+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F63E3921F532EC1192EFA82D5A1CA525</stEvt:instanceID>
                  <stEvt:when>2021-10-22T12:03:08+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:DBFF05FECD6DEC118E508EAE45890ACD</stEvt:instanceID>
                  <stEvt:when>2022-01-05T09:20:03+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1694EB41056EEC1191F7FC0F5178C3B2</stEvt:instanceID>
                  <stEvt:when>2022-01-05T15:55:40+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4E45170D066EEC11B002F990EE406AD9</stEvt:instanceID>
                  <stEvt:when>2022-01-05T16:01:21+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5745170D066EEC11B002F990EE406AD9</stEvt:instanceID>
                  <stEvt:when>2022-01-05T16:04:58+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1794EB41056EEC1191F7FC0F5178C3B2</stEvt:instanceID>
                  <stEvt:when>2022-01-05T16:39:22+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8851ED50BB6EEC11BE1CCF3C7DE7A476</stEvt:instanceID>
                  <stEvt:when>2022-01-06T13:39:21+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E9D30B53BC6EEC119CAEF7DC97D2D91B</stEvt:instanceID>
                  <stEvt:when>2022-01-06T13:46:06+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0892E989BD6EEC119CAEF7DC97D2D91B</stEvt:instanceID>
                  <stEvt:when>2022-01-06T13:55:57+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:607BAE841C74EC118B82A88A564172A1</stEvt:instanceID>
                  <stEvt:when>2022-01-13T09:57:17+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:617BAE841C74EC118B82A88A564172A1</stEvt:instanceID>
                  <stEvt:when>2022-01-13T10:58:59+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8E6B7D766AF0EC11A56FC9DD511B1B7E</stEvt:instanceID>
                  <stEvt:when>2022-06-20T17:11:25+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2B709DED15F1EC119D66DBEE2442CBB1</stEvt:instanceID>
                  <stEvt:when>2022-06-21T10:55:02+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:857664BD16F1EC118637C8A4CBF89201</stEvt:instanceID>
                  <stEvt:when>2022-06-21T11:00:51+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AC0A933F17F1EC118637C8A4CBF89201</stEvt:instanceID>
                  <stEvt:when>2022-06-21T11:04:29+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:87E920D9D3F2EC1190A99B1517F91704</stEvt:instanceID>
                  <stEvt:when>2022-06-23T16:07:03+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:88E920D9D3F2EC1190A99B1517F91704</stEvt:instanceID>
                  <stEvt:when>2022-06-23T17:06:30+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FFF30963DCF2EC11839CDA4254F23724</stEvt:instanceID>
                  <stEvt:when>2022-06-23T17:08:10+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:01F40963DCF2EC11839CDA4254F23724</stEvt:instanceID>
                  <stEvt:when>2022-06-23T17:08:57+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7D39115016F8EC11AE15B19FF9CB2FF8</stEvt:instanceID>
                  <stEvt:when>2022-06-30T09:15:26+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7E39115016F8EC11AE15B19FF9CB2FF8</stEvt:instanceID>
                  <stEvt:when>2022-06-30T09:33:57+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:7D39115016F8EC11AE15B19FF9CB2FF8</stRef:instanceID>
            <stRef:documentID>xmp.did:7D39115016F8EC11AE15B19FF9CB2FF8</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:D954DA363BACE7118734B3FD8CD4800D</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
2000 2000 li
2000 0 li
cp
clp
2000 2000 mo
0 2000 li
0 0 li
2000 0 li
2000 2000 li
1428.17 1913.98 mo
1479.69 1978.17 li
1480.64 1979.35 1482.03 1979.96 1483.43 1979.96 cv
1484.48 1979.96 1485.54 1979.62 1486.43 1978.91 cv
1488.5 1977.25 1488.83 1974.23 1487.17 1972.16 cv
1440.6 1913.98 li
1806.03 1913.98 li
1816.94 1913.98 1825.78 1905.14 1825.78 1894.23 cv
1825.78 1754.02 li
1972.76 1833.62 li
1973.49 1834.01 1974.27 1834.2 1975.04 1834.2 cv
1976.74 1834.2 1978.39 1833.29 1979.26 1831.69 cv
1980.52 1829.36 1979.65 1826.45 1977.33 1825.19 cv
1825.78 1743.11 li
1825.78 1619.17 li
1825.78 1608.26 1816.94 1599.42 1806.03 1599.42 cv
1630.79 1599.42 li
1697.35 1552.13 li
1928.49 1552.13 li
1930.63 1560.41 1938.13 1566.55 1947.06 1566.55 cv
1957.65 1566.55 1966.27 1557.93 1966.27 1547.34 cv
1966.27 1536.75 1957.65 1528.14 1947.06 1528.14 cv
1938.13 1528.14 1930.63 1534.27 1928.49 1542.54 cv
1695.82 1542.54 li
1694.82 1542.54 1693.85 1542.85 1693.04 1543.43 cv
1614.24 1599.42 li
1560.31 1599.42 li
1278.6 1447.7 li
1277.87 1447.31 1277.09 1447.12 1276.32 1447.12 cv
1274.62 1447.12 1272.97 1448.03 1272.1 1449.63 cv
1270.84 1451.96 1271.7 1454.87 1274.03 1456.13 cv
1449.45 1550.19 li
1449.45 1599.42 li
1188.84 1599.42 li
1175.65 1582.95 li
1174.7 1581.76 1173.31 1581.15 1171.91 1581.15 cv
1170.85 1581.15 1169.79 1581.5 1168.91 1582.21 cv
1166.84 1583.87 1166.51 1586.88 1168.17 1588.95 cv
1176.53 1599.42 li
1038.77 1599.42 li
1038.77 1450.75 li
1038.77 1448.1 1036.62 1445.96 1033.97 1445.96 cv
1031.32 1445.96 1029.18 1448.1 1029.18 1450.75 cv
1029.18 1601.03 li
1022.15 1604.05 1017.24 1611.04 1017.24 1619.17 cv
1017.24 1894.23 li
1017.24 1902.36 1022.15 1909.34 1029.18 1912.37 cv
1029.18 1968.54 li
1029.18 1971.19 1031.32 1973.33 1033.97 1973.33 cv
1036.62 1973.33 1038.77 1971.19 1038.77 1968.54 cv
1038.77 1913.98 li
1256.6 1913.98 li
1249.18 1916.63 1243.85 1923.71 1243.85 1932.04 cv
1243.85 1942.63 1252.46 1951.24 1263.05 1951.24 cv
1273.63 1951.24 1282.24 1942.63 1282.24 1932.04 cv
1282.24 1923.71 1276.92 1916.63 1269.49 1913.98 cv
1428.17 1913.98 li
310.159 1675.49 mo
22.6748 1831.19 li
20.3436 1832.45 19.4799 1835.37 20.7391 1837.69 cv
21.6098 1839.3 23.258 1840.2 24.9614 1840.2 cv
25.7349 1840.2 26.5155 1840.02 27.2409 1839.63 cv
330.299 1675.49 li
531.792 1675.49 li
458.994 1725.76 li
455.549 1722.48 450.899 1720.45 445.776 1720.45 cv
435.187 1720.45 426.573 1729.06 426.573 1739.65 cv
426.573 1750.24 435.187 1758.86 445.776 1758.86 cv
456.366 1758.86 464.981 1750.24 464.981 1739.65 cv
464.981 1737.65 464.668 1735.71 464.095 1733.89 cv
548.475 1675.63 li
548.54 1675.58 548.603 1675.54 548.665 1675.49 cv
627.501 1675.49 li
637.788 1675.49 646.128 1667.15 646.128 1656.86 cv
646.128 1503.65 li
736.579 1453.92 li
738.908 1452.66 739.774 1449.75 738.512 1447.42 cv
737.643 1445.82 735.995 1444.91 734.292 1444.91 cv
733.52 1444.91 732.737 1445.1 732.01 1445.49 cv
646.128 1492.41 li
646.128 1420.98 li
646.128 1410.69 637.788 1402.35 627.501 1402.35 cv
305.021 1402.35 li
339.003 1357.4 li
608.864 1357.4 li
611.514 1357.4 613.662 1355.25 613.662 1352.6 cv
613.662 1349.95 611.514 1347.8 608.864 1347.8 cv
336.617 1347.8 li
335.113 1347.8 333.697 1348.51 332.79 1349.71 cv
292.997 1402.35 li
152.125 1402.35 li
146.645 1402.35 141.718 1404.72 138.31 1408.49 cv
129.157 1409.94 122.14 1417.89 122.14 1427.45 cv
122.14 1435.24 126.809 1441.97 133.497 1444.98 cv
133.497 1548.55 li
71.513 1548.55 li
69.3761 1540.28 61.8714 1534.14 52.9378 1534.14 cv
42.3494 1534.14 33.7353 1542.76 33.7353 1553.34 cv
33.7353 1563.93 42.3494 1572.55 52.9378 1572.55 cv
61.8699 1572.55 69.3741 1566.41 71.513 1558.14 cv
133.497 1558.14 li
133.497 1656.86 li
133.497 1667.15 141.837 1675.49 152.125 1675.49 cv
310.159 1675.49 li
1734.09 1406.66 mo
1734.54 1409.78 1737.22 1412.18 1740.46 1412.18 cv
1764.58 1412.18 li
1768.13 1412.18 1771.01 1409.3 1771.01 1405.74 cv
1771.01 1378.22 li
1783.69 1375.73 1795.48 1370.75 1805.83 1363.79 cv
1825.29 1383.26 li
1826.55 1384.51 1828.2 1385.14 1829.84 1385.14 cv
1831.49 1385.14 1833.14 1384.51 1834.4 1383.26 cv
1851.44 1366.2 li
1853.96 1363.69 1853.96 1359.62 1851.44 1357.11 cv
1831.99 1337.64 li
1838.94 1327.29 1843.92 1315.5 1846.4 1302.82 cv
1873.93 1302.82 li
1874.32 1302.82 1874.71 1302.79 1875.09 1302.72 cv
1876.35 1302.98 1877.66 1303.12 1879.01 1303.12 cv
1889.6 1303.12 1898.21 1294.51 1898.21 1283.91 cv
1898.21 1273.32 1889.6 1264.7 1879.01 1264.7 cv
1876.73 1264.7 1874.54 1265.1 1872.5 1265.84 cv
1846.4 1265.84 li
1843.92 1253.16 1838.94 1241.37 1831.99 1231.02 cv
1851.44 1211.55 li
1853.96 1209.04 1853.96 1204.97 1851.44 1202.45 cv
1834.4 1185.4 li
1833.14 1184.14 1831.49 1183.52 1829.84 1183.52 cv
1828.2 1183.52 1826.55 1184.14 1825.29 1185.4 cv
1805.83 1204.86 li
1795.48 1197.9 1783.69 1192.93 1771.01 1190.45 cv
1771.01 1162.92 li
1771.01 1159.36 1768.13 1156.48 1764.58 1156.48 cv
1740.46 1156.48 li
1736.91 1156.48 1734.03 1159.36 1734.03 1162.92 cv
1734.03 1190.45 li
1721.34 1192.93 1709.56 1197.9 1699.21 1204.86 cv
1679.75 1185.4 li
1678.49 1184.14 1676.84 1183.52 1675.19 1183.52 cv
1673.55 1183.52 1671.9 1184.14 1670.64 1185.4 cv
1659.76 1196.28 li
1650.48 1185.58 li
1659.12 1183.34 1667.18 1179.67 1674.39 1174.82 cv
1690.33 1190.76 li
1691.36 1191.79 1692.71 1192.31 1694.06 1192.31 cv
1695.4 1192.31 1696.75 1191.79 1697.78 1190.76 cv
1711.75 1176.8 li
1713.81 1174.74 1713.81 1171.4 1711.75 1169.34 cv
1695.81 1153.4 li
1698.4 1149.54 1700.66 1145.44 1702.54 1141.14 cv
1987 1141.14 li
1989.65 1141.14 1991.79 1139 1991.79 1136.35 cv
1991.79 1133.7 1989.65 1131.55 1987 1131.55 cv
1706.01 1131.55 li
1706.64 1129.36 1707.18 1127.14 1707.62 1124.88 cv
1730.16 1124.88 li
1733.08 1124.88 1735.43 1122.52 1735.43 1119.61 cv
1735.43 1099.86 li
1735.43 1096.95 1733.08 1094.59 1730.16 1094.59 cv
1707.62 1094.59 li
1705.58 1084.2 1701.51 1074.55 1695.81 1066.07 cv
1711.75 1050.13 li
1713.81 1048.07 1713.81 1044.73 1711.75 1042.67 cv
1697.78 1028.7 li
1696.75 1027.67 1695.4 1027.15 1694.06 1027.15 cv
1692.71 1027.15 1691.36 1027.67 1690.33 1028.7 cv
1674.39 1044.64 li
1665.91 1038.94 1656.25 1034.86 1645.87 1032.83 cv
1645.87 1010.28 li
1645.87 1007.36 1643.51 1005.01 1640.6 1005.01 cv
1620.85 1005.01 li
1617.94 1005.01 1615.58 1007.36 1615.58 1010.28 cv
1615.58 1032.83 li
1605.19 1034.86 1595.53 1038.94 1587.06 1044.64 cv
1571.12 1028.7 li
1570.09 1027.67 1568.74 1027.15 1567.39 1027.15 cv
1566.04 1027.15 1564.69 1027.67 1563.66 1028.7 cv
1549.7 1042.67 li
1547.64 1044.73 1547.64 1048.07 1549.7 1050.13 cv
1565.63 1066.07 li
1559.94 1074.55 1555.86 1084.2 1553.83 1094.59 cv
1531.28 1094.59 li
1528.37 1094.59 1526.01 1096.95 1526.01 1099.86 cv
1526.01 1119.61 li
1526.01 1122.52 1528.37 1124.88 1531.28 1124.88 cv
1553.83 1124.88 li
1554.27 1127.14 1554.81 1129.36 1555.44 1131.55 cv
1446.8 1131.55 li
1444.15 1131.55 1442 1133.7 1442 1136.35 cv
1442 1139 1444.15 1141.14 1446.8 1141.14 cv
1558.91 1141.14 li
1560.79 1145.44 1563.04 1149.54 1565.63 1153.4 cv
1549.7 1169.34 li
1547.64 1171.4 1547.64 1174.74 1549.7 1176.8 cv
1563.66 1190.76 li
1564.69 1191.79 1566.04 1192.31 1567.39 1192.31 cv
1568.74 1192.31 1570.09 1191.79 1571.12 1190.76 cv
1587.06 1174.82 li
1595.53 1180.52 1605.19 1184.6 1615.58 1186.63 cv
1615.58 1209.18 li
1615.58 1212.09 1617.94 1214.45 1620.85 1214.45 cv
1640.6 1214.45 li
1643.51 1214.45 1645.87 1212.09 1645.87 1209.18 cv
1645.87 1194.9 li
1653 1203.13 li
1651.1 1205.65 1651.29 1209.26 1653.59 1211.55 cv
1673.05 1231.02 li
1666.09 1241.37 1661.12 1253.16 1658.63 1265.84 cv
1631.11 1265.84 li
1627.55 1265.84 1624.67 1268.72 1624.67 1272.27 cv
1624.67 1296.39 li
1624.67 1299.94 1627.55 1302.82 1631.11 1302.82 cv
1658.63 1302.82 li
1661.12 1315.5 1666.09 1327.29 1673.05 1337.64 cv
1653.59 1357.11 li
1651.08 1359.62 1651.08 1363.69 1653.59 1366.2 cv
1670.64 1383.26 li
1671.24 1383.85 1671.92 1384.3 1672.64 1384.62 cv
1543.26 1384.62 li
1488.12 1311.67 li
1487.21 1310.47 1485.8 1309.77 1484.3 1309.77 cv
1413.13 1309.77 li
1410.48 1309.77 1408.34 1311.91 1408.34 1314.56 cv
1408.34 1317.21 1410.48 1319.36 1413.13 1319.36 cv
1481.91 1319.36 li
1537.04 1392.3 li
1537.95 1393.51 1539.37 1394.21 1540.87 1394.21 cv
1707.07 1394.21 li
1709.21 1402.48 1716.71 1408.62 1725.64 1408.62 cv
1728.67 1408.62 1731.54 1407.91 1734.09 1406.66 cv
197.892 1234.69 mo
187.304 1234.69 178.688 1243.3 178.688 1253.89 cv
178.688 1264.48 187.304 1273.09 197.892 1273.09 cv
206.824 1273.09 214.328 1266.96 216.465 1258.69 cv
366.608 1258.69 li
367.885 1258.69 369.11 1258.18 370.008 1257.27 cv
460.26 1166.45 li
537.613 1166.45 li
540.261 1166.45 542.408 1164.3 542.408 1161.65 cv
542.408 1159 540.261 1156.85 537.613 1156.85 cv
332.994 1156.85 li
348.375 1151.68 377.326 1140.15 401.965 1120.11 cv
420.111 1105.35 432.244 1089.04 438.248 1071.4 cv
490.59 1071.4 li
493.238 1071.4 495.385 1069.25 495.385 1066.6 cv
495.385 1063.95 493.238 1061.8 490.59 1061.8 cv
440.88 1061.8 li
442.056 1056.21 442.646 1050.49 442.646 1044.66 cv
442.646 975.825 li
541.198 975.825 li
543.849 975.825 545.997 973.678 545.997 971.029 cv
545.997 968.38 543.849 966.232 541.198 966.232 cv
442.646 966.232 li
442.646 915.748 li
434.273 915.748 li
422.548 915.748 413.007 906.209 413.007 894.482 cv
413.007 892.469 413.296 890.461 413.862 888.517 cv
416.229 880.399 li
329.859 856.146 li
316.676 859.848 li
241.361 764.576 li
240.452 763.525 239.13 762.925 237.739 762.925 cv
106.757 762.925 li
104.617 754.651 97.1122 748.513 88.1821 748.513 cv
77.5937 748.513 68.9796 757.127 68.9796 767.723 cv
68.9796 778.318 77.5937 786.935 88.1821 786.935 cv
97.1142 786.935 104.618 780.795 106.757 772.52 cv
235.552 772.52 li
306.55 862.691 li
243.489 880.399 li
245.855 888.517 li
246.422 890.461 246.71 892.469 246.71 894.482 cv
246.71 906.209 237.17 915.748 225.444 915.748 cv
217.071 915.748 li
217.071 966.232 li
13.0026 966.232 li
10.3535 966.232 8.20613 968.38 8.20613 971.029 cv
8.20613 973.678 10.3535 975.825 13.0026 975.825 cv
217.071 975.825 li
217.071 1044.66 li
217.071 1045.93 217.099 1047.19 217.155 1048.45 cv
215.188 1047.77 213.076 1047.4 210.878 1047.4 cv
200.29 1047.4 191.675 1056.01 191.675 1066.6 cv
191.675 1077.19 200.29 1085.8 210.878 1085.8 cv
216.373 1085.8 221.327 1083.48 224.824 1079.77 cv
231.513 1094.22 242.513 1107.71 257.753 1120.11 cv
282.391 1140.15 311.343 1151.68 326.723 1156.85 cv
22.821 1156.85 li
20.1739 1156.85 18.0259 1159 18.0259 1161.65 cv
18.0259 1164.3 20.1739 1166.45 22.821 1166.45 cv
446.736 1166.45 li
364.612 1249.1 li
216.465 1249.1 li
214.328 1240.82 206.824 1234.69 197.892 1234.69 cv
432.717 602.78 mo
441.918 658.169 li
442.15 659.57 442.994 660.798 444.218 661.516 cv
615.465 761.224 li
616.229 761.674 617.067 761.887 617.891 761.887 cv
619.537 761.887 621.138 761.041 622.032 759.519 cv
623.372 757.234 622.609 754.296 620.326 752.953 cv
451.011 654.383 li
434.122 552.695 li
466.042 576.675 505.715 590.879 548.713 590.879 cv
594.93 590.879 637.306 574.468 670.341 547.148 cv
682.421 649.874 li
682.658 652.355 684.747 654.215 687.19 654.215 cv
687.342 654.215 687.496 654.206 687.651 654.192 cv
690.287 653.939 692.222 651.597 691.969 648.962 cv
679.108 539.439 li
716.389 504.584 739.697 454.959 739.697 399.896 cv
739.697 306.992 673.36 229.581 585.47 212.446 cv
581.556 176.074 li
581.401 174.623 580.592 173.325 579.363 172.541 cv
535.549 144.659 li
536.524 142.359 537.065 139.832 537.065 137.179 cv
537.065 126.59 528.451 117.976 517.862 117.976 cv
507.273 117.976 498.657 126.59 498.657 137.179 cv
498.657 147.769 507.273 156.384 517.862 156.384 cv
522.317 156.384 526.411 154.845 529.672 152.29 cv
572.265 179.394 li
575.645 210.796 li
566.846 209.555 557.855 208.912 548.713 208.912 cv
530.462 208.912 512.811 211.472 496.095 216.253 cv
200.385 20.8293 li
199.572 20.2946 198.657 20.0388 197.752 20.0388 cv
196.192 20.0388 194.663 20.7975 193.741 22.1976 cv
192.284 24.4091 192.897 27.3841 195.108 28.8396 cv
450.932 198.156 li
354.335 223.105 li
217.559 129.706 li
218.657 127.288 219.285 124.617 219.285 121.793 cv
219.285 111.204 210.67 102.589 200.08 102.589 cv
189.492 102.589 180.877 111.204 180.877 121.793 cv
180.877 132.384 189.492 140.999 200.08 140.999 cv
204.365 140.999 208.313 139.571 211.51 137.19 cv
350.723 232.253 li
351.528 232.803 352.472 233.089 353.429 233.089 cv
353.828 233.089 354.232 233.039 354.626 232.936 cv
461.735 205.275 li
484.207 220.081 li
410.468 246.534 357.731 317.054 357.731 399.896 cv
357.731 428.293 363.93 455.246 375.046 479.47 cv
15.455 265.274 li
14.6855 264.814 13.8395 264.595 13.0047 264.595 cv
11.3707 264.595 9.77876 265.433 8.88105 266.941 cv
7.52571 269.213 8.27222 272.158 10.5478 273.513 cv
383.414 495.618 li
393.901 513.689 407.268 529.883 422.884 543.571 cv
431.123 593.181 li
296.823 639.744 li
175.268 585.584 li
175.491 584.415 175.618 583.211 175.618 581.978 cv
175.618 571.389 167.004 562.773 156.415 562.773 cv
145.827 562.773 137.212 571.389 137.212 581.978 cv
137.212 592.568 145.827 601.182 156.415 601.182 cv
162.337 601.182 167.638 598.485 171.163 594.256 cv
294.65 649.276 li
295.268 649.553 295.934 649.693 296.601 649.693 cv
297.132 649.693 297.663 649.606 298.172 649.429 cv
432.717 602.78 li
1561.12 521.301 mo
1548.99 594.354 li
1351.72 710.268 li
1349.44 711.611 1348.67 714.549 1350.01 716.834 cv
1350.91 718.355 1352.51 719.201 1354.15 719.201 cv
1354.98 719.201 1355.82 718.989 1356.58 718.539 cv
1555.78 601.487 li
1557.01 600.768 1557.85 599.541 1558.08 598.139 cv
1567.28 542.751 li
1701.83 589.4 li
1702.34 589.577 1702.87 589.664 1703.4 589.664 cv
1704.06 589.664 1704.73 589.525 1705.35 589.247 cv
1828.83 534.227 li
1832.36 538.455 1837.66 541.153 1843.59 541.153 cv
1854.17 541.153 1862.79 532.539 1862.79 521.949 cv
1862.79 511.361 1854.17 502.744 1843.59 502.744 cv
1833 502.744 1824.38 511.361 1824.38 521.949 cv
1824.38 523.182 1824.51 524.386 1824.73 525.555 cv
1703.18 579.715 li
1568.88 533.151 li
1570.84 521.301 li
1653.54 521.301 1732.26 521.301 1737.25 521.301 cv
1785.96 521.301 1825.45 481.813 1825.45 433.102 cv
1825.45 393.206 1798.97 359.498 1762.62 348.604 cv
1989.45 213.484 li
1991.73 212.129 1992.48 209.184 1991.12 206.911 cv
1990.22 205.404 1988.63 204.567 1986.99 204.567 cv
1986.16 204.567 1985.31 204.786 1984.54 205.245 cv
1748.83 345.655 li
1745.04 345.159 1741.17 344.902 1737.25 344.902 cv
1715.81 344.902 1696.16 352.555 1680.88 365.274 cv
1680.97 363.334 1681.02 361.384 1681.02 359.422 cv
1681.02 290.746 1625.34 235.072 1556.67 235.072 cv
1487.99 235.072 1432.32 290.746 1432.32 359.422 cv
1432.32 361.384 1432.37 363.334 1432.46 365.274 cv
1417.17 352.555 1397.52 344.902 1376.08 344.902 cv
1327.37 344.902 1287.88 384.391 1287.88 433.102 cv
1287.88 481.813 1327.37 521.301 1376.08 521.301 cv
1381.45 521.301 1472.01 521.301 1561.12 521.301 cv
1263.05 1941.65 mo
1257.75 1941.65 1253.44 1937.34 1253.44 1932.04 cv
1253.44 1926.74 1257.75 1922.43 1263.05 1922.43 cv
1268.34 1922.43 1272.65 1926.74 1272.65 1932.04 cv
1272.65 1937.34 1268.34 1941.65 1263.05 1941.65 cv
445.776 1749.27 mo
440.478 1749.27 436.166 1744.95 436.166 1739.65 cv
436.166 1734.35 440.478 1730.04 445.776 1730.04 cv
451.077 1730.04 455.39 1734.35 455.39 1739.65 cv
455.39 1744.95 451.077 1749.27 445.776 1749.27 cv
1540.34 1599.42 mo
1459.05 1599.42 li
1459.05 1555.39 li
1540.34 1599.42 li
52.9378 1562.96 mo
47.6406 1562.96 43.3283 1558.65 43.3283 1553.34 cv
43.3283 1548.04 47.6406 1543.73 52.9378 1543.73 cv
58.2395 1543.73 62.5518 1548.04 62.5518 1553.34 cv
62.5518 1558.65 58.2395 1562.96 52.9378 1562.96 cv
1947.06 1556.95 mo
1941.76 1556.95 1937.45 1552.64 1937.45 1547.34 cv
1937.45 1542.04 1941.76 1537.73 1947.06 1537.73 cv
1952.36 1537.73 1956.67 1542.04 1956.67 1547.34 cv
1956.67 1552.64 1952.36 1556.95 1947.06 1556.95 cv
133.497 1433 mo
132.386 1431.43 131.732 1429.51 131.732 1427.45 cv
131.732 1425.39 132.386 1423.47 133.497 1421.9 cv
133.497 1433 li
1725.64 1399.03 mo
1720.34 1399.03 1716.03 1394.71 1716.03 1389.41 cv
1716.03 1384.11 1720.34 1379.8 1725.64 1379.8 cv
1729.24 1379.8 1732.38 1381.79 1734.03 1384.72 cv
1734.03 1394.1 li
1732.38 1397.04 1729.24 1399.03 1725.64 1399.03 cv
1707.07 1384.62 mo
1677.75 1384.62 li
1678.47 1384.3 1679.15 1383.85 1679.75 1383.26 cv
1699.21 1363.79 li
1704.46 1367.33 1710.1 1370.36 1716.03 1372.8 cv
1711.65 1375.35 1708.37 1379.59 1707.07 1384.62 cv
1880.37 1293.43 mo
1880.37 1274.39 li
1885.03 1275.05 1888.62 1279.07 1888.62 1283.91 cv
1888.62 1288.76 1885.03 1292.77 1880.37 1293.43 cv
197.892 1263.5 mo
192.593 1263.5 188.28 1259.19 188.28 1253.89 cv
188.28 1248.59 192.593 1244.28 197.892 1244.28 cv
202.765 1244.28 206.793 1247.93 207.412 1252.63 cv
207.303 1253.03 207.225 1253.45 207.225 1253.89 cv
207.225 1254.33 207.303 1254.75 207.412 1255.15 cv
206.793 1259.86 202.765 1263.5 197.892 1263.5 cv
210.878 1076.21 mo
205.579 1076.21 201.266 1071.9 201.266 1066.6 cv
201.266 1061.3 205.579 1056.99 210.878 1056.99 cv
214.078 1056.99 216.918 1058.56 218.666 1060.97 cv
219.137 1063.33 219.712 1065.67 220.391 1067.99 cv
219.716 1072.63 215.707 1076.21 210.878 1076.21 cv
88.1821 777.34 mo
82.8829 777.34 78.5721 773.023 78.5721 767.723 cv
78.5721 762.418 82.8829 758.105 88.1821 758.105 cv
93.4833 758.105 97.7961 762.418 97.7961 767.723 cv
97.7961 773.023 93.4833 777.34 88.1821 777.34 cv
156.415 591.591 mo
151.115 591.591 146.803 587.279 146.803 581.978 cv
146.803 576.677 151.115 572.366 156.415 572.366 cv
161.716 572.366 166.027 576.677 166.027 581.978 cv
166.027 587.279 161.716 591.591 156.415 591.591 cv
1843.59 531.562 mo
1838.29 531.562 1833.98 527.25 1833.98 521.949 cv
1833.98 516.647 1838.29 512.337 1843.59 512.337 cv
1848.88 512.337 1853.2 516.647 1853.2 521.949 cv
1853.2 527.25 1848.88 531.562 1843.59 531.562 cv
517.862 146.793 mo
512.562 146.793 508.249 142.48 508.249 137.179 cv
508.249 131.881 512.562 127.569 517.862 127.569 cv
523.162 127.569 527.472 131.881 527.472 137.179 cv
527.472 142.48 523.162 146.793 517.862 146.793 cv
200.08 131.406 mo
194.781 131.406 190.47 127.094 190.47 121.793 cv
190.47 116.493 194.781 112.182 200.08 112.182 cv
205.382 112.182 209.694 116.493 209.694 121.793 cv
209.694 127.094 205.382 131.406 200.08 131.406 cv
false sop
/0 
[/DeviceCMYK] /CSA add_res
level3{
gsave
clp
[1000 0 0 1000 1000 1000 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qUBJ*qUBM+qUBM,qUBM-qUBM.qUBP0qUBP1qUBP1qUBS3qUBS4qUKY6qUK\8qUK\8qUK\9qUK_;qUK_<
qUK_=q:0Y=q:0Y>q:0Y?psjP@psaMApsaMBpXFDBpXFDCpX=>Cp="5Cp="5Dp="8Fp<n2Fp!S)Fp!S)G
p!S)Hp!S,Jp!S,Ko[8#Ko[8#Lo[.uLo[.uMo[.uNo[/#Po?hoPo?hoQo?hrRo?hrSo?hrTo?huVo?huV
o?huWo?r)Zo?r)Zo?r)[o$W#\o$W#\o$W&^o$W&^o$W&_o$W)`o$W)ao$W,bo$W,co$W,co$W/eo$W/e
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1000 0 0 1000 1000 1000 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^q>'g\q"XXZq"XXZq"XUXp\4FVp\4FVp\4CTp@e4Rp@e4Rp@e1Pp%A"Np%A"Np%A"Np%@tLo^qeJ
o^qeJo^qeJo^qeJo^qeIoCMSFoCMSFoCMSFoCMSFoCMSFoCMSEo()ABo()ABo()ABo()ABo()ABo()AB
o()ABo()ABo()ABo()ABo()ABnaZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>
~>
<~e'ldpe'ldpe'ldpe'ldpe'ldpe'ldpe'ldpe'ldpe'ldpe'umseC<!teC<!teC<!teC<!teC<!teC<!t
eC<!teC<!teC<!teC<!teC<!teC;sre'ldpe'ldpe'ldpe'landaHRldaHRldaHRldaHOjdF$@hdF$@h
dF$@hdF$@hdF$@hdF$@hdF$@hdF$@gd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.d
d*U.ddF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@h
~>
<~DfBZ7E,]c8E,]c8E,]c8E,fl;EH,u<EH,u<EH6)?EcQ2@EcQ2@EcZ;CF)uDDF)uDDF*)MGFEDVHFEDVH
FEDYJF`hhLF`hhLF`hhLF`hkNG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8(RGB\7TGB\7TGB\7TGB\7T
GB\7UG^+IXG^+IXG^+IXG^+IYH$O[\H$O[\H$O[]H?sm`H?sm`H?smaH[C*dH[C*dH[C*eI!g<hI!g<h
I!g<hI=6NlI=6NlI=6NlIXZ`pIXZ`pIt)rtIt)rtIt)rtJ:N0#J:N0#JUrB'JUrB'JUrB'JqAT+JqAT+
~>
<~EcQ2@EcZ;CF*)MGFEM_KF`qqOG'A.SGB\7TGBe@WG^4R[H$Xd_H@(!cH[C*dH[L3gI!pEkI=?WoIXcis
It)rtIt*!!J:N3%JUrE)K7ei1KS5&5KnY89L5(J=LPL\ALkpnEM2@+IMMd=MMi3OQN/WaUNK&sYNfK0]
O,o?`OH>QdOcbchP*1ulPEV2oPEV2pPa%DtQ'IW#QBmi'Q^=&+R$a8.R$a8/R@0J3R[T\7S"#n:S"#n;
S=H+>SXl=BSXl=BSt;OFT:_aJT:_aJTV.sNTV.sNTqS0RTqS0RU8"BVU8"BVUSFTZUSFTZUnjf^Unjf^
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
768.704 1354.99 mo
768.704 1343.16 778.326 1333.53 790.153 1333.53 cv
801.98 1333.53 811.603 1343.16 811.603 1354.99 cv
811.603 1366.81 801.98 1376.44 790.153 1376.44 cv
778.326 1376.44 768.704 1366.81 768.704 1354.99 cv
cp
911.048 734.48 mo
922.875 734.48 932.497 744.103 932.497 755.93 cv
932.497 767.757 922.875 777.379 911.048 777.379 cv
899.221 777.379 889.599 767.757 889.599 755.93 cv
889.599 744.103 899.221 734.48 911.048 734.48 cv
cp
885.996 641.152 mo
897.823 641.152 907.445 650.774 907.445 662.601 cv
907.445 674.428 897.823 684.05 885.996 684.05 cv
874.169 684.05 864.547 674.428 864.547 662.601 cv
864.547 650.774 874.169 641.152 885.996 641.152 cv
cp
794.184 794.325 mo
794.184 782.498 803.806 772.877 815.633 772.877 cv
827.459 772.877 837.082 782.498 837.082 794.325 cv
837.082 806.152 827.459 815.776 815.633 815.776 cv
803.806 815.776 794.184 806.152 794.184 794.325 cv
cp
783.184 953.055 mo
783.184 941.228 792.804 931.604 804.631 931.604 cv
816.458 931.604 826.082 941.228 826.082 953.055 cv
826.082 964.88 816.458 974.504 804.631 974.504 cv
792.804 974.504 783.184 964.88 783.184 953.055 cv
cp
787.805 1090.27 mo
787.805 1078.44 797.429 1068.82 809.256 1068.82 cv
821.083 1068.82 830.703 1078.44 830.703 1090.27 cv
830.703 1102.1 821.083 1111.73 809.256 1111.73 cv
797.429 1111.73 787.805 1102.1 787.805 1090.27 cv
cp
986.543 1292.16 mo
985.884 1286.92 981.1 1283.22 975.86 1283.86 cv
970.615 1284.5 966.879 1289.28 967.503 1294.53 cv
967.548 1294.9 971.67 1332.47 943.814 1354.04 cv
922.79 1370.31 911.407 1385.07 902.266 1396.93 cv
887.552 1416.01 880.173 1425.58 844.108 1425.58 cv
844.088 1425.58 li
831.782 1425.58 807.929 1418.85 791.822 1395.58 cv
813.457 1394.7 830.786 1376.83 830.786 1354.99 cv
830.786 1332.58 812.559 1314.35 790.153 1314.35 cv
767.748 1314.35 749.521 1332.58 749.521 1354.99 cv
749.521 1356.12 749.579 1357.25 749.672 1358.36 cv
729.693 1352.46 723.403 1342.3 715.748 1329.91 cv
711.576 1323.16 706.848 1315.5 699.639 1308.42 cv
689.052 1298.02 675.491 1292.04 662.377 1286.25 cv
644.604 1278.42 627.817 1271.01 619.191 1253.38 cv
607.878 1230.25 600.026 1177.95 648.651 1141.86 cv
657.563 1144.48 666.7 1146.38 676.016 1148.32 cv
679.388 1149.02 682.803 1149.74 686.262 1150.49 cv
696.412 1152.72 699.758 1157.46 704.823 1164.65 cv
710.253 1172.35 717.01 1181.93 732.985 1186.76 cv
742.287 1189.57 751.359 1190.96 759.88 1190.96 cv
773.564 1190.96 785.824 1187.38 795.286 1180.35 cv
809.258 1169.98 817.055 1152.99 818.559 1129.83 cv
836.494 1125.61 849.889 1109.48 849.889 1090.27 cv
849.889 1067.86 831.661 1049.64 809.256 1049.64 cv
786.849 1049.64 768.621 1067.86 768.621 1090.27 cv
768.621 1109.26 781.716 1125.26 799.349 1129.69 cv
798.086 1146.38 792.895 1158.23 783.85 1164.95 cv
769.035 1175.94 747.228 1171.02 738.536 1168.39 cv
728.882 1165.47 725.183 1160.23 720.501 1153.59 cv
714.838 1145.56 707.791 1135.56 690.361 1131.74 cv
686.836 1130.97 683.356 1130.25 679.92 1129.53 cv
654.18 1124.17 631.948 1119.55 612.967 1098.98 cv
603.532 1088.75 594.943 1064.83 598.389 1036.46 cv
600.974 1015.16 611.132 985.171 644.557 962.278 cv
647.3 961.801 650.055 961.222 652.788 960.641 cv
661.411 958.809 670.329 956.918 678.465 958.29 cv
688.511 959.986 695.523 969.018 700.533 986.709 cv
714.016 1034.31 737.66 1041.6 750.557 1041.71 cv
750.662 1041.71 750.765 1041.71 750.87 1041.71 cv
772.514 1041.71 793.3 1022.74 804.291 993.678 cv
804.405 993.681 804.517 993.688 804.631 993.688 cv
827.038 993.688 845.266 975.46 845.266 953.055 cv
845.266 930.648 827.038 912.422 804.631 912.422 cv
782.227 912.422 763.998 930.648 763.998 953.055 cv
763.998 968.564 772.737 982.069 785.548 988.914 cv
777.425 1008.84 763.634 1022.52 750.868 1022.52 cv
750.719 1022.52 li
737.912 1022.41 726.349 1007.46 718.99 981.482 cv
716.357 972.182 708.343 943.882 681.66 939.375 cv
669.92 937.391 658.701 939.774 648.804 941.875 cv
646.02 942.466 643.282 943.046 640.73 943.476 cv
639.984 943.5 639.237 943.608 638.505 943.811 cv
633.884 944.43 630.061 944.354 627.982 942.595 cv
625.068 940.135 620.378 931.319 621.696 899.957 cv
623.191 864.333 673.158 825.14 701.789 816.51 cv
711.223 832.908 723.908 846.958 739.605 858.175 cv
752.278 867.23 768.72 871.975 784.153 871.973 cv
794.938 871.973 805.228 869.655 813.392 864.875 cv
825.574 857.74 832.089 846.001 832.129 831.447 cv
846.334 825.108 856.266 810.86 856.266 794.325 cv
856.266 771.92 838.037 753.692 815.633 753.692 cv
793.228 753.692 774.999 771.92 774.999 794.325 cv
774.999 815.752 791.673 833.349 812.725 834.844 cv
811.917 840.808 808.937 845.252 803.696 848.32 cv
790.556 856.019 765.819 853.328 750.759 842.566 cv
734.162 830.708 723.077 816.335 715.698 801.876 cv
715.504 801.406 715.285 800.952 715.023 800.525 cv
707.968 786.255 704.463 771.972 702.806 760.017 cv
699.027 732.782 702.886 723.231 722.47 711.349 cv
726.259 709.052 li
751.192 693.952 774.742 679.691 793.751 655.18 cv
796.135 652.109 798.352 649.081 800.496 646.153 cv
808.101 635.769 814.67 626.801 821.317 625.945 cv
825.796 625.364 831.903 628.195 839.463 634.348 cv
843.245 637.424 846.621 640.876 849.566 644.63 cv
846.881 650.051 845.361 656.151 845.361 662.601 cv
845.361 685.006 863.589 703.234 885.996 703.234 cv
908.401 703.234 926.629 685.006 926.629 662.601 cv
926.629 640.196 908.401 621.968 885.996 621.968 cv
877.092 621.968 868.853 624.854 862.149 629.729 cv
860.394 627.699 858.531 625.746 856.574 623.883 cv
867.135 615.005 875.394 606.434 882.32 599.237 cv
893.422 587.701 901.441 579.368 911.255 577.239 cv
925.101 574.235 942.44 571.829 953.751 579.934 cv
961.15 585.238 965.751 595.028 967.434 609.04 cv
967.434 811.524 li
967.434 812.577 967.434 816.501 967.434 817.556 cv
967.434 825.405 964.938 831.201 959.805 835.271 cv
950.75 842.445 934.184 843.898 914.35 839.25 cv
909.823 838.188 899.875 833.411 894.615 822.921 cv
890.425 814.557 890.195 804.431 893.896 792.753 cv
899.112 795.192 904.92 796.563 911.048 796.563 cv
933.455 796.563 951.683 778.335 951.683 755.93 cv
951.683 733.525 933.455 715.297 911.048 715.297 cv
888.644 715.297 870.415 733.525 870.415 755.93 cv
870.415 764.858 873.317 773.119 878.216 779.832 cv
868.412 803.989 872.306 821.22 877.467 831.517 cv
885.344 847.234 899.899 855.568 909.975 857.929 cv
919.04 860.052 927.614 861.103 935.526 861.103 cv
950.261 861.103 962.698 857.458 971.722 850.303 cv
981.466 842.579 986.617 831.253 986.617 817.556 cv
986.617 816.501 986.617 812.577 986.617 811.524 cv
986.617 608.479 li
986.617 608.117 986.597 607.754 986.555 607.393 cv
984.288 587.49 977.011 573.003 964.926 564.34 cv
947.481 551.838 924.906 554.647 907.188 558.489 cv
891.667 561.858 880.931 573.016 868.497 585.934 cv
860.793 593.938 852.192 602.875 840.792 612.032 cv
833.038 607.711 825.798 606.03 818.873 606.918 cv
804.059 608.821 794.81 621.449 785.019 634.818 cv
782.951 637.643 780.814 640.562 778.594 643.422 cv
761.764 665.123 739.69 678.491 716.32 692.642 cv
712.517 694.947 li
682.972 712.875 679.631 732.572 683.803 762.65 cv
685.598 775.601 688.817 787.782 693.355 799.099 cv
677.316 804.605 658.348 816.22 641.971 830.946 cv
627.774 843.711 603.773 869.547 602.527 899.151 cv
601.19 931 605.099 948.371 615.597 957.248 cv
616.376 957.905 617.174 958.482 617.98 959.019 cv
596.38 979.091 582.867 1005.12 579.346 1034.15 cv
575.706 1064.11 583.554 1095.4 598.869 1112 cv
608.108 1122.01 617.838 1128.89 627.958 1133.92 cv
579.516 1176.97 588.941 1235.21 601.959 1261.81 cv
613.664 1285.74 635.431 1295.34 654.634 1303.81 cv
666.704 1309.13 678.105 1314.16 686.194 1322.11 cv
691.747 1327.56 695.479 1333.6 699.427 1339.99 cv
709.028 1355.54 719.91 1373.15 757.431 1379.83 cv
757.649 1379.87 757.862 1379.86 758.079 1379.89 cv
760.298 1382.74 762.881 1385.29 765.768 1387.47 cv
784.408 1432.67 824.906 1444.77 844.086 1444.77 cv
844.105 1444.77 li
889.594 1444.77 901.893 1428.82 917.456 1408.64 cv
926.372 1397.08 936.479 1383.97 955.557 1369.21 cv
992.201 1340.84 986.789 1294.14 986.543 1292.16 cv
cp
.0324102 .0552682 .987488 0 cmyk
f
835.673 1254.85 mo
823.846 1254.85 814.224 1245.23 814.224 1233.4 cv
814.224 1221.57 823.846 1211.95 835.673 1211.95 cv
847.5 1211.95 857.122 1221.57 857.122 1233.4 cv
857.122 1245.23 847.5 1254.85 835.673 1254.85 cv
cp
876.308 1233.4 mo
876.308 1210.99 858.08 1192.77 835.673 1192.77 cv
813.268 1192.77 795.04 1210.99 795.04 1233.4 cv
795.04 1254.69 811.504 1272.2 832.365 1273.89 cv
837.93 1297.6 850.707 1312.6 867.435 1314.56 cv
868.703 1314.71 869.968 1314.79 871.229 1314.79 cv
890.6 1314.79 909.095 1297.45 921.299 1267.52 cv
926.978 1253.59 936.963 1248.71 948.525 1243.05 cv
965.496 1234.76 986.617 1224.43 986.617 1182.89 cv
986.617 1177.59 982.322 1173.29 977.024 1173.29 cv
971.729 1173.29 967.434 1177.59 967.434 1182.89 cv
967.434 1212.46 955.968 1218.06 940.099 1225.82 cv
927.571 1231.95 911.977 1239.57 903.533 1260.28 cv
892.999 1286.12 878.951 1296.59 869.664 1295.51 cv
861.712 1294.58 855.01 1285.35 851.377 1270.87 cv
866.008 1264.72 876.308 1250.24 876.308 1233.4 cv
cp
f
1209.87 1376.44 mo
1198.05 1376.44 1188.43 1366.81 1188.43 1354.99 cv
1188.43 1343.16 1198.05 1333.53 1209.87 1333.53 cv
1221.68 1333.53 1231.3 1343.16 1231.3 1354.99 cv
1231.3 1366.81 1221.68 1376.44 1209.87 1376.44 cv
cp
1190.77 1111.73 mo
1178.96 1111.73 1169.34 1102.1 1169.34 1090.27 cv
1169.34 1078.44 1178.96 1068.82 1190.77 1068.82 cv
1202.59 1068.82 1212.21 1078.44 1212.21 1090.27 cv
1212.21 1102.1 1202.59 1111.73 1190.77 1111.73 cv
cp
1195.39 974.504 mo
1183.57 974.504 1173.96 964.88 1173.96 953.055 cv
1173.96 941.228 1183.57 931.604 1195.39 931.604 cv
1207.21 931.604 1216.83 941.228 1216.83 953.055 cv
1216.83 964.88 1207.21 974.504 1195.39 974.504 cv
cp
1184.4 815.776 mo
1172.58 815.776 1162.96 806.152 1162.96 794.325 cv
1162.96 782.498 1172.58 772.877 1184.4 772.877 cv
1196.22 772.877 1205.83 782.498 1205.83 794.325 cv
1205.83 806.152 1196.22 815.776 1184.4 815.776 cv
cp
1114.07 684.05 mo
1102.25 684.05 1092.63 674.428 1092.63 662.601 cv
1092.63 650.774 1102.25 641.152 1114.07 641.152 cv
1125.89 641.152 1135.5 650.774 1135.5 662.601 cv
1135.5 674.428 1125.89 684.05 1114.07 684.05 cv
cp
1089.02 777.379 mo
1077.2 777.379 1067.58 767.757 1067.58 755.93 cv
1067.58 744.103 1077.2 734.48 1089.02 734.48 cv
1100.85 734.48 1110.46 744.103 1110.46 755.93 cv
1110.46 767.757 1100.85 777.379 1089.02 777.379 cv
cp
1372.04 1133.92 mo
1382.16 1128.89 1391.89 1122.01 1401.13 1112 cv
1416.45 1095.4 1424.29 1064.11 1420.65 1034.15 cv
1417.13 1005.12 1403.62 979.091 1382.02 959.019 cv
1382.83 958.482 1383.62 957.907 1384.4 957.248 cv
1394.9 948.371 1398.81 930.997 1397.47 899.151 cv
1396.23 869.547 1372.23 843.711 1358.03 830.946 cv
1341.65 816.22 1322.67 804.605 1306.63 799.099 cv
1311.17 787.782 1314.39 775.601 1316.19 762.65 cv
1320.36 732.574 1317.02 712.877 1287.47 694.949 cv
1283.67 692.649 li
1260.32 678.496 1238.25 665.126 1221.42 643.426 cv
1219.21 640.562 1217.07 637.643 1215 634.818 cv
1205.21 621.449 1195.97 608.821 1181.16 606.918 cv
1174.24 606.026 1167 607.707 1159.25 612.032 cv
1147.86 602.875 1139.27 593.939 1131.57 585.939 cv
1119.14 573.017 1108.4 561.86 1092.88 558.489 cv
1075.17 554.648 1052.59 551.838 1035.15 564.34 cv
1023.06 573.003 1015.79 587.49 1013.52 607.393 cv
1013.47 607.754 1013.45 608.117 1013.45 608.479 cv
1013.45 811.524 li
1013.45 812.577 1013.45 816.501 1013.45 817.556 cv
1013.45 831.253 1018.61 842.579 1028.35 850.303 cv
1037.38 857.458 1049.81 861.103 1064.54 861.103 cv
1072.46 861.103 1081.03 860.052 1090.1 857.929 cv
1100.17 855.569 1114.72 847.24 1122.6 831.525 cv
1127.76 821.23 1131.65 803.994 1121.85 779.83 cv
1126.75 773.117 1129.65 764.858 1129.65 755.93 cv
1129.65 733.525 1111.42 715.297 1089.02 715.297 cv
1066.62 715.297 1048.39 733.525 1048.39 755.93 cv
1048.39 778.335 1066.62 796.563 1089.02 796.563 cv
1095.15 796.563 1100.96 795.192 1106.17 792.753 cv
1109.87 804.435 1109.64 814.562 1105.44 822.93 cv
1100.19 833.414 1090.24 838.19 1085.72 839.25 cv
1065.89 843.898 1049.32 842.448 1040.27 835.271 cv
1035.13 831.201 1032.64 825.405 1032.64 817.556 cv
1032.64 816.501 1032.64 812.577 1032.64 811.524 cv
1032.64 609.038 li
1034.32 595.028 1038.92 585.238 1046.32 579.934 cv
1057.63 571.829 1074.97 574.235 1088.81 577.239 cv
1098.63 579.368 1106.64 587.701 1117.74 599.237 cv
1124.66 606.434 1132.92 615.005 1143.47 623.883 cv
1141.52 625.746 1139.66 627.698 1137.9 629.727 cv
1131.2 624.853 1122.97 621.968 1114.07 621.968 cv
1091.67 621.968 1073.44 640.196 1073.44 662.601 cv
1073.44 685.006 1091.67 703.234 1114.07 703.234 cv
1136.47 703.234 1154.69 685.006 1154.69 662.601 cv
1154.69 656.151 1153.17 650.051 1150.49 644.63 cv
1153.43 640.874 1156.81 637.42 1160.58 634.345 cv
1168.14 628.195 1174.23 625.364 1178.72 625.945 cv
1185.36 626.797 1191.92 635.767 1199.52 646.151 cv
1201.67 649.079 1203.88 652.106 1206.26 655.18 cv
1225.26 679.691 1248.81 693.955 1273.73 709.056 cv
1277.52 711.349 li
1297.09 723.228 1300.95 732.781 1297.17 760.017 cv
1295.51 771.972 1292.01 786.255 1284.95 800.525 cv
1284.69 800.955 1284.47 801.413 1284.28 801.885 cv
1276.9 816.342 1265.82 830.712 1249.24 842.566 cv
1234.19 853.325 1209.47 856.017 1196.34 848.327 cv
1191.1 845.259 1188.12 840.811 1187.31 834.844 cv
1208.35 833.345 1225.01 815.752 1225.01 794.325 cv
1225.01 771.92 1206.8 753.692 1184.4 753.692 cv
1162 753.692 1143.78 771.92 1143.78 794.325 cv
1143.78 810.858 1153.71 825.107 1167.91 831.445 cv
1167.94 846.004 1174.46 857.745 1186.65 864.881 cv
1194.8 869.659 1205.08 871.973 1215.86 871.973 cv
1231.29 871.973 1247.73 867.227 1260.39 858.173 cv
1276.08 846.958 1288.76 832.908 1298.2 816.51 cv
1326.84 825.144 1376.81 864.336 1378.3 899.957 cv
1379.62 931.319 1374.93 940.135 1372.02 942.595 cv
1369.94 944.355 1366.11 944.43 1361.48 943.809 cv
1360.76 943.608 1360.02 943.503 1359.28 943.478 cv
1356.72 943.049 1353.98 942.468 1351.2 941.875 cv
1341.3 939.774 1330.07 937.391 1318.33 939.375 cv
1291.63 943.882 1283.62 972.182 1280.99 981.482 cv
1273.63 1007.46 1262.08 1022.41 1249.28 1022.52 cv
1249.13 1022.52 li
1236.37 1022.52 1222.59 1008.84 1214.47 988.914 cv
1227.28 982.069 1236.01 968.564 1236.01 953.055 cv
1236.01 930.648 1217.79 912.422 1195.39 912.422 cv
1173 912.422 1154.77 930.648 1154.77 953.055 cv
1154.77 975.46 1173 993.688 1195.39 993.688 cv
1195.51 993.688 1195.62 993.681 1195.73 993.678 cv
1206.72 1022.75 1227.49 1041.71 1249.13 1041.71 cv
1249.23 1041.71 1249.34 1041.71 1249.44 1041.71 cv
1262.33 1041.6 1285.97 1034.31 1299.45 986.708 cv
1304.46 969.018 1311.47 959.986 1321.53 958.29 cv
1329.67 956.916 1338.59 958.809 1347.21 960.641 cv
1349.95 961.222 1352.7 961.798 1355.44 962.278 cv
1388.87 985.171 1399.03 1015.16 1401.61 1036.46 cv
1405.06 1064.83 1396.47 1088.75 1387.03 1098.98 cv
1368.05 1119.55 1345.82 1124.17 1320.07 1129.53 cv
1316.63 1130.25 1313.15 1130.97 1309.62 1131.74 cv
1292.18 1135.56 1285.14 1145.56 1279.48 1153.59 cv
1274.8 1160.23 1271.1 1165.48 1261.45 1168.39 cv
1252.77 1171.02 1230.98 1175.94 1216.18 1164.95 cv
1207.13 1158.24 1201.94 1146.38 1200.68 1129.69 cv
1218.3 1125.25 1231.39 1109.26 1231.39 1090.27 cv
1231.39 1067.86 1213.17 1049.64 1190.77 1049.64 cv
1168.38 1049.64 1150.16 1067.86 1150.16 1090.27 cv
1150.16 1109.47 1163.54 1125.61 1181.47 1129.83 cv
1182.97 1153 1190.77 1169.98 1204.74 1180.36 cv
1214.2 1187.38 1226.45 1190.96 1240.12 1190.96 cv
1248.64 1190.96 1257.71 1189.57 1267 1186.76 cv
1282.98 1181.93 1289.73 1172.35 1295.16 1164.65 cv
1300.23 1157.46 1303.57 1152.72 1313.73 1150.49 cv
1317.18 1149.74 1320.6 1149.02 1323.97 1148.32 cv
1333.29 1146.38 1342.44 1144.48 1351.35 1141.86 cv
1399.98 1177.95 1392.12 1230.25 1380.81 1253.38 cv
1372.18 1271.01 1355.4 1278.42 1337.62 1286.25 cv
1324.5 1292.04 1310.93 1298.02 1300.34 1308.42 cv
1293.13 1315.5 1288.4 1323.16 1284.23 1329.91 cv
1276.58 1342.3 1270.29 1352.46 1250.33 1358.36 cv
1250.42 1357.25 1250.48 1356.12 1250.48 1354.99 cv
1250.48 1332.58 1232.26 1314.35 1209.87 1314.35 cv
1187.47 1314.35 1169.25 1332.58 1169.25 1354.99 cv
1169.25 1376.83 1186.57 1394.7 1208.19 1395.58 cv
1192.1 1418.85 1168.26 1425.58 1155.96 1425.58 cv
1155.94 1425.58 li
1119.9 1425.58 1112.52 1416.01 1097.81 1396.93 cv
1088.67 1385.07 1077.29 1370.31 1056.26 1354.04 cv
1028.4 1332.47 1032.52 1294.9 1032.56 1294.56 cv
1033.23 1289.3 1029.5 1284.5 1024.24 1283.84 cv
1018.98 1283.17 1014.19 1286.91 1013.53 1292.16 cv
1013.28 1294.14 1007.87 1340.84 1044.51 1369.21 cv
1063.6 1383.97 1073.7 1397.08 1082.62 1408.65 cv
1098.18 1428.83 1110.47 1444.77 1155.94 1444.77 cv
1155.96 1444.77 li
1175.13 1444.77 1215.61 1432.67 1234.24 1387.47 cv
1237.13 1385.29 1239.71 1382.74 1241.93 1379.89 cv
1242.14 1379.86 1242.35 1379.87 1242.57 1379.83 cv
1280.08 1373.15 1290.96 1355.53 1300.56 1339.99 cv
1304.51 1333.6 1308.24 1327.56 1313.79 1322.11 cv
1321.89 1314.16 1333.29 1309.13 1345.37 1303.81 cv
1364.57 1295.34 1386.34 1285.74 1398.04 1261.81 cv
1411.06 1235.21 1420.48 1176.97 1372.04 1133.92 cv
cp
f
1142.93 1233.4 mo
1142.93 1221.57 1152.55 1211.95 1164.37 1211.95 cv
1176.19 1211.95 1185.8 1221.57 1185.8 1233.4 cv
1185.8 1245.23 1176.19 1254.85 1164.37 1254.85 cv
1152.55 1254.85 1142.93 1245.23 1142.93 1233.4 cv
cp
1130.39 1295.51 mo
1121.15 1296.59 1107.07 1286.12 1096.54 1260.28 cv
1088.1 1239.57 1072.5 1231.95 1059.97 1225.82 cv
1044.11 1218.06 1032.64 1212.46 1032.64 1182.89 cv
1032.64 1177.59 1028.34 1173.29 1023.05 1173.29 cv
1017.75 1173.29 1013.45 1177.59 1013.45 1182.89 cv
1013.45 1224.43 1034.58 1234.76 1051.55 1243.05 cv
1063.11 1248.71 1073.09 1253.59 1078.77 1267.52 cv
1090.97 1297.45 1109.46 1314.79 1128.83 1314.79 cv
1130.09 1314.79 1131.35 1314.71 1132.62 1314.56 cv
1149.34 1312.61 1162.12 1297.6 1167.68 1273.89 cv
1188.53 1272.19 1204.99 1254.69 1204.99 1233.4 cv
1204.99 1210.99 1186.76 1192.77 1164.37 1192.77 cv
1141.97 1192.77 1123.75 1210.99 1123.75 1233.4 cv
1123.75 1250.24 1134.04 1264.72 1148.67 1270.87 cv
1145.04 1285.35 1138.34 1294.58 1130.39 1295.51 cv
cp
f
943.756 1044.18 mo
986.376 1044.18 li
964.949 980.367 li
943.756 1044.18 li
cp
995.861 1072.63 mo
934.271 1072.63 li
922.563 1107.76 li
885.21 1107.76 li
948.675 937.278 li
981.225 937.278 li
1045.04 1107.76 li
1007.69 1107.76 li
995.861 1072.63 li
cp
.140688 .00421149 0 0 cmyk
f
1098.31 1107.76 mo
1063.19 1107.76 li
1063.19 937.278 li
1098.31 937.278 li
1098.31 1107.76 li
cp
f
156.415 591.591 mo
151.115 591.591 146.803 587.279 146.803 581.978 cv
146.803 576.677 151.115 572.366 156.415 572.366 cv
161.716 572.366 166.027 576.677 166.027 581.978 cv
166.027 587.279 161.716 591.591 156.415 591.591 cv
10.5478 273.513 mo
418.378 516.445 li
431.123 593.181 li
296.823 639.744 li
175.268 585.584 li
175.491 584.415 175.618 583.211 175.618 581.978 cv
175.618 571.389 167.004 562.773 156.415 562.773 cv
145.827 562.773 137.212 571.389 137.212 581.978 cv
137.212 592.568 145.827 601.182 156.415 601.182 cv
162.337 601.182 167.638 598.485 171.163 594.256 cv
294.65 649.276 li
295.268 649.553 295.934 649.693 296.601 649.693 cv
297.132 649.693 297.663 649.606 298.172 649.429 cv
432.717 602.78 li
441.918 658.169 li
442.15 659.57 442.994 660.798 444.218 661.516 cv
615.465 761.224 li
616.229 761.674 617.067 761.887 617.891 761.887 cv
619.537 761.887 621.138 761.041 622.032 759.519 cv
623.372 757.234 622.609 754.296 620.326 752.953 cv
451.011 654.383 li
427.475 512.679 li
427.244 511.286 426.41 510.067 425.199 509.344 cv
15.455 265.274 li
13.1794 263.913 10.2374 264.662 8.88105 266.941 cv
7.52571 269.213 8.27222 272.158 10.5478 273.513 cv
.804105 .341772 .150637 .00228885 cmyk
f
141.345 1437.06 mo
136.044 1437.06 131.732 1432.75 131.732 1427.45 cv
131.732 1422.15 136.044 1417.84 141.345 1417.84 cv
146.644 1417.84 150.955 1422.15 150.955 1427.45 cv
150.955 1432.75 146.644 1437.06 141.345 1437.06 cv
336.617 1347.8 mo
335.113 1347.8 333.697 1348.51 332.79 1349.71 cv
277.652 1422.65 li
159.916 1422.65 li
157.779 1414.38 150.275 1408.25 141.345 1408.25 cv
130.755 1408.25 122.14 1416.86 122.14 1427.45 cv
122.14 1438.04 130.755 1446.66 141.345 1446.66 cv
150.275 1446.66 157.779 1440.52 159.916 1432.25 cv
280.039 1432.25 li
281.544 1432.25 282.959 1431.54 283.865 1430.34 cv
339.003 1357.4 li
608.864 1357.4 li
611.514 1357.4 613.662 1355.25 613.662 1352.6 cv
613.662 1349.95 611.514 1347.8 608.864 1347.8 cv
336.617 1347.8 li
f
97.7961 767.723 mo
97.7961 773.023 93.4833 777.34 88.1821 777.34 cv
82.8829 777.34 78.5721 773.023 78.5721 767.723 cv
78.5721 762.418 82.8829 758.105 88.1821 758.105 cv
93.4833 758.105 97.7961 762.418 97.7961 767.723 cv
388.075 966.232 mo
13.0026 966.232 li
10.3535 966.232 8.20613 968.38 8.20613 971.029 cv
8.20613 973.678 10.3535 975.825 13.0026 975.825 cv
541.198 975.825 li
543.849 975.825 545.997 973.678 545.997 971.029 cv
545.997 968.38 543.849 966.232 541.198 966.232 cv
400.775 966.232 li
241.361 764.576 li
240.452 763.525 239.13 762.925 237.739 762.925 cv
106.757 762.925 li
104.617 754.651 97.1122 748.513 88.1821 748.513 cv
77.5937 748.513 68.9796 757.127 68.9796 767.723 cv
68.9796 778.318 77.5937 786.935 88.1821 786.935 cv
97.1142 786.935 104.618 780.795 106.757 772.52 cv
235.552 772.52 li
388.075 966.232 li
f
220.492 1066.6 mo
220.492 1071.9 216.179 1076.21 210.878 1076.21 cv
205.579 1076.21 201.266 1071.9 201.266 1066.6 cv
201.266 1061.3 205.579 1056.99 210.878 1056.99 cv
216.179 1056.99 220.492 1061.3 220.492 1066.6 cv
490.59 1061.8 mo
229.453 1061.8 li
227.312 1053.53 219.808 1047.4 210.878 1047.4 cv
200.29 1047.4 191.675 1056.01 191.675 1066.6 cv
191.675 1077.19 200.29 1085.8 210.878 1085.8 cv
219.81 1085.8 227.312 1079.67 229.453 1071.4 cv
490.59 1071.4 li
493.238 1071.4 495.385 1069.25 495.385 1066.6 cv
495.385 1063.95 493.238 1061.8 490.59 1061.8 cv
f
207.412 1252.63 mo
207.303 1253.03 207.225 1253.45 207.225 1253.89 cv
207.225 1254.33 207.303 1254.75 207.412 1255.15 cv
206.793 1259.86 202.765 1263.5 197.892 1263.5 cv
192.593 1263.5 188.28 1259.19 188.28 1253.89 cv
188.28 1248.59 192.593 1244.28 197.892 1244.28 cv
202.765 1244.28 206.793 1247.93 207.412 1252.63 cv
542.408 1161.65 mo
542.408 1159 540.261 1156.85 537.613 1156.85 cv
22.821 1156.85 li
20.1739 1156.85 18.0259 1159 18.0259 1161.65 cv
18.0259 1164.3 20.1739 1166.45 22.821 1166.45 cv
446.736 1166.45 li
364.612 1249.1 li
216.465 1249.1 li
214.328 1240.82 206.824 1234.69 197.892 1234.69 cv
187.304 1234.69 178.688 1243.3 178.688 1253.89 cv
178.688 1264.48 187.304 1273.09 197.892 1273.09 cv
206.824 1273.09 214.328 1266.96 216.465 1258.69 cv
366.608 1258.69 li
367.885 1258.69 369.11 1258.18 370.008 1257.27 cv
460.26 1166.45 li
537.613 1166.45 li
540.261 1166.45 542.408 1164.3 542.408 1161.65 cv
f
445.776 1749.27 mo
440.478 1749.27 436.166 1744.95 436.166 1739.65 cv
436.166 1734.35 440.478 1730.04 445.776 1730.04 cv
451.077 1730.04 455.39 1734.35 455.39 1739.65 cv
455.39 1744.95 451.077 1749.27 445.776 1749.27 cv
52.9378 1562.96 mo
47.6406 1562.96 43.3283 1558.65 43.3283 1553.34 cv
43.3283 1548.04 47.6406 1543.73 52.9378 1543.73 cv
58.2395 1543.73 62.5518 1548.04 62.5518 1553.34 cv
62.5518 1558.65 58.2395 1562.96 52.9378 1562.96 cv
736.579 1453.92 mo
738.908 1452.66 739.774 1449.75 738.512 1447.42 cv
737.25 1445.09 734.34 1444.23 732.01 1445.49 cv
409.018 1621.95 li
306.96 1549.44 li
306.148 1548.86 305.177 1548.55 304.181 1548.55 cv
71.513 1548.55 li
69.3761 1540.28 61.8714 1534.14 52.9378 1534.14 cv
42.3494 1534.14 33.7353 1542.76 33.7353 1553.34 cv
33.7353 1563.93 42.3494 1572.55 52.9378 1572.55 cv
61.8699 1572.55 69.3741 1566.41 71.513 1558.14 cv
302.651 1558.14 li
399.623 1627.03 li
22.6748 1831.19 li
20.3436 1832.45 19.4799 1835.37 20.7391 1837.69 cv
21.6098 1839.3 23.258 1840.2 24.9614 1840.2 cv
25.7349 1840.2 26.5155 1840.02 27.2409 1839.63 cv
540.954 1561.4 li
540.954 1669.16 li
458.994 1725.76 li
455.549 1722.48 450.899 1720.45 445.776 1720.45 cv
435.187 1720.45 426.573 1729.06 426.573 1739.65 cv
426.573 1750.24 435.187 1758.86 445.776 1758.86 cv
456.366 1758.86 464.981 1750.24 464.981 1739.65 cv
464.981 1737.65 464.668 1735.71 464.095 1733.89 cv
548.475 1675.63 li
549.773 1674.73 550.547 1673.26 550.547 1671.68 cv
550.547 1556.2 li
736.579 1453.92 li
f
200.08 112.182 mo
205.382 112.182 209.694 116.493 209.694 121.793 cv
209.694 127.094 205.382 131.406 200.08 131.406 cv
194.781 131.406 190.47 127.094 190.47 121.793 cv
190.47 116.493 194.781 112.182 200.08 112.182 cv
517.862 146.793 mo
512.562 146.793 508.249 142.48 508.249 137.179 cv
508.249 131.881 512.562 127.569 517.862 127.569 cv
523.162 127.569 527.472 131.881 527.472 137.179 cv
527.472 142.48 523.162 146.793 517.862 146.793 cv
200.08 140.999 mo
204.365 140.999 208.313 139.571 211.51 137.19 cv
350.723 232.253 li
351.528 232.803 352.472 233.089 353.429 233.089 cv
353.828 233.089 354.232 233.039 354.626 232.936 cv
461.735 205.275 li
644.283 325.548 li
682.421 649.874 li
682.658 652.355 684.747 654.215 687.19 654.215 cv
687.342 654.215 687.496 654.206 687.651 654.192 cv
690.287 653.939 692.222 651.597 691.969 648.962 cv
653.614 322.349 li
653.476 320.904 652.689 319.601 651.478 318.799 cv
592.752 280.109 li
581.556 176.074 li
581.401 174.623 580.592 173.325 579.363 172.541 cv
535.549 144.659 li
536.524 142.359 537.065 139.832 537.065 137.179 cv
537.065 126.59 528.451 117.976 517.862 117.976 cv
507.273 117.976 498.657 126.59 498.657 137.179 cv
498.657 147.769 507.273 156.384 517.862 156.384 cv
522.317 156.384 526.411 154.845 529.672 152.29 cv
572.265 179.394 li
582.368 273.268 li
200.385 20.8293 li
198.173 19.3738 195.198 19.9846 193.741 22.1976 cv
192.284 24.4091 192.897 27.3841 195.108 28.8396 cv
450.932 198.156 li
354.335 223.105 li
217.559 129.706 li
218.657 127.288 219.285 124.617 219.285 121.793 cv
219.285 111.204 210.67 102.589 200.08 102.589 cv
189.492 102.589 180.877 111.204 180.877 121.793 cv
180.877 132.384 189.492 140.999 200.08 140.999 cv
f
889.238 74.4395 mo
889.238 69.1401 893.551 64.8291 898.851 64.8291 cv
904.149 64.8291 908.462 69.1401 908.462 74.4395 cv
908.462 79.7407 904.149 84.0513 898.851 84.0513 cv
893.551 84.0513 889.238 79.7407 889.238 74.4395 cv
cp
577.028 37.458 mo
937.381 246.547 li
937.381 510.464 li
937.381 513.111 939.528 515.258 942.177 515.258 cv
944.824 515.258 946.972 513.111 946.972 510.464 cv
946.972 243.784 li
946.972 242.071 946.063 240.493 944.583 239.632 cv
850.451 185.061 li
901.551 150.262 li
902.862 149.371 903.646 147.885 903.646 146.298 cv
903.646 93.0122 li
911.917 90.8735 918.055 83.3696 918.055 74.4395 cv
918.055 63.8511 909.44 55.2368 898.851 55.2368 cv
888.262 55.2368 879.646 63.8511 879.646 74.4395 cv
879.646 83.3696 885.783 90.8755 894.054 93.0122 cv
894.054 143.76 li
841.247 179.725 li
581.841 29.1592 li
579.544 27.8291 576.612 28.6094 575.285 30.9009 cv
573.958 33.1943 574.739 36.1294 577.028 37.458 cv
cp
f
697.99 1919.63 mo
692.69 1919.63 688.378 1915.32 688.378 1910.02 cv
688.378 1904.72 692.69 1900.41 697.99 1900.41 cv
703.289 1900.41 707.602 1904.72 707.602 1910.02 cv
707.602 1915.32 703.289 1919.63 697.99 1919.63 cv
cp
702.786 1891.45 mo
702.786 1844.61 li
702.786 1843.15 702.129 1841.78 700.996 1840.87 cv
623.724 1778.72 li
777.31 1585.05 li
778.968 1582.99 778.639 1579.97 776.573 1578.31 cv
774.505 1576.65 771.489 1576.98 769.831 1579.05 cv
473.842 1950.14 li
472.184 1952.21 472.516 1955.23 474.579 1956.88 cv
475.468 1957.6 476.525 1957.94 477.58 1957.94 cv
478.983 1957.94 480.377 1957.33 481.324 1956.15 cv
617.718 1786.2 li
693.195 1846.9 li
693.195 1891.45 li
684.923 1893.58 678.785 1901.09 678.785 1910.02 cv
678.785 1920.61 687.401 1929.22 697.99 1929.22 cv
708.58 1929.22 717.194 1920.61 717.194 1910.02 cv
717.194 1901.09 711.057 1893.58 702.786 1891.45 cv
cp
f
848.671 1709.18 mo
848.671 1714.48 844.36 1718.79 839.058 1718.79 cv
833.76 1718.79 829.448 1714.48 829.448 1709.18 cv
829.448 1703.88 833.76 1699.57 839.058 1699.57 cv
844.36 1699.57 848.671 1703.88 848.671 1709.18 cv
cp
934.885 1600.64 mo
934.885 1486.79 li
934.885 1484.14 932.738 1481.99 930.088 1481.99 cv
927.44 1481.99 925.292 1484.14 925.292 1486.79 cv
925.292 1599.96 li
836.484 1656.51 li
835.101 1657.39 834.263 1658.91 834.263 1660.55 cv
834.263 1690.61 li
825.993 1692.74 819.855 1700.25 819.855 1709.18 cv
819.855 1719.77 828.47 1728.38 839.058 1728.38 cv
849.648 1728.38 858.264 1719.77 858.264 1709.18 cv
858.264 1700.25 852.127 1692.74 843.856 1690.61 cv
843.856 1663.19 li
925.292 1611.33 li
925.292 1795.37 li
925.292 1798.02 927.44 1800.17 930.088 1800.17 cv
932.738 1800.17 934.885 1798.02 934.885 1795.37 cv
934.885 1604.09 li
935.301 1603 935.33 1601.77 934.885 1600.64 cv
cp
f
1843.59 512.337 mo
1848.88 512.337 1853.2 516.647 1853.2 521.949 cv
1853.2 527.25 1848.88 531.562 1843.59 531.562 cv
1838.29 531.562 1833.98 527.25 1833.98 521.949 cv
1833.98 516.647 1838.29 512.337 1843.59 512.337 cv
1572.53 452.65 mo
1548.99 594.354 li
1351.72 710.268 li
1349.44 711.611 1348.67 714.549 1350.01 716.834 cv
1350.91 718.355 1352.51 719.201 1354.15 719.201 cv
1354.98 719.201 1355.82 718.989 1356.58 718.539 cv
1555.78 601.487 li
1557.01 600.768 1557.85 599.541 1558.08 598.139 cv
1567.28 542.751 li
1701.83 589.4 li
1702.34 589.577 1702.87 589.664 1703.4 589.664 cv
1704.06 589.664 1704.73 589.525 1705.35 589.247 cv
1828.83 534.227 li
1832.36 538.455 1837.66 541.153 1843.59 541.153 cv
1854.17 541.153 1862.79 532.539 1862.79 521.949 cv
1862.79 511.361 1854.17 502.744 1843.59 502.744 cv
1833 502.744 1824.38 511.361 1824.38 521.949 cv
1824.38 523.182 1824.51 524.386 1824.73 525.555 cv
1703.18 579.715 li
1568.88 533.151 li
1581.62 456.416 li
1989.45 213.484 li
1991.73 212.129 1992.48 209.184 1991.12 206.911 cv
1989.76 204.634 1986.82 203.887 1984.54 205.245 cv
1574.8 449.314 li
1573.59 450.037 1572.76 451.258 1572.53 452.65 cv
f
1725.64 1379.8 mo
1730.94 1379.8 1735.25 1384.11 1735.25 1389.41 cv
1735.25 1394.71 1730.94 1399.03 1725.64 1399.03 cv
1720.34 1399.03 1716.03 1394.71 1716.03 1389.41 cv
1716.03 1384.11 1720.34 1379.8 1725.64 1379.8 cv
1413.13 1319.36 mo
1481.91 1319.36 li
1537.04 1392.3 li
1537.95 1393.51 1539.37 1394.21 1540.87 1394.21 cv
1707.07 1394.21 li
1709.21 1402.48 1716.71 1408.62 1725.64 1408.62 cv
1736.23 1408.62 1744.84 1400 1744.84 1389.41 cv
1744.84 1378.82 1736.23 1370.21 1725.64 1370.21 cv
1716.71 1370.21 1709.21 1376.35 1707.07 1384.62 cv
1543.26 1384.62 li
1488.12 1311.67 li
1487.21 1310.47 1485.8 1309.77 1484.3 1309.77 cv
1413.13 1309.77 li
1410.48 1309.77 1408.34 1311.91 1408.34 1314.56 cv
1408.34 1317.21 1410.48 1319.36 1413.13 1319.36 cv
f
1879.01 1274.3 mo
1884.31 1274.3 1888.62 1278.61 1888.62 1283.91 cv
1888.62 1289.22 1884.31 1293.53 1879.01 1293.53 cv
1873.71 1293.53 1869.39 1289.22 1869.39 1283.91 cv
1869.39 1278.61 1873.71 1274.3 1879.01 1274.3 cv
1987 1131.55 mo
1446.8 1131.55 li
1444.15 1131.55 1442 1133.7 1442 1136.35 cv
1442 1139 1444.15 1141.14 1446.8 1141.14 cv
1599.23 1141.14 li
1725.83 1287.06 li
1726.74 1288.11 1728.06 1288.71 1729.45 1288.71 cv
1860.43 1288.71 li
1862.57 1296.99 1870.08 1303.12 1879.01 1303.12 cv
1889.6 1303.12 1898.21 1294.51 1898.21 1283.91 cv
1898.21 1273.32 1889.6 1264.7 1879.01 1264.7 cv
1870.08 1264.7 1862.57 1270.84 1860.43 1279.12 cv
1731.64 1279.12 li
1611.92 1141.14 li
1987 1141.14 li
1989.65 1141.14 1991.79 1139 1991.79 1136.35 cv
1991.79 1133.7 1989.65 1131.55 1987 1131.55 cv
f
1842.69 709.571 mo
1847.99 709.571 1852.3 713.884 1852.3 719.183 cv
1852.3 724.484 1847.99 728.797 1842.69 728.797 cv
1837.82 728.797 1833.79 725.147 1833.17 720.441 cv
1833.28 720.037 1833.36 719.622 1833.36 719.183 cv
1833.36 718.746 1833.28 718.33 1833.17 717.927 cv
1833.79 713.219 1837.82 709.571 1842.69 709.571 cv
cp
1981.97 866.673 mo
1981.97 864.026 1979.83 861.876 1977.18 861.876 cv
1529.25 861.876 li
1675.97 723.979 li
1824.12 723.979 li
1826.26 732.252 1833.76 738.388 1842.69 738.388 cv
1853.28 738.388 1861.89 729.773 1861.89 719.183 cv
1861.89 708.595 1853.28 699.98 1842.69 699.98 cv
1833.76 699.98 1826.25 706.118 1824.12 714.389 cv
1673.98 714.389 li
1672.7 714.389 1671.48 714.898 1670.57 715.804 cv
1515.73 861.876 li
1425.37 861.876 li
1422.72 861.876 1420.58 864.026 1420.58 866.673 cv
1420.58 869.322 1422.72 871.467 1425.37 871.467 cv
1977.18 871.467 li
1979.83 871.467 1981.97 869.322 1981.97 866.673 cv
cp
f
1554.22 1724.04 mo
1559.53 1724.04 1563.83 1728.35 1563.83 1733.65 cv
1563.83 1738.95 1559.53 1743.26 1554.22 1743.26 cv
1548.92 1743.26 1544.61 1738.95 1544.61 1733.65 cv
1544.61 1728.35 1548.92 1724.04 1554.22 1724.04 cv
1947.06 1537.73 mo
1952.36 1537.73 1956.67 1542.04 1956.67 1547.34 cv
1956.67 1552.64 1952.36 1556.95 1947.06 1556.95 cv
1941.76 1556.95 1937.45 1552.64 1937.45 1547.34 cv
1937.45 1542.04 1941.76 1537.73 1947.06 1537.73 cv
1977.33 1825.19 mo
1600.38 1621.03 li
1697.35 1552.13 li
1928.49 1552.13 li
1930.63 1560.41 1938.13 1566.55 1947.06 1566.55 cv
1957.65 1566.55 1966.27 1557.93 1966.27 1547.34 cv
1966.27 1536.75 1957.65 1528.14 1947.06 1528.14 cv
1938.13 1528.14 1930.63 1534.27 1928.49 1542.54 cv
1695.82 1542.54 li
1694.82 1542.54 1693.85 1542.85 1693.04 1543.43 cv
1590.98 1615.94 li
1278.6 1447.7 li
1276.27 1446.44 1273.36 1447.3 1272.1 1449.63 cv
1270.84 1451.96 1271.7 1454.87 1274.03 1456.13 cv
1449.45 1550.19 li
1449.45 1665.67 li
1449.45 1667.25 1450.23 1668.72 1451.52 1669.62 cv
1535.9 1727.89 li
1535.33 1729.7 1535.02 1731.64 1535.02 1733.65 cv
1535.02 1744.24 1543.63 1752.85 1554.22 1752.85 cv
1564.81 1752.85 1573.43 1744.24 1573.43 1733.65 cv
1573.43 1723.06 1564.81 1714.44 1554.22 1714.44 cv
1549.1 1714.44 1544.45 1716.47 1541.01 1719.75 cv
1459.05 1663.16 li
1459.05 1555.39 li
1972.76 1833.62 li
1973.49 1834.01 1974.27 1834.2 1975.04 1834.2 cv
1976.74 1834.2 1978.39 1833.29 1979.26 1831.69 cv
1980.52 1829.36 1979.65 1826.45 1977.33 1825.19 cv
f
1483.79 137.179 mo
1483.79 142.48 1479.48 146.792 1474.18 146.792 cv
1468.88 146.792 1464.57 142.48 1464.57 137.179 cv
1464.57 131.881 1468.88 127.569 1474.18 127.569 cv
1479.48 127.569 1483.79 131.881 1483.79 137.179 cv
cp
1791.96 112.182 mo
1797.26 112.182 1801.57 116.493 1801.57 121.792 cv
1801.57 127.094 1797.26 131.406 1791.96 131.406 cv
1786.66 131.406 1782.34 127.094 1782.34 121.792 cv
1782.34 116.493 1786.66 112.182 1791.96 112.182 cv
cp
1454.97 137.179 mo
1454.97 139.832 1455.51 142.359 1456.49 144.661 cv
1412.67 172.541 li
1411.44 173.325 1410.63 174.624 1410.47 176.074 cv
1399.27 280.122 li
1251.61 373.031 li
1250.4 373.833 1249.62 375.135 1249.48 376.58 cv
1241.22 589.99 li
1240.97 592.627 1242.9 594.969 1245.54 595.22 cv
1245.69 595.234 1245.85 595.243 1246 595.243 cv
1248.44 595.243 1250.53 593.383 1250.77 590.903 cv
1258.81 379.779 li
1530.31 205.275 li
1637.41 232.937 li
1637.8 233.039 1638.21 233.089 1638.61 233.089 cv
1639.57 233.089 1640.51 232.803 1641.31 232.253 cv
1780.53 137.189 li
1783.72 139.569 1787.68 140.999 1791.96 140.999 cv
1802.55 140.999 1811.16 132.384 1811.16 121.792 cv
1811.16 111.204 1802.55 102.589 1791.96 102.589 cv
1781.37 102.589 1772.75 111.204 1772.75 121.792 cv
1772.75 124.617 1773.38 127.288 1774.48 129.706 cv
1637.7 223.104 li
1541.11 198.158 li
1764.02 51.2886 li
1766.23 49.833 1766.84 46.8579 1765.38 44.6465 cv
1763.93 42.4331 1760.95 41.8237 1758.74 43.2778 cv
1527.01 195.963 li
1526.99 195.974 li
1409.66 273.282 li
1419.77 179.394 li
1462.36 152.29 li
1465.63 154.845 1469.72 156.384 1474.18 156.384 cv
1484.77 156.384 1493.38 147.769 1493.38 137.179 cv
1493.38 126.59 1484.77 117.976 1474.18 117.976 cv
1463.59 117.976 1454.97 126.59 1454.97 137.179 cv
cp
f
1091.61 110.457 mo
1091.61 105.158 1095.92 100.847 1101.22 100.847 cv
1106.52 100.847 1110.83 105.158 1110.83 110.457 cv
1110.83 115.758 1106.52 120.069 1101.22 120.069 cv
1095.92 120.069 1091.61 115.758 1091.61 110.457 cv
cp
1057.9 514.258 mo
1060.54 514.258 1062.69 512.11 1062.69 509.463 cv
1062.69 282.563 li
1494.56 32.2788 li
1496.86 30.9502 1497.64 28.0151 1496.31 25.7217 cv
1494.98 23.4302 1492.04 22.6519 1489.75 23.98 cv
1158.8 215.741 li
1106.02 179.782 li
1106.02 129.03 li
1114.29 126.891 1120.42 119.387 1120.42 110.457 cv
1120.42 99.8687 1111.81 91.2544 1101.22 91.2544 cv
1090.63 91.2544 1082.02 99.8687 1082.02 110.457 cv
1082.02 119.387 1088.15 126.891 1096.43 129.03 cv
1096.43 182.316 li
1096.43 183.903 1097.21 185.384 1098.52 186.28 cv
1149.6 221.077 li
1055.49 275.65 li
1054.01 276.51 1053.1 278.089 1053.1 279.801 cv
1053.1 509.463 li
1053.1 512.11 1055.25 514.258 1057.9 514.258 cv
cp
f
1272.65 1932.04 mo
1272.65 1937.34 1268.34 1941.65 1263.05 1941.65 cv
1257.75 1941.65 1253.44 1937.34 1253.44 1932.04 cv
1253.44 1926.74 1257.75 1922.43 1263.05 1922.43 cv
1268.34 1922.43 1272.65 1926.74 1272.65 1932.04 cv
1175.65 1582.95 mo
1173.99 1580.88 1170.97 1580.55 1168.91 1582.21 cv
1166.84 1583.87 1166.51 1586.88 1168.17 1588.95 cv
1337.29 1800.74 li
1260.04 1862.89 li
1258.91 1863.8 1258.25 1865.17 1258.25 1866.63 cv
1258.25 1913.47 li
1249.98 1915.61 1243.85 1923.11 1243.85 1932.04 cv
1243.85 1942.63 1252.46 1951.24 1263.05 1951.24 cv
1273.63 1951.24 1282.24 1942.63 1282.24 1932.04 cv
1282.24 1923.11 1276.11 1915.6 1267.84 1913.47 cv
1267.84 1868.92 li
1343.29 1808.22 li
1479.69 1978.17 li
1480.64 1979.35 1482.03 1979.96 1483.43 1979.96 cv
1484.48 1979.96 1485.54 1979.62 1486.43 1978.91 cv
1488.5 1977.25 1488.83 1974.23 1487.17 1972.16 cv
1175.65 1582.95 li
f
1125 1891.96 mo
1119.7 1891.96 1115.39 1887.65 1115.39 1882.35 cv
1115.39 1877.05 1119.7 1872.74 1125 1872.74 cv
1130.29 1872.74 1134.6 1877.05 1134.6 1882.35 cv
1134.6 1887.65 1130.29 1891.96 1125 1891.96 cv
1129.79 1863.78 mo
1129.79 1833.72 li
1129.79 1832.08 1128.95 1830.56 1127.57 1829.68 cv
1038.77 1773.13 li
1038.77 1450.75 li
1038.77 1448.1 1036.62 1445.96 1033.97 1445.96 cv
1031.32 1445.96 1029.18 1448.1 1029.18 1450.75 cv
1029.18 1773.81 li
1028.73 1774.94 1028.76 1776.16 1029.18 1777.26 cv
1029.18 1968.54 li
1029.18 1971.19 1031.32 1973.33 1033.97 1973.33 cv
1036.62 1973.33 1038.77 1971.19 1038.77 1968.54 cv
1038.77 1784.5 li
1120.2 1836.35 li
1120.2 1863.78 li
1111.93 1865.91 1105.8 1873.42 1105.8 1882.35 cv
1105.8 1892.94 1114.41 1901.55 1125 1901.55 cv
1135.58 1901.55 1144.19 1892.94 1144.19 1882.35 cv
1144.19 1873.42 1138.06 1865.91 1129.79 1863.78 cv
f
1732.09 974.464 mo
1737.4 974.464 1741.71 978.776 1741.71 984.076 cv
1741.71 989.377 1737.4 993.689 1732.09 993.689 cv
1726.79 993.689 1722.48 989.377 1722.48 984.076 cv
1722.48 978.776 1726.79 974.464 1732.09 974.464 cv
cp
1732.09 1003.28 mo
1742.69 1003.28 1751.3 994.666 1751.3 984.076 cv
1751.3 973.487 1742.69 964.873 1732.09 964.873 cv
1723.17 964.873 1715.66 971.01 1713.52 979.281 cv
1457.4 979.281 li
1454.75 979.281 1452.61 981.429 1452.61 984.076 cv
1452.61 986.726 1454.75 988.872 1457.4 988.872 cv
1713.52 988.872 li
1715.66 997.145 1723.17 1003.28 1732.09 1003.28 cv
cp
f
627.501 1675.49 mo
548.665 1675.49 li
549.848 1674.58 550.547 1673.18 550.547 1671.68 cv
550.547 1556.2 li
646.128 1503.65 li
646.128 1656.86 li
646.128 1667.15 637.788 1675.49 627.501 1675.49 cv
531.792 1675.49 mo
330.299 1675.49 li
540.954 1561.4 li
540.954 1669.16 li
531.792 1675.49 li
310.159 1675.49 mo
152.125 1675.49 li
141.837 1675.49 133.497 1667.15 133.497 1656.86 cv
133.497 1558.14 li
302.651 1558.14 li
399.623 1627.03 li
310.159 1675.49 li
409.018 1621.95 mo
306.96 1549.44 li
306.148 1548.86 305.177 1548.55 304.181 1548.55 cv
133.497 1548.55 li
133.497 1444.98 li
135.894 1446.06 138.551 1446.66 141.345 1446.66 cv
150.275 1446.66 157.779 1440.52 159.916 1432.25 cv
280.039 1432.25 li
281.544 1432.25 282.959 1431.54 283.865 1430.34 cv
305.021 1402.35 li
627.501 1402.35 li
637.788 1402.35 646.128 1410.69 646.128 1420.98 cv
646.128 1492.41 li
409.018 1621.95 li
141.345 1437.06 mo
138.108 1437.06 135.24 1435.45 133.497 1433 cv
133.497 1421.9 li
135.24 1419.45 138.108 1417.84 141.345 1417.84 cv
146.644 1417.84 150.955 1422.15 150.955 1427.45 cv
150.955 1432.75 146.644 1437.06 141.345 1437.06 cv
277.652 1422.65 mo
159.916 1422.65 li
157.779 1414.38 150.275 1408.25 141.345 1408.25 cv
140.312 1408.25 139.298 1408.33 138.31 1408.49 cv
141.718 1404.72 146.645 1402.35 152.125 1402.35 cv
292.997 1402.35 li
277.652 1422.65 li
level3{
gsave
clp
[1000 0 0 1000 1000 1000 ]ct
/1 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~nBclfnBclfnBZfenBZfenBZfenBZffn'?]en'?]en'?]en'?]en'?]en'?]en'?]en'?]fn'?]fn'?]f
n'?]fn'?]fn'?]fn'?]fn'?`hn'?`hn'?`hn'?`hn'?`hn'?`hn'?`hn'?`hn'?`ima$Whma$Whma$Wh
ma$Whma$Whm`pQhmEUHgmEUKhmEUKhmEUKhmEUKhmEUKimEUKim*1<gm*1<gm*1<gm*1<gm*1<hm*1<h
m*1?im*1?ilck6hlcb0glcb0glcb0hlcb0hlcb0hlcb0hlHG'glHG*hlHG*ilH>$hlH>$hlH>$hl-"pg
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1000 0 0 1000 1000 1000 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*]W3mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2
mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBK0mHs<.mHs<.
mHs<.mHs<.mHs<.mHs<-m-O**m-O**m-O**m-O**m-O**m-O**m-O*)lg*m&lg*m&lg*m&lg*m&lg*m&
lg*m&lg*m&lg*m&lK[["lK[["lK[["lK[["lK[["lK[["lK[["l07Hsl07Hsl07Hsl07Hsl07Hsl07Hs
~>
<~cd0q`cd0q`cd'h]cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\
cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\
cHa_\cHa_\cHa_[c-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MWbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
bfn;Tbfn;Tbfn;Tbfn;TbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)PbKJ)Pb0%lLb0%lLb0%lL
~>
<~KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3KS5#3
KS5#3KS5#3KS5#3KS5&5KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57KnY57
KnY57KnY57KnY57KnY58L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G<
LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LPLY?LkpkCLkpkCLkpkCLkpkCLkpkCLkpkC
~>
<~Vl-GjVl-GjVl-GjVl-GjVl6PmW2QYnW2QYnW2QYnW2QYnW2QYnW2QYnW2QYnW2ZbqWMukrWMukrWMukr
WMukrWMukrWMukrWMuntWiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE,#X/i;%X/i;%X/i;%X/i;%
X/i;%X/i;&XK8M)XK8M)XK8M)XK8M)XK8M)XK8M*Xf\_-Xf\_-Xf\_-Xf\_-Xf\_-Xf\_.Y-+q1Y-+q1
Y-+q1Y-+q1Y-+q1Y-+q1Y-+q1YHP.5YHP.5YHP.5YHP.5YHP.5YHP.5Yct@9Yct@9Yct@9Yct@9Yct@9
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
141.345 1446.66 mo
138.551 1446.66 135.894 1446.06 133.497 1444.98 cv
133.497 1433 li
135.24 1435.45 138.108 1437.06 141.345 1437.06 cv
146.644 1437.06 150.955 1432.75 150.955 1427.45 cv
150.955 1422.15 146.644 1417.84 141.345 1417.84 cv
138.108 1417.84 135.24 1419.45 133.497 1421.9 cv
133.497 1420.98 li
133.497 1416.17 135.319 1411.79 138.31 1408.49 cv
139.298 1408.33 140.312 1408.25 141.345 1408.25 cv
150.275 1408.25 157.779 1414.38 159.916 1422.65 cv
277.652 1422.65 li
292.997 1402.35 li
305.021 1402.35 li
283.865 1430.34 li
282.959 1431.54 281.544 1432.25 280.039 1432.25 cv
159.916 1432.25 li
157.779 1440.52 150.275 1446.66 141.345 1446.66 cv
.985992 .79086 .469276 .486824 cmyk
f
548.665 1675.49 mo
531.792 1675.49 li
540.954 1669.16 li
540.954 1561.4 li
330.299 1675.49 li
310.159 1675.49 li
399.623 1627.03 li
302.651 1558.14 li
133.497 1558.14 li
133.497 1548.55 li
304.181 1548.55 li
305.177 1548.55 306.148 1548.86 306.96 1549.44 cv
409.018 1621.95 li
646.128 1492.41 li
646.128 1503.65 li
550.547 1556.2 li
550.547 1671.68 li
550.547 1673.18 549.848 1674.58 548.665 1675.49 cv
f
629.282 1635.99 mo
629.282 1646.21 620.999 1654.49 610.783 1654.49 cv
138.699 1654.49 li
128.483 1654.49 120.2 1646.21 120.2 1635.99 cv
120.2 1401.74 li
120.2 1391.53 128.483 1383.25 138.699 1383.25 cv
610.783 1383.25 li
620.999 1383.25 629.282 1391.53 629.282 1401.74 cv
629.282 1635.99 li
cp
.55053 .0135195 0 0 cmyk
f
138.699 1386.25 mo
130.153 1386.25 123.2 1393.2 123.2 1401.74 cv
123.2 1635.99 li
123.2 1644.54 130.153 1651.49 138.699 1651.49 cv
610.783 1651.49 li
619.329 1651.49 626.282 1644.54 626.282 1635.99 cv
626.282 1401.74 li
626.282 1393.2 619.329 1386.25 610.783 1386.25 cv
138.699 1386.25 li
cp
610.783 1657.49 mo
138.699 1657.49 li
126.845 1657.49 117.2 1647.85 117.2 1635.99 cv
117.2 1401.74 li
117.2 1389.89 126.845 1380.25 138.699 1380.25 cv
610.783 1380.25 li
622.637 1380.25 632.282 1389.89 632.282 1401.74 cv
632.282 1635.99 li
632.282 1647.85 622.637 1657.49 610.783 1657.49 cv
cp
.0324102 .0552682 .987488 0 cmyk
f
610.783 1383.25 mo
138.699 1383.25 li
128.483 1383.25 120.2 1391.53 120.2 1401.74 cv
120.2 1450.39 li
629.282 1450.39 li
629.282 1401.74 li
629.282 1391.53 620.999 1383.25 610.783 1383.25 cv
cp
f
580.372 1420.78 mo
580.372 1428.61 586.719 1434.96 594.55 1434.96 cv
602.381 1434.96 608.729 1428.61 608.729 1420.78 cv
608.729 1412.95 602.381 1406.6 594.55 1406.6 cv
586.719 1406.6 580.372 1412.95 580.372 1420.78 cv
cp
.982177 .83093 .440131 .449622 cmyk
f
541.538 1420.78 mo
541.538 1428.61 547.884 1434.96 555.715 1434.96 cv
563.546 1434.96 569.894 1428.61 569.894 1420.78 cv
569.894 1412.95 563.546 1406.6 555.715 1406.6 cv
547.884 1406.6 541.538 1412.95 541.538 1420.78 cv
cp
f
502.702 1420.78 mo
502.702 1428.61 509.049 1434.96 516.88 1434.96 cv
524.71 1434.96 531.059 1428.61 531.059 1420.78 cv
531.059 1412.95 524.71 1406.6 516.88 1406.6 cv
509.049 1406.6 502.702 1412.95 502.702 1420.78 cv
cp
f
339.375 1585.49 mo
287.518 1561.4 li
287.518 1551.94 li
339.375 1527.91 li
339.375 1540.69 li
303.85 1555.49 li
298.448 1556.64 li
298.448 1557.02 li
303.85 1558.23 li
339.375 1572.72 li
339.375 1585.49 li
cp
.867948 .695552 .584497 .694728 cmyk
f
347.319 1600.23 mo
385.958 1499.76 li
396.507 1499.76 li
357.932 1600.23 li
347.319 1600.23 li
cp
f
407.628 1586.76 mo
407.628 1574.3 li
445.632 1559.18 li
450.97 1558.1 li
450.97 1557.72 li
445.632 1556.45 li
407.628 1541.58 li
407.628 1529.18 li
461.965 1553.21 li
461.965 1562.67 li
407.628 1586.76 li
cp
f
1806.03 1913.98 mo
1440.6 1913.98 li
1188.84 1599.42 li
1449.45 1599.42 li
1449.45 1665.67 li
1449.45 1667.25 1450.23 1668.72 1451.52 1669.62 cv
1535.9 1727.89 li
1535.33 1729.7 1535.02 1731.64 1535.02 1733.65 cv
1535.02 1744.24 1543.63 1752.85 1554.22 1752.85 cv
1564.81 1752.85 1573.43 1744.24 1573.43 1733.65 cv
1573.43 1723.06 1564.81 1714.44 1554.22 1714.44 cv
1549.1 1714.44 1544.45 1716.47 1541.01 1719.75 cv
1459.05 1663.16 li
1459.05 1599.42 li
1540.34 1599.42 li
1825.78 1754.02 li
1825.78 1894.23 li
1825.78 1905.14 1816.94 1913.98 1806.03 1913.98 cv
1554.22 1743.26 mo
1548.92 1743.26 1544.61 1738.95 1544.61 1733.65 cv
1544.61 1728.35 1548.92 1724.04 1554.22 1724.04 cv
1559.53 1724.04 1563.83 1728.35 1563.83 1733.65 cv
1563.83 1738.95 1559.53 1743.26 1554.22 1743.26 cv
1825.78 1743.11 mo
1600.38 1621.03 li
1630.79 1599.42 li
1806.03 1599.42 li
1816.94 1599.42 1825.78 1608.26 1825.78 1619.17 cv
1825.78 1743.11 li
1590.98 1615.94 mo
1560.31 1599.42 li
1614.24 1599.42 li
1590.98 1615.94 li
level3{
gsave
clp
[1000 0 0 1000 1000 1000 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1000 0 0 1000 1000 1000 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
1825.78 1754.02 mo
1540.34 1599.42 li
1560.31 1599.42 li
1590.98 1615.94 li
1614.24 1599.42 li
1630.79 1599.42 li
1600.38 1621.03 li
1825.78 1743.11 li
1825.78 1754.02 li
1554.22 1752.85 mo
1543.63 1752.85 1535.02 1744.24 1535.02 1733.65 cv
1535.02 1731.64 1535.33 1729.7 1535.9 1727.89 cv
1451.52 1669.62 li
1450.23 1668.72 1449.45 1667.25 1449.45 1665.67 cv
1449.45 1599.42 li
1459.05 1599.42 li
1459.05 1663.16 li
1541.01 1719.75 li
1544.45 1716.47 1549.1 1714.44 1554.22 1714.44 cv
1564.81 1714.44 1573.43 1723.06 1573.43 1733.65 cv
1573.43 1744.24 1564.81 1752.85 1554.22 1752.85 cv
1554.22 1724.04 mo
1548.92 1724.04 1544.61 1728.35 1544.61 1733.65 cv
1544.61 1738.95 1548.92 1743.26 1554.22 1743.26 cv
1559.53 1743.26 1563.83 1738.95 1563.83 1733.65 cv
1563.83 1728.35 1559.53 1724.04 1554.22 1724.04 cv
.985992 .79086 .469276 .486824 cmyk
f
1428.17 1913.98 mo
1269.49 1913.98 li
1268.95 1913.78 1268.4 1913.61 1267.84 1913.47 cv
1267.84 1868.92 li
1343.29 1808.22 li
1428.17 1913.98 li
1256.6 1913.98 mo
1038.77 1913.98 li
1038.77 1784.5 li
1120.2 1836.35 li
1120.2 1863.78 li
1111.93 1865.91 1105.8 1873.42 1105.8 1882.35 cv
1105.8 1892.94 1114.41 1901.55 1125 1901.55 cv
1135.58 1901.55 1144.19 1892.94 1144.19 1882.35 cv
1144.19 1873.42 1138.06 1865.91 1129.79 1863.78 cv
1129.79 1833.72 li
1129.79 1832.08 1128.95 1830.56 1127.57 1829.68 cv
1038.77 1773.13 li
1038.77 1599.42 li
1176.53 1599.42 li
1337.29 1800.74 li
1260.04 1862.89 li
1258.91 1863.8 1258.25 1865.17 1258.25 1866.63 cv
1258.25 1913.47 li
1257.69 1913.61 1257.14 1913.78 1256.6 1913.98 cv
1029.18 1912.37 mo
1022.15 1909.34 1017.24 1902.36 1017.24 1894.23 cv
1017.24 1619.17 li
1017.24 1611.04 1022.15 1604.05 1029.18 1601.03 cv
1029.18 1773.81 li
1028.73 1774.94 1028.76 1776.16 1029.18 1777.26 cv
1029.18 1912.37 li
1125 1891.96 mo
1119.7 1891.96 1115.39 1887.65 1115.39 1882.35 cv
1115.39 1877.05 1119.7 1872.74 1125 1872.74 cv
1130.29 1872.74 1134.6 1877.05 1134.6 1882.35 cv
1134.6 1887.65 1130.29 1891.96 1125 1891.96 cv
level3{
gsave
clp
[1000 0 0 1000 1000 1000 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1000 0 0 1000 1000 1000 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
1440.6 1913.98 mo
1428.17 1913.98 li
1343.29 1808.22 li
1267.84 1868.92 li
1267.84 1913.47 li
1268.4 1913.61 1268.95 1913.78 1269.49 1913.98 cv
1256.6 1913.98 li
1257.14 1913.78 1257.69 1913.61 1258.25 1913.47 cv
1258.25 1866.63 li
1258.25 1865.17 1258.91 1863.8 1260.04 1862.89 cv
1337.29 1800.74 li
1176.53 1599.42 li
1188.84 1599.42 li
1440.6 1913.98 li
.985992 .79086 .469276 .486824 cmyk
f
1038.77 1913.98 mo
1036.99 1913.98 li
1034.21 1913.98 1031.57 1913.4 1029.18 1912.37 cv
1029.18 1777.26 li
1028.76 1776.16 1028.73 1774.94 1029.18 1773.81 cv
1029.18 1601.03 li
1031.57 1599.99 1034.21 1599.42 1036.99 1599.42 cv
1038.77 1599.42 li
1038.77 1773.13 li
1127.57 1829.68 li
1128.95 1830.56 1129.79 1832.08 1129.79 1833.72 cv
1129.79 1863.78 li
1138.06 1865.91 1144.19 1873.42 1144.19 1882.35 cv
1144.19 1892.94 1135.58 1901.55 1125 1901.55 cv
1114.41 1901.55 1105.8 1892.94 1105.8 1882.35 cv
1105.8 1873.42 1111.93 1865.91 1120.2 1863.78 cv
1120.2 1836.35 li
1038.77 1784.5 li
1038.77 1913.98 li
1125 1872.74 mo
1119.7 1872.74 1115.39 1877.05 1115.39 1882.35 cv
1115.39 1887.65 1119.7 1891.96 1125 1891.96 cv
1130.29 1891.96 1134.6 1887.65 1134.6 1882.35 cv
1134.6 1877.05 1130.29 1872.74 1125 1872.74 cv
f
1837.85 1873 mo
1837.85 1883.76 1829.12 1892.49 1818.36 1892.49 cv
1059.36 1892.49 li
1048.59 1892.49 1039.87 1883.76 1039.87 1873 cv
1039.87 1601.52 li
1039.87 1590.76 1048.59 1582.04 1059.36 1582.04 cv
1818.36 1582.04 li
1829.12 1582.04 1837.85 1590.76 1837.85 1601.52 cv
1837.85 1873 li
cp
.55053 .0135195 0 0 cmyk
f
1059.36 1585.04 mo
1050.27 1585.04 1042.87 1592.43 1042.87 1601.52 cv
1042.87 1873 li
1042.87 1882.09 1050.27 1889.49 1059.36 1889.49 cv
1818.36 1889.49 li
1827.45 1889.49 1834.85 1882.09 1834.85 1873 cv
1834.85 1601.52 li
1834.85 1592.43 1827.45 1585.04 1818.36 1585.04 cv
1059.36 1585.04 li
cp
1818.36 1895.49 mo
1059.36 1895.49 li
1046.96 1895.49 1036.87 1885.4 1036.87 1873 cv
1036.87 1601.52 li
1036.87 1589.13 1046.96 1579.04 1059.36 1579.04 cv
1818.36 1579.04 li
1830.76 1579.04 1840.85 1589.13 1840.85 1601.52 cv
1840.85 1873 li
1840.85 1885.4 1830.76 1895.49 1818.36 1895.49 cv
cp
.0324102 .0552682 .987488 0 cmyk
f
1818.36 1582.04 mo
1059.36 1582.04 li
1048.59 1582.04 1039.87 1590.76 1039.87 1601.52 cv
1039.87 1652.77 li
1837.85 1652.77 li
1837.85 1601.52 li
1837.85 1590.76 1829.12 1582.04 1818.36 1582.04 cv
cp
f
1786.32 1621.58 mo
1786.32 1629.83 1793.01 1636.52 1801.26 1636.52 cv
1809.51 1636.52 1816.2 1629.83 1816.2 1621.58 cv
1816.2 1613.33 1809.51 1606.64 1801.26 1606.64 cv
1793.01 1606.64 1786.32 1613.33 1786.32 1621.58 cv
cp
.982177 .83093 .440131 .449622 cmyk
f
1745.41 1621.58 mo
1745.41 1629.83 1752.1 1636.52 1760.35 1636.52 cv
1768.6 1636.52 1775.29 1629.83 1775.29 1621.58 cv
1775.29 1613.33 1768.6 1606.64 1760.35 1606.64 cv
1752.1 1606.64 1745.41 1613.33 1745.41 1621.58 cv
cp
f
1704.5 1621.58 mo
1704.5 1629.83 1711.19 1636.52 1719.44 1636.52 cv
1727.69 1636.52 1734.37 1629.83 1734.37 1621.58 cv
1734.37 1613.33 1727.69 1606.64 1719.44 1606.64 cv
1711.19 1606.64 1704.5 1613.33 1704.5 1621.58 cv
cp
f
1103.46 1763.6 mo
1118.93 1763.6 li
1111.77 1743.78 li
1111.36 1742.67 li
1111.16 1742.67 li
1110.76 1743.78 li
1103.46 1763.6 li
cp
1087.83 1782.94 mo
1087.83 1778.73 li
1091.45 1778.22 li
1108.49 1734.21 li
1114.14 1734.21 li
1130.88 1778.22 li
1134.46 1778.73 li
1134.46 1782.94 li
1120.47 1782.94 li
1120.47 1778.73 li
1124.15 1778.09 li
1120.94 1769.12 li
1101.42 1769.12 li
1098.11 1778.09 li
1101.79 1778.73 li
1101.79 1782.94 li
1087.83 1782.94 li
cp
.867948 .695552 .584497 .694728 cmyk
f
1139.21 1782.94 mo
1139.21 1778.73 li
1144.67 1777.79 li
1144.67 1751.91 li
1139.21 1750.98 li
1139.21 1746.72 li
1150.56 1746.72 li
1151.13 1751.34 li
1151.2 1751.98 li
1152.22 1750.13 1153.49 1748.68 1155 1747.63 cv
1156.5 1746.58 1158.23 1746.05 1160.17 1746.05 cv
1160.86 1746.05 1161.57 1746.12 1162.29 1746.24 cv
1163.02 1746.36 1163.54 1746.48 1163.85 1746.59 cv
1162.98 1752.72 li
1158.4 1752.45 li
1156.65 1752.34 1155.19 1752.73 1154.01 1753.64 cv
1152.83 1754.54 1151.91 1755.75 1151.27 1757.27 cv
1151.27 1777.79 li
1156.72 1778.73 li
1156.72 1782.94 li
1139.21 1782.94 li
cp
f
1181.73 1783.51 mo
1179.05 1783.51 1176.92 1782.73 1175.35 1781.15 cv
1173.78 1779.58 1172.99 1777.06 1172.99 1773.6 cv
1172.99 1751.61 li
1167.27 1751.61 li
1167.27 1746.72 li
1172.99 1746.72 li
1172.99 1737.99 li
1179.58 1737.99 li
1179.58 1746.72 li
1187.45 1746.72 li
1187.45 1751.61 li
1179.58 1751.61 li
1179.58 1773.6 li
1179.58 1775.34 1179.93 1776.63 1180.62 1777.45 cv
1181.31 1778.28 1182.24 1778.69 1183.4 1778.69 cv
1184.18 1778.69 1185.05 1778.62 1186.01 1778.47 cv
1186.97 1778.33 1187.72 1778.2 1188.25 1778.09 cv
1189.16 1782.41 li
1188.2 1782.7 1187.02 1782.95 1185.63 1783.18 cv
1184.23 1783.4 1182.93 1783.51 1181.73 1783.51 cv
cp
f
1198.26 1737.79 mo
1198.26 1730.72 li
1205.19 1730.72 li
1205.19 1737.79 li
1198.26 1737.79 li
cp
1193.14 1782.94 mo
1193.14 1778.73 li
1198.6 1777.79 li
1198.6 1751.91 li
1193.14 1750.98 li
1193.14 1746.72 li
1205.19 1746.72 li
1205.19 1777.79 li
1210.65 1778.73 li
1210.65 1782.94 li
1193.14 1782.94 li
cp
f
1214.43 1782.94 mo
1214.43 1778.73 li
1219.89 1777.79 li
1219.89 1751.61 li
1214.23 1751.61 li
1214.23 1746.72 li
1219.89 1746.72 li
1219.89 1742.81 li
1219.89 1738.75 1221.08 1735.6 1223.47 1733.37 cv
1225.86 1731.14 1229.16 1730.02 1233.38 1730.02 cv
1234.85 1730.02 1236.32 1730.2 1237.8 1730.56 cv
1239.27 1730.91 1240.96 1731.42 1242.88 1732.06 cv
1241.78 1737.42 li
1240.6 1736.95 1239.34 1736.55 1238 1736.21 cv
1236.66 1735.88 1235.29 1735.71 1233.88 1735.71 cv
1231.25 1735.71 1229.35 1736.29 1228.21 1737.45 cv
1227.06 1738.61 1226.48 1740.4 1226.48 1742.81 cv
1226.48 1746.72 li
1247.14 1746.72 li
1247.14 1777.79 li
1252.59 1778.73 li
1252.59 1782.94 li
1235.08 1782.94 li
1235.08 1778.73 li
1240.54 1777.79 li
1240.54 1751.61 li
1226.48 1751.61 li
1226.48 1777.79 li
1231.94 1778.73 li
1231.94 1782.94 li
1214.43 1782.94 li
cp
f
1273.04 1783.65 mo
1269.76 1783.65 1266.91 1782.88 1264.47 1781.35 cv
1262.04 1779.83 1260.16 1777.7 1258.82 1774.98 cv
1257.48 1772.25 1256.81 1769.11 1256.81 1765.54 cv
1256.81 1764.13 li
1256.81 1760.69 1257.46 1757.61 1258.75 1754.89 cv
1260.04 1752.17 1261.91 1750.02 1264.34 1748.43 cv
1266.77 1746.85 1269.67 1746.05 1273.04 1746.05 cv
1275.97 1746.05 1278.53 1746.54 1280.73 1747.5 cv
1282.92 1748.45 1284.77 1749.77 1286.27 1751.44 cv
1286.43 1760.15 li
1281.28 1760.15 li
1280.14 1753.82 li
1279.38 1753.04 1278.43 1752.41 1277.3 1751.95 cv
1276.16 1751.48 1274.82 1751.24 1273.28 1751.24 cv
1271.31 1751.24 1269.59 1751.82 1268.11 1752.98 cv
1266.62 1754.14 1265.47 1755.7 1264.64 1757.64 cv
1263.82 1759.58 1263.4 1761.74 1263.4 1764.13 cv
1263.4 1765.54 li
1263.4 1768.17 1263.79 1770.46 1264.56 1772.4 cv
1265.33 1774.34 1266.43 1775.84 1267.87 1776.9 cv
1269.31 1777.96 1271.03 1778.49 1273.01 1778.49 cv
1275.24 1778.49 1277.09 1777.88 1278.57 1776.65 cv
1280.04 1775.42 1280.94 1773.74 1281.28 1771.6 cv
1287.2 1771.6 li
1287.27 1771.8 li
1287.16 1773.87 1286.54 1775.81 1285.43 1777.62 cv
1284.31 1779.43 1282.72 1780.88 1280.66 1781.99 cv
1278.6 1783.09 1276.06 1783.65 1273.04 1783.65 cv
cp
f
1297.28 1737.79 mo
1297.28 1730.72 li
1304.21 1730.72 li
1304.21 1737.79 li
1297.28 1737.79 li
cp
1292.16 1782.94 mo
1292.16 1778.73 li
1297.62 1777.79 li
1297.62 1751.91 li
1292.16 1750.98 li
1292.16 1746.72 li
1304.21 1746.72 li
1304.21 1777.79 li
1309.67 1778.73 li
1309.67 1782.94 li
1292.16 1782.94 li
cp
f
1326.91 1778.12 mo
1329.09 1778.12 1331.09 1777.6 1332.9 1776.55 cv
1334.7 1775.5 1336 1774.24 1336.78 1772.77 cv
1336.78 1766.21 li
1330.08 1766.21 li
1327.05 1766.21 1324.77 1766.93 1323.26 1768.38 cv
1321.74 1769.83 1320.98 1771.45 1320.98 1773.24 cv
1320.98 1774.82 1321.47 1776.03 1322.45 1776.87 cv
1323.43 1777.7 1324.92 1778.12 1326.91 1778.12 cv
cp
1325.93 1783.65 mo
1322.16 1783.65 1319.29 1782.73 1317.33 1780.88 cv
1315.37 1779.04 1314.38 1776.45 1314.38 1773.1 cv
1314.38 1770.8 1315.02 1768.8 1316.28 1767.09 cv
1317.54 1765.39 1319.36 1764.06 1321.75 1763.11 cv
1324.14 1762.16 1326.99 1761.69 1330.32 1761.69 cv
1336.78 1761.69 li
1336.78 1758.14 li
1336.78 1755.95 1336.12 1754.25 1334.79 1753.05 cv
1333.46 1751.84 1331.59 1751.24 1329.18 1751.24 cv
1327.66 1751.24 1326.35 1751.43 1325.23 1751.79 cv
1324.12 1752.16 1323.1 1752.67 1322.19 1753.32 cv
1321.48 1758.37 li
1316.39 1758.37 li
1316.39 1750.07 li
1318.02 1748.75 1319.92 1747.76 1322.08 1747.08 cv
1324.25 1746.39 1326.65 1746.05 1329.28 1746.05 cv
1333.68 1746.05 1337.13 1747.1 1339.63 1749.2 cv
1342.12 1751.3 1343.38 1754.3 1343.38 1758.21 cv
1343.38 1775.65 li
1343.38 1776.11 1343.38 1776.57 1343.39 1777.02 cv
1343.4 1777.46 1343.43 1777.91 1343.47 1778.36 cv
1346.99 1778.73 li
1346.99 1782.94 li
1337.52 1782.94 li
1337.32 1781.96 1337.16 1781.08 1337.05 1780.3 cv
1336.94 1779.52 1336.86 1778.74 1336.81 1777.96 cv
1335.54 1779.58 1333.95 1780.94 1332.04 1782.02 cv
1330.13 1783.1 1328.1 1783.65 1325.93 1783.65 cv
cp
f
1351.78 1782.94 mo
1351.78 1778.73 li
1357.23 1777.79 li
1357.23 1735.91 li
1351.78 1734.97 li
1351.78 1730.72 li
1363.83 1730.72 li
1363.83 1777.79 li
1369.28 1778.73 li
1369.28 1782.94 li
1351.78 1782.94 li
cp
f
1375.48 1788.1 mo
1375.48 1782.94 li
1406.34 1782.94 li
1406.34 1788.1 li
1375.48 1788.1 li
cp
f
1413.3 1782.94 mo
1413.3 1778.73 li
1418.76 1777.79 li
1418.76 1739.39 li
1413.3 1738.46 li
1413.3 1734.21 li
1430.81 1734.21 li
1430.81 1738.46 li
1425.35 1739.39 li
1425.35 1777.79 li
1430.81 1778.73 li
1430.81 1782.94 li
1413.3 1782.94 li
cp
f
1436 1782.94 mo
1436 1778.73 li
1441.46 1777.79 li
1441.46 1751.91 li
1436 1750.98 li
1436 1746.72 li
1447.35 1746.72 li
1447.81 1752.11 li
1449.02 1750.19 1450.53 1748.71 1452.35 1747.64 cv
1454.17 1746.58 1456.24 1746.05 1458.56 1746.05 cv
1462.46 1746.05 1465.49 1747.2 1467.63 1749.49 cv
1469.77 1751.77 1470.84 1755.31 1470.84 1760.08 cv
1470.84 1777.79 li
1476.3 1778.73 li
1476.3 1782.94 li
1458.79 1782.94 li
1458.79 1778.73 li
1464.25 1777.79 li
1464.25 1760.21 li
1464.25 1757.02 1463.62 1754.76 1462.36 1753.42 cv
1461.1 1752.08 1459.17 1751.41 1456.58 1751.41 cv
1454.69 1751.41 1453.01 1751.87 1451.55 1752.78 cv
1450.08 1753.7 1448.92 1754.95 1448.05 1756.53 cv
1448.05 1777.79 li
1453.5 1778.73 li
1453.5 1782.94 li
1436 1782.94 li
cp
f
1492.4 1783.51 mo
1489.72 1783.51 1487.6 1782.73 1486.02 1781.15 cv
1484.45 1779.58 1483.66 1777.06 1483.66 1773.6 cv
1483.66 1751.61 li
1477.94 1751.61 li
1477.94 1746.72 li
1483.66 1746.72 li
1483.66 1737.99 li
1490.26 1737.99 li
1490.26 1746.72 li
1498.12 1746.72 li
1498.12 1751.61 li
1490.26 1751.61 li
1490.26 1773.6 li
1490.26 1775.34 1490.6 1776.63 1491.3 1777.45 cv
1491.99 1778.28 1492.91 1778.69 1494.08 1778.69 cv
1494.86 1778.69 1495.73 1778.62 1496.69 1778.47 cv
1497.65 1778.33 1498.39 1778.2 1498.93 1778.09 cv
1499.83 1782.41 li
1498.87 1782.7 1497.7 1782.95 1496.3 1783.18 cv
1494.91 1783.4 1493.61 1783.51 1492.4 1783.51 cv
cp
f
1510.41 1761.22 mo
1527.11 1761.22 li
1527.11 1760.35 li
1527.11 1758.61 1526.81 1757.05 1526.19 1755.68 cv
1525.58 1754.31 1524.67 1753.22 1523.45 1752.43 cv
1522.23 1751.64 1520.71 1751.24 1518.88 1751.24 cv
1517.41 1751.24 1516.07 1751.67 1514.86 1752.53 cv
1513.66 1753.39 1512.67 1754.56 1511.88 1756.03 cv
1511.1 1757.5 1510.59 1759.18 1510.34 1761.05 cv
1510.41 1761.22 li
cp
1519.88 1783.65 mo
1516.54 1783.65 1513.63 1782.88 1511.15 1781.35 cv
1508.67 1779.83 1506.76 1777.7 1505.41 1774.98 cv
1504.06 1772.25 1503.38 1769.11 1503.38 1765.54 cv
1503.38 1764.06 li
1503.38 1760.63 1504.09 1757.55 1505.51 1754.84 cv
1506.92 1752.13 1508.81 1749.99 1511.16 1748.42 cv
1513.52 1746.84 1516.09 1746.05 1518.88 1746.05 cv
1522.14 1746.05 1524.87 1746.72 1527.06 1748.06 cv
1529.26 1749.4 1530.92 1751.28 1532.04 1753.7 cv
1533.15 1756.13 1533.71 1758.98 1533.71 1762.26 cv
1533.71 1766.37 li
1510.21 1766.37 li
1510.11 1766.54 li
1510.15 1768.86 1510.56 1770.92 1511.33 1772.72 cv
1512.1 1774.51 1513.21 1775.92 1514.66 1776.95 cv
1516.11 1777.98 1517.85 1778.49 1519.88 1778.49 cv
1522.12 1778.49 1524.07 1778.17 1525.76 1777.54 cv
1527.44 1776.9 1528.9 1776.03 1530.13 1774.91 cv
1532.71 1779.19 li
1531.41 1780.44 1529.7 1781.5 1527.57 1782.36 cv
1525.44 1783.22 1522.87 1783.65 1519.88 1783.65 cv
cp
f
1538.5 1782.94 mo
1538.5 1778.73 li
1543.95 1777.79 li
1543.95 1735.91 li
1538.5 1734.97 li
1538.5 1730.72 li
1550.55 1730.72 li
1550.55 1777.79 li
1556 1778.73 li
1556 1782.94 li
1538.5 1782.94 li
cp
f
1560.35 1782.94 mo
1560.35 1778.73 li
1565.81 1777.79 li
1565.81 1735.91 li
1560.35 1734.97 li
1560.35 1730.72 li
1572.41 1730.72 li
1572.41 1777.79 li
1577.86 1778.73 li
1577.86 1782.94 li
1560.35 1782.94 li
cp
f
1587.43 1737.79 mo
1587.43 1730.72 li
1594.36 1730.72 li
1594.36 1737.79 li
1587.43 1737.79 li
cp
1582.31 1782.94 mo
1582.31 1778.73 li
1587.77 1777.79 li
1587.77 1751.91 li
1582.31 1750.98 li
1582.31 1746.72 li
1594.36 1746.72 li
1594.36 1777.79 li
1599.82 1778.73 li
1599.82 1782.94 li
1582.31 1782.94 li
cp
f
1634.33 1752.11 mo
1631.75 1746.72 li
1639.82 1746.72 li
1639.82 1750.94 li
1634.33 1752.11 li
cp
1620.44 1778.29 mo
1622.43 1778.29 1624.09 1777.84 1625.43 1776.93 cv
1626.77 1776.03 1627.87 1774.75 1628.74 1773.1 cv
1628.74 1756.43 li
1627.89 1754.89 1626.79 1753.67 1625.43 1752.77 cv
1624.07 1751.86 1622.43 1751.41 1620.51 1751.41 cv
1618.41 1751.41 1616.66 1752.01 1615.27 1753.22 cv
1613.88 1754.42 1612.83 1756.08 1612.14 1758.19 cv
1611.45 1760.3 1611.1 1762.74 1611.1 1765.5 cv
1611.1 1766.21 li
1611.1 1769.84 1611.87 1772.77 1613.41 1774.98 cv
1614.95 1777.19 1617.29 1778.29 1620.44 1778.29 cv
cp
1620.27 1797.57 mo
1618.53 1797.57 1616.65 1797.33 1614.62 1796.85 cv
1612.58 1796.37 1610.8 1795.72 1609.26 1794.89 cv
1610.97 1789.77 li
1612.19 1790.42 1613.64 1790.96 1615.32 1791.38 cv
1616.99 1791.8 1618.62 1792.01 1620.21 1792.01 cv
1623.15 1792.01 1625.31 1791.19 1626.68 1789.54 cv
1628.06 1787.89 1628.74 1785.53 1628.74 1782.47 cv
1628.74 1779.03 li
1627.56 1780.54 1626.14 1781.69 1624.49 1782.47 cv
1622.84 1783.26 1620.94 1783.65 1618.8 1783.65 cv
1615.85 1783.65 1613.31 1782.92 1611.17 1781.45 cv
1609.03 1779.99 1607.38 1777.95 1606.23 1775.33 cv
1605.08 1772.71 1604.51 1769.67 1604.51 1766.21 cv
1604.51 1765.5 li
1604.51 1761.62 1605.08 1758.22 1606.23 1755.29 cv
1607.38 1752.37 1609.03 1750.1 1611.17 1748.48 cv
1613.31 1746.86 1615.88 1746.05 1618.87 1746.05 cv
1621.14 1746.05 1623.14 1746.5 1624.86 1747.39 cv
1626.58 1748.29 1628.02 1749.58 1629.18 1751.28 cv
1629.78 1746.72 li
1635.34 1746.72 li
1635.34 1782.47 li
1635.34 1785.6 1634.75 1788.29 1633.58 1790.54 cv
1632.41 1792.8 1630.7 1794.53 1628.46 1795.75 cv
1626.21 1796.96 1623.49 1797.57 1620.27 1797.57 cv
cp
f
1649.96 1761.22 mo
1666.67 1761.22 li
1666.67 1760.35 li
1666.67 1758.61 1666.36 1757.05 1665.75 1755.68 cv
1665.13 1754.31 1664.22 1753.22 1663 1752.43 cv
1661.79 1751.64 1660.26 1751.24 1658.43 1751.24 cv
1656.96 1751.24 1655.62 1751.67 1654.42 1752.53 cv
1653.21 1753.39 1652.22 1754.56 1651.44 1756.03 cv
1650.66 1757.5 1650.14 1759.18 1649.9 1761.05 cv
1649.96 1761.22 li
cp
1659.44 1783.65 mo
1656.09 1783.65 1653.18 1782.88 1650.7 1781.35 cv
1648.22 1779.83 1646.31 1777.7 1644.96 1774.98 cv
1643.61 1772.25 1642.94 1769.11 1642.94 1765.54 cv
1642.94 1764.06 li
1642.94 1760.63 1643.64 1757.55 1645.06 1754.84 cv
1646.48 1752.13 1648.36 1749.99 1650.72 1748.42 cv
1653.07 1746.84 1655.64 1746.05 1658.43 1746.05 cv
1661.69 1746.05 1664.42 1746.72 1666.62 1748.06 cv
1668.82 1749.4 1670.47 1751.28 1671.59 1753.7 cv
1672.71 1756.13 1673.26 1758.98 1673.26 1762.26 cv
1673.26 1766.37 li
1649.76 1766.37 li
1649.66 1766.54 li
1649.71 1768.86 1650.12 1770.92 1650.88 1772.72 cv
1651.66 1774.51 1652.77 1775.92 1654.21 1776.95 cv
1655.67 1777.98 1657.41 1778.49 1659.44 1778.49 cv
1661.67 1778.49 1663.63 1778.17 1665.31 1777.54 cv
1667 1776.9 1668.45 1776.03 1669.68 1774.91 cv
1672.26 1779.19 li
1670.96 1780.44 1669.25 1781.5 1667.12 1782.36 cv
1664.99 1783.22 1662.43 1783.65 1659.44 1783.65 cv
cp
f
1678.38 1782.94 mo
1678.38 1778.73 li
1683.84 1777.79 li
1683.84 1751.91 li
1678.38 1750.98 li
1678.38 1746.72 li
1689.73 1746.72 li
1690.2 1752.11 li
1691.41 1750.19 1692.92 1748.71 1694.74 1747.64 cv
1696.56 1746.58 1698.63 1746.05 1700.95 1746.05 cv
1704.85 1746.05 1707.88 1747.2 1710.02 1749.49 cv
1712.16 1751.77 1713.23 1755.31 1713.23 1760.08 cv
1713.23 1777.79 li
1718.69 1778.73 li
1718.69 1782.94 li
1701.18 1782.94 li
1701.18 1778.73 li
1706.64 1777.79 li
1706.64 1760.21 li
1706.64 1757.02 1706.01 1754.76 1704.75 1753.42 cv
1703.49 1752.08 1701.56 1751.41 1698.97 1751.41 cv
1697.07 1751.41 1695.4 1751.87 1693.93 1752.78 cv
1692.47 1753.7 1691.31 1754.95 1690.44 1756.53 cv
1690.44 1777.79 li
1695.89 1778.73 li
1695.89 1782.94 li
1678.38 1782.94 li
cp
f
1739.37 1783.65 mo
1736.09 1783.65 1733.24 1782.88 1730.8 1781.35 cv
1728.37 1779.83 1726.49 1777.7 1725.15 1774.98 cv
1723.81 1772.25 1723.14 1769.11 1723.14 1765.54 cv
1723.14 1764.13 li
1723.14 1760.69 1723.79 1757.61 1725.08 1754.89 cv
1726.38 1752.17 1728.24 1750.02 1730.67 1748.43 cv
1733.1 1746.85 1736 1746.05 1739.37 1746.05 cv
1742.3 1746.05 1744.86 1746.54 1747.06 1747.5 cv
1749.25 1748.45 1751.1 1749.77 1752.6 1751.44 cv
1752.76 1760.15 li
1747.61 1760.15 li
1746.47 1753.82 li
1745.71 1753.04 1744.76 1752.41 1743.63 1751.95 cv
1742.49 1751.48 1741.15 1751.24 1739.61 1751.24 cv
1737.64 1751.24 1735.92 1751.82 1734.44 1752.98 cv
1732.95 1754.14 1731.8 1755.7 1730.97 1757.64 cv
1730.15 1759.58 1729.73 1761.74 1729.73 1764.13 cv
1729.73 1765.54 li
1729.73 1768.17 1730.12 1770.46 1730.89 1772.4 cv
1731.66 1774.34 1732.76 1775.84 1734.2 1776.9 cv
1735.64 1777.96 1737.35 1778.49 1739.34 1778.49 cv
1741.57 1778.49 1743.42 1777.88 1744.9 1776.65 cv
1746.37 1775.42 1747.27 1773.74 1747.61 1771.6 cv
1753.53 1771.6 li
1753.6 1771.8 li
1753.49 1773.87 1752.88 1775.81 1751.76 1777.62 cv
1750.64 1779.43 1749.05 1780.88 1746.99 1781.99 cv
1744.92 1783.09 1742.39 1783.65 1739.37 1783.65 cv
cp
f
1766.59 1761.22 mo
1783.29 1761.22 li
1783.29 1760.35 li
1783.29 1758.61 1782.99 1757.05 1782.37 1755.68 cv
1781.76 1754.31 1780.84 1753.22 1779.63 1752.43 cv
1778.41 1751.64 1776.89 1751.24 1775.06 1751.24 cv
1773.58 1751.24 1772.25 1751.67 1771.04 1752.53 cv
1769.84 1753.39 1768.84 1754.56 1768.06 1756.03 cv
1767.28 1757.5 1766.77 1759.18 1766.52 1761.05 cv
1766.59 1761.22 li
cp
1776.06 1783.65 mo
1772.71 1783.65 1769.8 1782.88 1767.33 1781.35 cv
1764.85 1779.83 1762.93 1777.7 1761.58 1774.98 cv
1760.23 1772.25 1759.56 1769.11 1759.56 1765.54 cv
1759.56 1764.06 li
1759.56 1760.63 1760.27 1757.55 1761.68 1754.84 cv
1763.1 1752.13 1764.99 1749.99 1767.34 1748.42 cv
1769.7 1746.84 1772.27 1746.05 1775.06 1746.05 cv
1778.32 1746.05 1781.04 1746.72 1783.24 1748.06 cv
1785.44 1749.4 1787.1 1751.28 1788.21 1753.7 cv
1789.33 1756.13 1789.89 1758.98 1789.89 1762.26 cv
1789.89 1766.37 li
1766.39 1766.37 li
1766.29 1766.54 li
1766.33 1768.86 1766.74 1770.92 1767.51 1772.72 cv
1768.28 1774.51 1769.39 1775.92 1770.84 1776.95 cv
1772.29 1777.98 1774.03 1778.49 1776.06 1778.49 cv
1778.29 1778.49 1780.25 1778.17 1781.94 1777.54 cv
1783.62 1776.9 1785.08 1776.03 1786.31 1774.91 cv
1788.88 1779.19 li
1787.59 1780.44 1785.88 1781.5 1783.75 1782.36 cv
1781.61 1783.22 1779.05 1783.65 1776.06 1783.65 cv
cp
f
1737.25 521.301 mo
1732.26 521.301 1653.54 521.301 1570.84 521.301 cv
1581.62 456.416 li
1762.62 348.604 li
1798.97 359.498 1825.45 393.206 1825.45 433.102 cv
1825.45 481.813 1785.96 521.301 1737.25 521.301 cv
1561.12 521.301 mo
1472.01 521.301 1381.45 521.301 1376.08 521.301 cv
1327.37 521.301 1287.88 481.813 1287.88 433.102 cv
1287.88 384.391 1327.37 344.902 1376.08 344.902 cv
1397.52 344.902 1417.17 352.555 1432.46 365.274 cv
1432.37 363.334 1432.32 361.384 1432.32 359.422 cv
1432.32 290.746 1487.99 235.072 1556.67 235.072 cv
1625.34 235.072 1681.02 290.746 1681.02 359.422 cv
1681.02 361.384 1680.97 363.334 1680.88 365.274 cv
1696.16 352.555 1715.81 344.902 1737.25 344.902 cv
1741.17 344.902 1745.04 345.159 1748.83 345.655 cv
1574.8 449.314 li
1573.59 450.037 1572.76 451.258 1572.53 452.65 cv
1561.12 521.301 li
level3{
gsave
clp
[1000 0 0 1000 1000 1000 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1000 0 0 1000 1000 1000 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
1570.84 521.301 mo
1567.61 521.301 1564.36 521.301 1561.12 521.301 cv
1572.53 452.65 li
1572.76 451.258 1573.59 450.037 1574.8 449.314 cv
1748.83 345.655 li
1753.55 346.274 1758.16 347.267 1762.62 348.604 cv
1581.62 456.416 li
1570.84 521.301 li
.985992 .79086 .469276 .486824 cmyk
f
1749.98 332.268 mo
1729.44 332.268 1710.62 339.597 1695.98 351.78 cv
1696.07 349.922 1696.12 348.054 1696.12 346.175 cv
1696.12 280.395 1642.79 227.068 1577.01 227.068 cv
1511.23 227.068 1457.9 280.395 1457.9 346.175 cv
1457.9 348.054 1457.95 349.922 1458.04 351.78 cv
1443.4 339.597 1424.58 332.268 1404.04 332.268 cv
1357.38 332.268 1319.56 370.091 1319.56 416.748 cv
1319.56 463.405 1357.38 501.228 1404.04 501.228 cv
1414.15 501.228 1739.87 501.228 1749.98 501.228 cv
1796.64 501.228 1834.46 463.405 1834.46 416.748 cv
1834.46 370.091 1796.64 332.268 1749.98 332.268 cv
cp
.55053 .0135195 0 0 cmyk
f
1404.04 335.268 mo
1359.11 335.268 1322.56 371.82 1322.56 416.748 cv
1322.56 461.676 1359.11 498.228 1404.04 498.228 cv
1749.98 498.228 li
1794.91 498.228 1831.46 461.676 1831.46 416.748 cv
1831.46 371.82 1794.91 335.268 1749.98 335.268 cv
1730.98 335.268 1712.48 341.951 1697.9 354.086 cv
1692.67 358.438 li
1692.98 351.641 li
1693.07 349.728 1693.12 347.94 1693.12 346.175 cv
1693.12 282.153 1641.03 230.068 1577.01 230.068 cv
1512.99 230.068 1460.9 282.153 1460.9 346.175 cv
1460.9 347.94 1460.95 349.728 1461.04 351.641 cv
1461.35 358.438 li
1456.12 354.086 li
1441.54 341.951 1423.04 335.268 1404.04 335.268 cv
cp
1749.98 504.228 mo
1404.04 504.228 li
1355.8 504.228 1316.56 464.984 1316.56 416.748 cv
1316.56 368.511 1355.8 329.268 1404.04 329.268 cv
1422.3 329.268 1440.13 335.019 1454.91 345.575 cv
1455.23 278.522 1509.88 224.068 1577.01 224.068 cv
1644.14 224.068 1698.79 278.522 1699.11 345.575 cv
1713.89 335.019 1731.71 329.268 1749.98 329.268 cv
1798.22 329.268 1837.46 368.511 1837.46 416.748 cv
1837.46 464.984 1798.22 504.228 1749.98 504.228 cv
cp
.0324102 .0552682 .987488 0 cmyk
f
1587.17 396.076 mo
1529.93 338.831 li
1472.68 396.076 li
1503.32 396.076 li
1503.32 477.249 li
1556.54 477.249 li
1556.54 396.076 li
1587.17 396.076 li
cp
.982177 .83093 .440131 .449622 cmyk
f
1566.84 420.003 mo
1624.09 477.249 li
1681.34 420.003 li
1650.7 420.003 li
1650.7 338.831 li
1597.48 338.831 li
1597.48 420.003 li
1566.84 420.003 li
cp
.140688 .00421149 0 0 cmyk
f
548.713 590.879 mo
505.715 590.879 466.042 576.675 434.122 552.695 cv
427.475 512.679 li
427.244 511.286 426.41 510.067 425.199 509.344 cv
375.046 479.47 li
363.93 455.246 357.731 428.293 357.731 399.896 cv
357.731 317.054 410.468 246.534 484.207 220.081 cv
644.283 325.548 li
670.341 547.148 li
637.306 574.468 594.93 590.879 548.713 590.879 cv
422.884 543.571 mo
407.268 529.883 393.901 513.689 383.414 495.618 cv
418.378 516.445 li
422.884 543.571 li
679.108 539.439 mo
653.614 322.349 li
653.476 320.904 652.689 319.601 651.478 318.799 cv
592.752 280.109 li
585.47 212.446 li
673.36 229.581 739.697 306.992 739.697 399.896 cv
739.697 454.959 716.389 504.584 679.108 539.439 cv
582.368 273.268 mo
496.095 216.253 li
512.811 211.472 530.462 208.912 548.713 208.912 cv
557.855 208.912 566.846 209.555 575.645 210.796 cv
582.368 273.268 li
level3{
gsave
clp
[1000 0 0 1000 1000 1000 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1000 0 0 1000 1000 1000 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
434.122 552.695 mo
430.26 549.794 426.51 546.75 422.884 543.571 cv
418.378 516.445 li
383.414 495.618 li
380.379 490.388 377.584 485 375.046 479.47 cv
425.199 509.344 li
426.41 510.067 427.244 511.286 427.475 512.679 cv
434.122 552.695 li
.985992 .79086 .469276 .486824 cmyk
f
670.341 547.148 mo
644.283 325.548 li
484.207 220.081 li
488.109 218.681 492.08 217.401 496.095 216.253 cv
582.368 273.268 li
575.645 210.796 li
578.947 211.263 582.224 211.813 585.47 212.446 cv
592.752 280.109 li
651.478 318.799 li
652.689 319.601 653.476 320.904 653.614 322.349 cv
679.108 539.439 li
676.266 542.096 673.342 544.667 670.341 547.148 cv
f
722.756 378.032 mo
722.756 487.646 633.896 576.506 524.282 576.506 cv
414.668 576.506 325.808 487.646 325.808 378.032 cv
325.808 268.418 414.668 179.559 524.282 179.559 cv
633.896 179.559 722.756 268.418 722.756 378.032 cv
cp
.55053 .0135195 0 0 cmyk
f
524.282 182.559 mo
416.498 182.559 328.808 270.248 328.808 378.032 cv
328.808 485.817 416.498 573.506 524.282 573.506 cv
632.067 573.506 719.756 485.817 719.756 378.032 cv
719.756 270.248 632.067 182.559 524.282 182.559 cv
cp
524.282 579.506 mo
413.189 579.506 322.808 489.125 322.808 378.032 cv
322.808 266.939 413.189 176.559 524.282 176.559 cv
635.375 176.559 725.756 266.939 725.756 378.032 cv
725.756 489.125 635.375 579.506 524.282 579.506 cv
cp
.0324102 .0552682 .987488 0 cmyk
f
374.473 386.288 mo
441.979 386.288 li
442.646 415.167 446.788 441.903 453.605 464.869 cv
441.684 470.456 430.396 477.462 420.01 485.808 cv
393.656 460.302 376.597 425.252 374.473 386.288 cv
cp
420.011 270.256 mo
430.397 278.602 441.684 285.607 453.605 291.194 cv
446.788 314.16 442.646 340.897 441.979 369.776 cv
374.473 369.776 li
376.597 330.812 393.656 295.762 420.011 270.256 cv
cp
674.091 369.776 mo
606.586 369.776 li
605.92 340.897 601.778 314.161 594.96 291.195 cv
606.882 285.608 618.168 278.603 628.554 270.257 cv
654.908 295.763 671.968 330.812 674.091 369.776 cv
cp
589.642 480.614 mo
598.862 485.076 607.643 490.497 615.837 496.813 cv
601.197 508.124 584.42 516.792 566.222 522.099 cv
575.321 511.427 583.261 497.33 589.642 480.614 cv
cp
482.344 522.1 mo
464.146 516.793 447.369 508.125 432.729 496.815 cv
440.923 490.498 449.704 485.077 458.924 480.614 cv
465.305 497.331 473.245 511.428 482.344 522.1 cv
cp
516.026 465.881 mo
516.026 526.764 li
502.642 522.574 489.61 508.406 479.332 486.463 cv
477.506 482.564 475.801 478.476 474.201 474.241 cv
487.589 469.503 501.665 466.67 516.026 465.881 cv
cp
516.026 386.288 mo
516.026 449.343 li
499.885 450.142 484.058 453.268 469.009 458.56 cv
462.762 436.935 459.135 412.242 458.501 386.288 cv
516.026 386.288 li
cp
516.026 306.721 mo
516.026 369.776 li
458.501 369.776 li
459.135 343.822 462.762 319.129 469.009 297.504 cv
484.058 302.796 499.885 305.922 516.026 306.721 cv
cp
458.925 275.449 mo
449.704 270.987 440.924 265.566 432.729 259.25 cv
447.369 247.939 464.146 239.271 482.344 233.965 cv
473.245 244.637 465.305 258.733 458.925 275.449 cv
cp
479.332 269.602 mo
489.61 247.658 502.642 233.491 516.026 229.302 cv
516.026 290.183 li
501.666 289.394 487.59 286.561 474.201 281.823 cv
475.802 277.588 477.506 273.5 479.332 269.602 cv
cp
566.223 233.966 mo
584.42 239.272 601.196 247.94 615.836 259.25 cv
607.642 265.567 598.862 270.988 589.642 275.45 cv
583.261 258.734 575.321 244.638 566.223 233.966 cv
cp
532.538 290.183 mo
532.538 229.301 li
545.923 233.49 558.956 247.657 569.234 269.602 cv
571.06 273.5 572.765 277.588 574.365 281.823 cv
560.977 286.562 546.9 289.394 532.538 290.183 cv
cp
532.538 369.776 mo
532.538 306.721 li
548.68 305.922 564.508 302.796 579.557 297.504 cv
585.804 319.129 589.43 343.822 590.064 369.776 cv
532.538 369.776 li
cp
532.538 449.343 mo
532.538 386.288 li
590.064 386.288 li
589.43 412.242 585.804 436.935 579.558 458.56 cv
564.508 453.268 548.681 450.142 532.538 449.343 cv
cp
532.538 465.881 mo
546.9 466.67 560.977 469.502 574.366 474.241 cv
572.765 478.476 571.06 482.564 569.234 486.463 cv
558.956 508.407 545.923 522.575 532.538 526.764 cv
532.538 465.881 li
cp
628.555 485.807 mo
618.169 477.462 606.882 470.456 594.961 464.869 cv
601.778 441.903 605.92 415.166 606.586 386.288 cv
674.091 386.288 li
671.968 425.251 654.909 460.301 628.555 485.807 cv
cp
690.834 378.032 mo
690.834 328.715 669.281 284.343 635.107 253.82 cv
635.056 253.756 li
634.588 253.225 634.062 252.777 633.503 252.396 cv
604.241 226.925 566.033 211.48 524.284 211.479 cv
524.283 211.479 li
524.282 211.479 li
524.282 211.479 li
482.53 211.479 444.32 226.925 415.058 252.399 cv
414.5 252.779 413.976 253.226 413.509 253.756 cv
413.461 253.816 li
379.286 284.339 357.73 328.713 357.73 378.032 cv
357.73 427.338 379.273 471.7 413.433 502.223 cv
413.504 502.313 li
413.982 502.856 414.521 503.312 415.095 503.698 cv
444.352 529.153 482.548 544.585 524.282 544.585 cv
524.282 544.585 li
524.283 544.585 li
524.284 544.585 li
566.035 544.584 604.245 529.138 633.507 503.665 cv
634.065 503.284 634.589 502.837 635.056 502.307 cv
635.102 502.249 li
669.278 471.726 690.834 427.352 690.834 378.032 cv
cp
.982177 .83093 .440131 .449622 cmyk
f
1764.58 1412.18 mo
1740.46 1412.18 li
1737.22 1412.18 1734.54 1409.78 1734.09 1406.66 cv
1740.45 1403.52 1744.84 1396.97 1744.84 1389.41 cv
1744.84 1378.82 1736.23 1370.21 1725.64 1370.21 cv
1722.14 1370.21 1718.85 1371.15 1716.03 1372.8 cv
1710.1 1370.36 1704.46 1367.33 1699.21 1363.79 cv
1679.75 1383.26 li
1679.15 1383.85 1678.47 1384.3 1677.75 1384.62 cv
1672.64 1384.62 li
1671.92 1384.3 1671.24 1383.85 1670.64 1383.26 cv
1653.59 1366.2 li
1651.08 1363.69 1651.08 1359.62 1653.59 1357.11 cv
1673.05 1337.64 li
1666.09 1327.29 1661.12 1315.5 1658.63 1302.82 cv
1631.11 1302.82 li
1627.55 1302.82 1624.67 1299.94 1624.67 1296.39 cv
1624.67 1272.27 li
1624.67 1268.72 1627.55 1265.84 1631.11 1265.84 cv
1658.63 1265.84 li
1661.12 1253.16 1666.09 1241.37 1673.05 1231.02 cv
1653.59 1211.55 li
1651.29 1209.26 1651.1 1205.65 1653 1203.13 cv
1725.83 1287.06 li
1726.74 1288.11 1728.06 1288.71 1729.45 1288.71 cv
1860.43 1288.71 li
1862.25 1295.74 1867.94 1301.23 1875.09 1302.72 cv
1874.71 1302.79 1874.32 1302.82 1873.93 1302.82 cv
1846.4 1302.82 li
1843.92 1315.5 1838.94 1327.29 1831.99 1337.64 cv
1851.44 1357.11 li
1853.96 1359.62 1853.96 1363.69 1851.44 1366.2 cv
1834.4 1383.26 li
1833.14 1384.51 1831.49 1385.14 1829.84 1385.14 cv
1828.2 1385.14 1826.55 1384.51 1825.29 1383.26 cv
1805.83 1363.79 li
1795.48 1370.75 1783.69 1375.73 1771.01 1378.22 cv
1771.01 1405.74 li
1771.01 1409.3 1768.13 1412.18 1764.58 1412.18 cv
1734.03 1394.1 mo
1734.03 1384.72 li
1734.81 1386.11 1735.25 1387.71 1735.25 1389.41 cv
1735.25 1391.11 1734.81 1392.71 1734.03 1394.1 cv
1879.01 1293.53 mo
1873.71 1293.53 1869.39 1289.22 1869.39 1283.91 cv
1869.39 1278.61 1873.71 1274.3 1879.01 1274.3 cv
1879.47 1274.3 1879.92 1274.33 1880.37 1274.39 cv
1880.37 1293.43 li
1879.92 1293.5 1879.47 1293.53 1879.01 1293.53 cv
1860.43 1279.12 mo
1731.64 1279.12 li
1659.76 1196.28 li
1670.64 1185.4 li
1671.9 1184.14 1673.55 1183.52 1675.19 1183.52 cv
1676.84 1183.52 1678.49 1184.14 1679.75 1185.4 cv
1699.21 1204.86 li
1709.56 1197.9 1721.34 1192.93 1734.03 1190.45 cv
1734.03 1162.92 li
1734.03 1159.36 1736.91 1156.48 1740.46 1156.48 cv
1764.58 1156.48 li
1768.13 1156.48 1771.01 1159.36 1771.01 1162.92 cv
1771.01 1190.45 li
1783.69 1192.93 1795.48 1197.9 1805.83 1204.86 cv
1825.29 1185.4 li
1826.55 1184.14 1828.2 1183.52 1829.84 1183.52 cv
1831.49 1183.52 1833.14 1184.14 1834.4 1185.4 cv
1851.44 1202.45 li
1853.96 1204.97 1853.96 1209.04 1851.44 1211.55 cv
1831.99 1231.02 li
1838.94 1241.37 1843.92 1253.16 1846.4 1265.84 cv
1872.5 1265.84 li
1866.59 1267.98 1862.02 1272.96 1860.43 1279.12 cv
level3{
gsave
clp
[1000 0 0 1000 1000 1000 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1000 0 0 1000 1000 1000 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
1734.09 1406.66 mo
1734.05 1406.36 1734.03 1406.05 1734.03 1405.74 cv
1734.03 1394.1 li
1734.81 1392.71 1735.25 1391.11 1735.25 1389.41 cv
1735.25 1387.71 1734.81 1386.11 1734.03 1384.72 cv
1734.03 1378.22 li
1727.79 1376.99 1721.77 1375.17 1716.03 1372.8 cv
1718.85 1371.15 1722.14 1370.21 1725.64 1370.21 cv
1736.23 1370.21 1744.84 1378.82 1744.84 1389.41 cv
1744.84 1396.97 1740.45 1403.52 1734.09 1406.66 cv
1675.19 1385.14 mo
1674.32 1385.14 1673.45 1384.97 1672.64 1384.62 cv
1677.75 1384.62 li
1676.93 1384.97 1676.06 1385.14 1675.19 1385.14 cv
.985992 .79086 .469276 .486824 cmyk
f
1875.09 1302.72 mo
1867.94 1301.23 1862.25 1295.74 1860.43 1288.71 cv
1729.45 1288.71 li
1728.06 1288.71 1726.74 1288.11 1725.83 1287.06 cv
1653 1203.13 li
1653.18 1202.89 1653.38 1202.67 1653.59 1202.45 cv
1659.76 1196.28 li
1731.64 1279.12 li
1860.43 1279.12 li
1862.02 1272.96 1866.59 1267.98 1872.5 1265.84 cv
1873.93 1265.84 li
1877.48 1265.84 1880.37 1268.72 1880.37 1272.27 cv
1880.37 1274.39 li
1879.92 1274.33 1879.47 1274.3 1879.01 1274.3 cv
1873.71 1274.3 1869.39 1278.61 1869.39 1283.91 cv
1869.39 1289.22 1873.71 1293.53 1879.01 1293.53 cv
1879.47 1293.53 1879.92 1293.5 1880.37 1293.43 cv
1880.37 1296.39 li
1880.37 1299.55 1878.09 1302.17 1875.09 1302.72 cv
f
1640.6 1214.45 mo
1620.85 1214.45 li
1617.94 1214.45 1615.58 1212.09 1615.58 1209.18 cv
1615.58 1186.63 li
1605.19 1184.6 1595.53 1180.52 1587.06 1174.82 cv
1571.12 1190.76 li
1570.09 1191.79 1568.74 1192.31 1567.39 1192.31 cv
1566.04 1192.31 1564.69 1191.79 1563.66 1190.76 cv
1549.7 1176.8 li
1547.64 1174.74 1547.64 1171.4 1549.7 1169.34 cv
1565.63 1153.4 li
1563.04 1149.54 1560.79 1145.44 1558.91 1141.14 cv
1599.23 1141.14 li
1645.87 1194.9 li
1645.87 1209.18 li
1645.87 1212.09 1643.51 1214.45 1640.6 1214.45 cv
1694.06 1192.31 mo
1692.71 1192.31 1691.36 1191.79 1690.33 1190.76 cv
1674.39 1174.82 li
1667.18 1179.67 1659.12 1183.34 1650.48 1185.58 cv
1611.92 1141.14 li
1702.54 1141.14 li
1700.66 1145.44 1698.4 1149.54 1695.81 1153.4 cv
1711.75 1169.34 li
1713.81 1171.4 1713.81 1174.74 1711.75 1176.8 cv
1697.78 1190.76 li
1696.75 1191.79 1695.4 1192.31 1694.06 1192.31 cv
1706.01 1131.55 mo
1555.44 1131.55 li
1554.81 1129.36 1554.27 1127.14 1553.83 1124.88 cv
1531.28 1124.88 li
1528.37 1124.88 1526.01 1122.52 1526.01 1119.61 cv
1526.01 1099.86 li
1526.01 1096.95 1528.37 1094.59 1531.28 1094.59 cv
1553.83 1094.59 li
1555.86 1084.2 1559.94 1074.55 1565.63 1066.07 cv
1549.7 1050.13 li
1547.64 1048.07 1547.64 1044.73 1549.7 1042.67 cv
1563.66 1028.7 li
1564.69 1027.67 1566.04 1027.15 1567.39 1027.15 cv
1568.74 1027.15 1570.09 1027.67 1571.12 1028.7 cv
1587.06 1044.64 li
1595.53 1038.94 1605.19 1034.86 1615.58 1032.83 cv
1615.58 1010.28 li
1615.58 1007.36 1617.94 1005.01 1620.85 1005.01 cv
1640.6 1005.01 li
1643.51 1005.01 1645.87 1007.36 1645.87 1010.28 cv
1645.87 1032.83 li
1656.25 1034.86 1665.91 1038.94 1674.39 1044.64 cv
1690.33 1028.7 li
1691.36 1027.67 1692.71 1027.15 1694.06 1027.15 cv
1695.4 1027.15 1696.75 1027.67 1697.78 1028.7 cv
1711.75 1042.67 li
1713.81 1044.73 1713.81 1048.07 1711.75 1050.13 cv
1695.81 1066.07 li
1701.51 1074.55 1705.58 1084.2 1707.62 1094.59 cv
1730.16 1094.59 li
1733.08 1094.59 1735.43 1096.95 1735.43 1099.86 cv
1735.43 1119.61 li
1735.43 1122.52 1733.08 1124.88 1730.16 1124.88 cv
1707.62 1124.88 li
1707.18 1127.14 1706.64 1129.36 1706.01 1131.55 cv
level3{
gsave
clp
[1000 0 0 1000 1000 1000 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1000 0 0 1000 1000 1000 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
1645.87 1194.9 mo
1599.23 1141.14 li
1558.91 1141.14 li
1557.55 1138.04 1556.39 1134.84 1555.44 1131.55 cv
1706.01 1131.55 li
1705.05 1134.84 1703.89 1138.04 1702.54 1141.14 cv
1611.92 1141.14 li
1650.48 1185.58 li
1648.96 1185.98 1647.42 1186.33 1645.87 1186.63 cv
1645.87 1194.9 li
.985992 .79086 .469276 .486824 cmyk
f
1753.79 1325.85 mo
1721.11 1325.85 1694.63 1299.37 1694.63 1266.69 cv
1694.63 1234.02 1721.11 1207.53 1753.79 1207.53 cv
1786.46 1207.53 1812.95 1234.02 1812.95 1266.69 cv
1812.95 1299.37 1786.46 1325.85 1753.79 1325.85 cv
cp
1874.05 1248.37 mo
1846.79 1248.37 li
1844.33 1235.81 1839.39 1224.13 1832.5 1213.88 cv
1851.78 1194.6 li
1854.27 1192.11 1854.27 1188.08 1851.78 1185.59 cv
1834.89 1168.7 li
1832.4 1166.2 1828.36 1166.2 1825.87 1168.7 cv
1806.6 1187.97 li
1796.34 1181.08 1784.67 1176.15 1772.1 1173.69 cv
1772.1 1146.42 li
1772.1 1142.9 1769.25 1140.05 1765.73 1140.05 cv
1741.84 1140.05 li
1738.32 1140.05 1735.47 1142.9 1735.47 1146.42 cv
1735.47 1173.69 li
1722.9 1176.15 1711.23 1181.08 1700.98 1187.97 cv
1681.7 1168.7 li
1679.21 1166.2 1675.17 1166.2 1672.69 1168.7 cv
1655.79 1185.58 li
1653.3 1188.08 1653.3 1192.11 1655.79 1194.6 cv
1675.07 1213.88 li
1668.18 1224.13 1663.25 1235.81 1660.79 1248.37 cv
1633.52 1248.37 li
1630 1248.37 1627.15 1251.23 1627.15 1254.75 cv
1627.15 1278.63 li
1627.15 1282.15 1630 1285.01 1633.52 1285.01 cv
1660.79 1285.01 li
1663.25 1297.57 1668.18 1309.25 1675.07 1319.5 cv
1655.79 1338.78 li
1653.3 1341.27 1653.3 1345.3 1655.79 1347.79 cv
1672.69 1364.68 li
1675.17 1367.18 1679.21 1367.18 1681.7 1364.68 cv
1700.98 1345.4 li
1711.23 1352.3 1722.9 1357.23 1735.47 1359.69 cv
1735.47 1386.95 li
1735.47 1390.48 1738.32 1393.33 1741.84 1393.33 cv
1765.73 1393.33 li
1769.25 1393.33 1772.1 1390.48 1772.1 1386.95 cv
1772.1 1359.69 li
1784.67 1357.23 1796.34 1352.3 1806.6 1345.4 cv
1825.87 1364.68 li
1828.36 1367.18 1832.4 1367.18 1834.89 1364.68 cv
1851.78 1347.79 li
1854.27 1345.3 1854.27 1341.27 1851.78 1338.78 cv
1832.5 1319.5 li
1839.4 1309.25 1844.33 1297.57 1846.79 1285.01 cv
1874.05 1285.01 li
1877.57 1285.01 1880.43 1282.15 1880.43 1278.63 cv
1880.43 1254.75 li
1880.43 1251.23 1877.57 1248.37 1874.05 1248.37 cv
cp
.55053 .0135195 0 0 cmyk
f
1753.79 1212.62 mo
1723.97 1212.62 1699.71 1236.88 1699.71 1266.69 cv
1699.71 1296.5 1723.97 1320.76 1753.79 1320.76 cv
1783.6 1320.76 1807.86 1296.5 1807.86 1266.69 cv
1807.86 1236.88 1783.6 1212.62 1753.79 1212.62 cv
cp
1753.79 1330.94 mo
1718.36 1330.94 1689.54 1302.12 1689.54 1266.69 cv
1689.54 1231.26 1718.36 1202.44 1753.79 1202.44 cv
1789.21 1202.44 1818.04 1231.26 1818.04 1266.69 cv
1818.04 1302.12 1789.21 1330.94 1753.79 1330.94 cv
cp
.140688 .00421149 0 0 cmyk
f
1633.14 1142.2 mo
1606.38 1142.2 1584.69 1120.5 1584.69 1093.74 cv
1584.69 1066.98 1606.38 1045.29 1633.14 1045.29 cv
1659.9 1045.29 1681.6 1066.98 1681.6 1093.74 cv
1681.6 1120.5 1659.9 1142.2 1633.14 1142.2 cv
cp
1731.64 1078.74 mo
1709.31 1078.74 li
1707.3 1068.45 1703.26 1058.89 1697.61 1050.49 cv
1713.4 1034.7 li
1715.44 1032.66 1715.44 1029.35 1713.4 1027.32 cv
1699.57 1013.48 li
1697.53 1011.44 1694.22 1011.44 1692.18 1013.48 cv
1676.39 1029.27 li
1668 1023.62 1658.43 1019.59 1648.14 1017.57 cv
1648.14 995.239 li
1648.14 992.354 1645.81 990.018 1642.92 990.018 cv
1623.36 990.018 li
1620.48 990.018 1618.14 992.354 1618.14 995.239 cv
1618.14 1017.57 li
1607.85 1019.59 1598.29 1023.63 1589.89 1029.27 cv
1574.1 1013.48 li
1572.06 1011.44 1568.75 1011.44 1566.71 1013.48 cv
1552.88 1027.31 li
1550.84 1029.35 1550.84 1032.66 1552.88 1034.7 cv
1568.67 1050.49 li
1563.02 1058.89 1558.99 1068.45 1556.97 1078.74 cv
1534.64 1078.74 li
1531.75 1078.74 1529.42 1081.08 1529.42 1083.96 cv
1529.42 1103.52 li
1529.42 1106.41 1531.75 1108.75 1534.64 1108.75 cv
1556.97 1108.75 li
1558.99 1119.03 1563.02 1128.6 1568.67 1137 cv
1552.88 1152.79 li
1550.84 1154.83 1550.84 1158.13 1552.88 1160.17 cv
1566.71 1174 li
1568.75 1176.05 1572.06 1176.05 1574.1 1174 cv
1589.89 1158.21 li
1598.29 1163.86 1607.85 1167.9 1618.14 1169.91 cv
1618.14 1192.25 li
1618.14 1195.13 1620.48 1197.47 1623.36 1197.47 cv
1642.92 1197.47 li
1645.81 1197.47 1648.14 1195.13 1648.14 1192.25 cv
1648.14 1169.91 li
1658.43 1167.9 1668 1163.86 1676.39 1158.21 cv
1692.18 1174 li
1694.22 1176.05 1697.53 1176.05 1699.57 1174 cv
1713.4 1160.17 li
1715.44 1158.13 1715.44 1154.83 1713.4 1152.79 cv
1697.61 1137 li
1703.26 1128.6 1707.3 1119.03 1709.31 1108.75 cv
1731.64 1108.75 li
1734.53 1108.75 1736.86 1106.41 1736.86 1103.52 cv
1736.86 1083.96 li
1736.86 1081.08 1734.53 1078.74 1731.64 1078.74 cv
cp
.0324102 .0552682 .987488 0 cmyk
f
1633.14 1049.45 mo
1608.72 1049.45 1588.85 1069.32 1588.85 1093.74 cv
1588.85 1118.16 1608.72 1138.03 1633.14 1138.03 cv
1657.56 1138.03 1677.43 1118.16 1677.43 1093.74 cv
1677.43 1069.32 1657.56 1049.45 1633.14 1049.45 cv
cp
1633.14 1146.36 mo
1604.13 1146.36 1580.52 1122.76 1580.52 1093.74 cv
1580.52 1064.73 1604.13 1041.12 1633.14 1041.12 cv
1662.15 1041.12 1685.76 1064.73 1685.76 1093.74 cv
1685.76 1122.76 1662.15 1146.36 1633.14 1146.36 cv
cp
.55053 .0135195 0 0 cmyk
f
332.994 1156.85 mo
326.723 1156.85 li
311.343 1151.68 282.391 1140.15 257.753 1120.11 cv
242.513 1107.71 231.513 1094.22 224.824 1079.77 cv
227.012 1077.45 228.629 1074.58 229.453 1071.4 cv
438.248 1071.4 li
432.244 1089.04 420.111 1105.35 401.965 1120.11 cv
377.326 1140.15 348.375 1151.68 332.994 1156.85 cv
220.391 1067.99 mo
219.712 1065.67 219.137 1063.33 218.666 1060.97 cv
219.814 1062.55 220.492 1064.5 220.492 1066.6 cv
220.492 1067.07 220.457 1067.54 220.391 1067.99 cv
440.88 1061.8 mo
229.453 1061.8 li
227.839 1055.57 223.178 1050.55 217.155 1048.45 cv
217.099 1047.19 217.071 1045.93 217.071 1044.66 cv
217.071 975.825 li
442.646 975.825 li
442.646 1044.66 li
442.646 1050.49 442.056 1056.21 440.88 1061.8 cv
442.646 966.232 mo
400.775 966.232 li
316.676 859.848 li
329.859 856.146 li
416.229 880.399 li
413.862 888.517 li
413.296 890.461 413.007 892.469 413.007 894.482 cv
413.007 906.209 422.548 915.748 434.273 915.748 cv
442.646 915.748 li
442.646 966.232 li
388.075 966.232 mo
217.071 966.232 li
217.071 915.748 li
225.444 915.748 li
237.17 915.748 246.71 906.209 246.71 894.482 cv
246.71 892.469 246.422 890.461 245.855 888.517 cv
243.489 880.399 li
306.55 862.691 li
388.075 966.232 li
level3{
gsave
clp
[1000 0 0 1000 1000 1000 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1000 0 0 1000 1000 1000 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
442.646 975.825 mo
217.071 975.825 li
217.071 966.232 li
388.075 966.232 li
306.55 862.691 li
316.676 859.848 li
400.775 966.232 li
442.646 966.232 li
442.646 975.825 li
.985992 .79086 .469276 .486824 cmyk
f
224.824 1079.77 mo
223.039 1075.91 221.561 1071.98 220.391 1067.99 cv
220.457 1067.54 220.492 1067.07 220.492 1066.6 cv
220.492 1064.5 219.814 1062.55 218.666 1060.97 cv
217.847 1056.86 217.343 1052.69 217.155 1048.45 cv
223.178 1050.55 227.839 1055.57 229.453 1061.8 cv
440.88 1061.8 li
440.199 1065.04 439.322 1068.24 438.248 1071.4 cv
229.453 1071.4 li
228.629 1074.58 227.012 1077.45 224.824 1079.77 cv
f
329.859 1157.9 mo
327.207 1157.02 li
327.047 1156.96 326.886 1156.91 326.723 1156.85 cv
332.994 1156.85 li
332.831 1156.91 332.67 1156.96 332.51 1157.02 cv
329.859 1157.9 li
f
320.112 1141.69 mo
334.791 1136.79 362.995 1125.66 386.959 1106.17 cv
412.94 1085.03 426.113 1060.6 426.113 1033.55 cv
426.113 909.479 li
418.054 909.479 li
406.769 909.479 397.587 900.297 397.587 889.011 cv
397.587 887.074 397.864 885.142 398.41 883.271 cv
400.688 875.457 li
317.561 852.115 li
234.435 875.457 li
236.712 883.271 li
237.257 885.142 237.534 887.074 237.534 889.011 cv
237.534 900.297 228.353 909.479 217.067 909.479 cv
209.009 909.479 li
209.009 1033.55 li
209.009 1060.6 222.182 1085.03 248.162 1106.17 cv
272.127 1125.66 300.331 1136.79 315.009 1141.69 cv
317.561 1142.54 li
320.112 1141.69 li
cp
.0324102 .0552682 .987488 0 cmyk
f
245.593 889.011 mo
245.593 886.234 245.188 883.553 244.449 881.015 cv
317.561 860.485 li
390.673 881.015 li
389.934 883.553 389.529 886.234 389.529 889.011 cv
389.529 904.766 402.3 917.538 418.054 917.538 cv
418.054 1033.55 li
418.054 1089.05 355.072 1121.52 317.561 1134.04 cv
280.05 1121.52 217.067 1089.05 217.067 1033.55 cv
217.067 917.538 li
232.822 917.538 245.593 904.766 245.593 889.011 cv
cp
.55053 .0135195 0 0 cmyk
f
217.067 1033.55 mo
217.067 917.538 li
232.822 917.538 245.593 904.766 245.593 889.011 cv
245.593 886.234 245.188 883.553 244.449 881.015 cv
317.561 860.485 li
317.561 1134.04 li
280.05 1121.52 217.067 1089.05 217.067 1033.55 cv
cp
.955688 .754513 .206027 .0571298 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (alaik) ()
%%Title: (vecteezy_future-technology-artificial-intelegence-illustration_AA0522.eps)
%%CreationDate: 6/30/2022 9:34 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bj2N:dft+^cZS>6fFS=A@!Ya)AG)CQ5Th4\h[C?@0XbJ\H"Q3Vq<b*JP16UO[uHfDk<2BXLY-IE-+-^P\nb/cHYKJ-]BgTJ
%];LqN+.It,hm2H?=9[HS:UVdT)o!sV4__ZI%;2YBlQ'8;[(<$G61:a0**.EWhI*irW;bK:(3Z.EFJ`2cfBRI(s!^o.c(f>p;r/-o
%)XU;#d2Q=I7g6Y<EM<8`)]oKf'm5&Q>TS:G\tGeren@H]Tt^?6eX^p1b\L*r.1heTe'S[M5BQ^RjZ!`uLb.<T$7d3)[SGSpd@`L7
%pUZttd8,&2Qe1&3opbLT?"pWQe)(M'/C[iNc-+C'%]GK=U5u)"!kMJam.O:3jAp`Gil3edod@N-@9fK*ent=\Wf;MFB;aZ'4F*L2
%]c+'4a9oX]n-#;*<!.L6![q416%ZbQ=r7-4F4B42Ubs][K'PktDLC#8BmI4WD0mS\NP`QDn4Q)9I_cO`anIBb&>6tNCt0e>K\#VZ
%epfRc:Kl$'ej-?]Gqdrjs$c8==N!=H;^YmXG$9NNDL4e$o=6E8l`no#DKTUm8I(5MPF(0o/AJ5(YF:*meqhtef=Ah?C_jn_.aKb$
%[[VcT^mU4oaDScCIFW\h6X:5X^ab$jOkR.3;WN,1==#J>h1G%h:-f-rl\DN07$8rPel?&YrLl/uSKP_:m1JOL%bdiJmUkMpeidBF
%o]&7738s):.>78O-WCG4=/92<gdHkDW7BF_Z(3Pu*CD`dda#S<`iHGhMo0G=%4XC^^I!mY6:0&$2+Pp9Jh'0Vb`gU"L!$$_er\2*
%b#kg)G?SPR(I`SP<ctD-ioms598jJA?(Pmi\@HG<ql&ZSpu_IPk52+>qi-?u1l>*WMGP[pJ)!/D:b@Q$%A3-MC=Of6<NBe:Xl<$^
%ME6_$c8HTTccmC<<+n+!,<9EtA2tiZ9mILKom,/cjuB"Pk(S"Y_n>VXjZ-!An#1k1iLT/7aWVU5??jLL9FC7P8eOd?NCi*"kDg'$
%`k67j8Q.VN<5[5TN]N.(b4I1Ri$G3G/L@Cc/t:#:b6c8KbL+GtoAK:>kpl6GWaUp47os^SjilgH[;bnkC7(c&Bh95r(j!VW^0uVV
%&+H_+O!;63)Wlj"\X8Oc,]VoOE)"Rb4F#+BHKjK%-1+Q(&l6tGc<a7r#;:iZY:TS%b9j:RJ#Iu+C*(=s\[e6@4H2A\*RuF=@uc^)
%Z8(35#8<oqR`i)a8b0u=85@e'XI2QL*=lJ^N+<8I,^O;Rp#YromH'TZnTaPL@J'KYn52ne?Zn(aOQY^i20^RKP-a9(9*33f)Z3C:
%E[(If%5lbcS&h!E<[%d3e$TT0SB/qgDUO]?XL>!KZ5ORD-7:`J8>:m?LTI[14-iTXgZ!]B.]B`)5KAnaP,%s<H1H<&PlI\m&@*]E
%b'u]"^F)PI0+?t:0T<1VWdj-94I$oJ^IgqD:QFuf26YP@;0%p$l?2nc3QchPr(l96ee%:jIH>\O9cc#Za/aO'_+\O.f/rP'ra&MC
%-&MV%e,SR\eU.!YZJj:PTg"P"H.C>;W);!]I*L)eb%ka5^7sO9?e'OE(%o^$eYK6+NCd,j?`JQKq5I;[G]&8uWE5A_+Ff..:3cGP
%2F:,!9+@#EP2\;[5@$I%P_'dQ)>[:$a>u//KIUI>2rU.QV,Oj<BO4[I3H:][M$C+CIQfo=0ic@]NLD3YC]Z,Ve0gfRc)HRN-?_-*
%BO4uS@)e:a1;0[UqN?!(!ip$u(b_D_AiHu@VQ"K6SOT(=l'J%)m*mO3Q[-j;,$%hlViF;TSYW_lZb1rS-X:ks<*c&?4Y;sUJO_J?
%bdWH1jfCa"Df%1Cf^1kkjY*5E=j2(n"t#EA;Ii`Adh!(4;J&/u/?4SaY65BM\n%82KZddOqB]-ZR9)>_JS3]X!tA`S_RMY5Tg+Pf
%$7(RNfsSq,RCQ+Z0c/F^6NV"o`X`\d!_b$$]WS2N9sYPJCT\o5i6s]2KBeZ3_UTT+#3D?Z=D9N]-mB<V,hLQniQD@AQfV5FTh)(W
%nLA(c!s2HF=-^A-81tVARn7X$br3mgR0cS'cT3Mae-I"^Bp5-hW+L))fP@4o:W#2I%uEeM=B[J\Q5]Z<m?Np2C51W)UXh3R;lMLi
%jdE8no6LU:PfC8^hFbuo;fI\jA]UDC*pD>J3SYQQa??NNX!0m.Q2ud5d8'kc,cf?qI<1[[?!:7ZEI)"Io;'2int6-+8Z#?iPdcJ%
%@i^Ae;UFL%fk!Bi_hoP_T8coS$/Mm?m)`Q'gne.-j_?'oC:uFs9pY*5L4uG59Os\E9qs.2,I7#j<F)*lQ(SaZ6iic2(=:_7JC._`
%-rLO)q>q>S"(pSMJ<:\Q&h<i/L-a@#+3&pONO$j0`JRBbHqu24`N#-4aAqX."?-l8EC@dJM)#N#AEjPZoR(eC,ci\P9Nq\o,c3Sq
%Fib\70O_afbSMgWXC6f7Cf4utck5510G/rj<H+'*++t'@%fs\D(=!4lq5R)rFm?-u#;d?Gb">cUo:/6AgCY+1OSYMJK4H(-%'cYF
%<Jb:hcm8t(a'g/"(RFWdGYf91i@=TZ#soSIJS)DEW8Q,K`LjsW1_<JN)\MWUYIf)e/bAhN@?UEMVN\Y!Sd&CQ<oB8//@IFKo.^5.
%VSEAZ%d@@Kas]a58T8+\Hf0ThVM+#_OJu&T'WH+5^K_3(-SCk1U4.hM%.iT'd"etSg$PU;N(Qu7^2S5o(ePH&LG:)3Vr0tGNg@3>
%f6@.5c"0e)p:R>?e"I.'D4M97JWhK+k_PaKdi]n,l%PV0AJ3UJ%62JZ(_s-p>)FmEp2E]d`kXc*%T@PA!op9=J4<(;@C]oM!?icN
%I>]rhY:k;JgH>ZkgmX.L%Utm"P##IlGNDW=$c?a3N.oE(ah]?.7Li+sKV(7/@9KBRibNntatZ!kMT:jRa`-56!=TH,GH/q(L+QP^
%cIF4JJ8M5c$laNK2(T":"e%=@pKC0L`T>MWeE@KK%ZXLX<`#'VOLC/u/GKu[eCA.'fF4>ma061L1KRs)Jni)R>^N1FGbHJ[6`pPm
%.i)527nA6k3KrG;QrZ*;?$Te@i51Y#2D!.H6H[c2N"TATC?ChO>b/YsBYoj3Z,eJZeUspXP*C)DaWMf#m3Om1PASC+@-^,p6Vno(
%RU&6UjL_6lmP?h0SYFkd?7MQi_C+mZEnqTcLgfE9#h&!col?h_BJdjDb0)Zn[p7`G#]o."X+YP1Gm8*)#^1b"&=<n/70Dnn`s-?s
%q&,gAMH\C68h-T1V?C2a&Q//*!-TZmTKl+A4DZ"s$DL!hDC"C&N.?"V:s"L48W/nE%l*=)dlaTV*8&_<LGn3Iq0PJqnTc;#:p"co
%_[KekA#rDSpSo"kZqW'p!!h2lhO*$$=N_'nE*`&=j@!^M["^$]7D=r-a*C6/%97,ncmo1j,b5T_CWY+`ot+EseNDEM`YXis6<CQ_
%+9a%`@_9gGgNJP7(>'gCNQfSTQnrb*@u<&d]bdeZ#VoZSL$L73JVs^>XC?%@1_%f*6&$CY?Y#22MAd@$<Fob&<0\[PENE:tB5#Ei
%_3h,GMJ:($+OnamJV]lG/ELpU-RY)9@h_`T$7a`mXtj*Vs&iXEkFb@N-UZ`Ij_"W'p2HioJ\d6ea-NZU9k>,7$,mXPKisJA:,5<,
%SF^/N53c5rlPG/3M@tb2l;Qr^"!![h^18-?c@piX_`5`H0u=5TL5aSnbRmKO=5!7Y^/4NpD`<n)!E<+*Ago</=X<Xc[kVn=/hJ]i
%#['iKWOsL$Era!W7qi`2V5m$qZ@+rT@n=c*<NU&PJ6'o^!QFZ7?jXAY9T[?B,K;7@F,Y0U10Bt)0V!^"0@<(c;WWF%(58VaSk;?h
%iaik6b<Z+?P:e0jmkbrpDe<#,"S$M,/oh$C22U-E]JKg)k0&Q1jNN#R>`;*)E=RWqbCOasBYFPlOm!Dha^s(ZNdqMTkK)ht=`'+t
%jdR2>`#b`:>gffVl;^D>j"Gg%B[_K!mf\gsEYc/USYCh;F+=XAPqRh*d(u#,gD^8;/<r]r#r[OZfGK&Y>\)*A5RnkS7G&eL<%IEn
%\Z:dsWhWk&go1.0E+-EC/W:g7EnFJtN\^tl%eg,LKX1$KOM;[:*lCDJ?o9IaRSN^ldZ`*JWM;kne<W_tRXXpW7Z#(uJ`"%tgi1%<
%@_l6]-=l#2["mn@%*n,+o'1]%8iK<Md6+MX5--7)GoNl'jXEZm2A.fm<S?"n/1d3[WEbI&I!15-:FRdi$^.`_"G\FQ@uN;Hr'k*K
%-:4\_a'M\jjhkn:F<]#2WkO@!qXFd%/eQ5cRDl2ImXXH8Kds5krlPk`goq3"(a\]ef1\l"EEWYV+\[MX*SH1tC89'KI&A=+j$c;r
%Vl^E:W$`e6\7$#S@g#/eK8ri$9o`?>A!XXQ),pB[da!NBk`6sD8+8:oL8j"EljK')N^-a34WLMO<7_c85^YaDRtI1Z@4LEYoKI(s
%-#:_p[$Bc7KQV_1ToO[oaIT5P/JGQI,rsZMOrPmSW<Ps#/JlVA/FQ>.Z3WB4rW7EXNIuJH1O*D9._3._Ofo2WNsVoeQt&j(bk2F.
%-;kZK^Lr2O=l`:1-?2<$-e\!S6(SLe8gGRoWb\9#F#C0,WbZc4?^%jU5?"X_(a8>5=;@,mnh+H`_V@o-RKV;R<C\ej>`_3MI:3?q
%%2CEB[#AB%iWPt]Rd0Ji2@Zlbfos%!dpU&@,L`aS(pQtMSBSo$q4p[$K49\=d+5R=SCH>%*=.G<W<m-sX=k2%2>`iY(D`#bNT``/
%Y6K$PLhu2NJ];J'bmWuIs"sus1Qdb(Y*'g2E+-gG=8,XD.B6B7"rg.r3&4a+XMI:K2A1R'Ot4WCOmQ<mCO.LP`jO,6YDumn,:1mT
%,-)30&1HY>Rg3LY$-tZR6AFP';V5;9mK2lTp>k_l=0IYGSm2^@#/?5:`YIRX=;P-PblEFFj]VA/r0M]bbFVTF1)_#CP,^8N15)Fu
%JEAIdNG,]XC&rCB;"-4(Wi>#h\.H40p)/F-l79sdats>6LjV4d8Tb*K+GWPZ"lE'$n9%ug8-)WTOp>C*K=<Dra&Jn?TT=-R1p?`4
%J.%>KBdYajH'@IpJVJsHJcS3238'3HZq5eo0MDYjla!$-m)0MkY<HiK_uk*]G"WgO=-RYmmbCaQNE244V2qshNMUT";&n&SY].r3
%Yc,\cXG@!7jEEjWehr;R1T-6&F8fi`:4f'nZn;t!8rUYW9LcS/,>"e>d^htkGnr%'otATG+l6:86H/sUJ>.-H!"2b[X\<GZ11]%1
%&A"&q+Dlh$O9)4GL`i4h11_0Bf&\T(]L<eNE#Pq#n)X(lnhl`5L6A\o2g<tkN,>fuac6A^SKS,V61u#=]r_$]Drr7uU;:FZ<KgI1
%:l4J7@@GLtGupVg.T[)9ll\-P7[:Mc_Snq/K(tuiZP%p;Gp+S;JI;Lr7C>`S&K6`s'S);Qj-)n9lej:"#UFrc9,JhU*8'c@9uY6*
%7BW7l9sl`9Z)J=A=3F]dkg^M60R't)as*iYYY8.Gd3d!3K8nr)Tbe1AJe=0DBehej("5pf=(MI/d\4t?'i%;'?tn'%mT<Da$u)EN
%%TPB-5_Y//AZZB?1>%B$.;=l797saS.fGZ8UZ?7&-oI,s%[hm8WNhD_f"IpnBkDu*bXX9.5"3UZA^?q7/DpMffuEm+Z=M*&S:Mjq
%L'_NZX%9/,$.ro#8559jRJ(IjlB3_G%Q'52DA`*XBXF8gniLt+b1K$3EKf<IY&t_^@f;2QX;:jU^']-oFqPkU0NTBFfeQ46<#sM>
%]j+oI*gUQDl08EA0"Xr':B%2NUC+N--D6AtG!rhU<=3;fh%<Ld-L<N5Q8pUsLiaI"N)UZ+%9:3M2(VH501]<=i!2a*nlSRbEg5#5
%lK*oaF7R2bAW-MWUHaAe6?A2uWg]lbPSiY6k.sJ1n$+)]>l[*3e@UcR*MG2Q7nT[;<OT$%C+dMqO2!"\-IroNiV4V(![_1eDf++S
%M0bT:8)RD=66(INQimL)UGU1T>"4\i2jS$<bs.(k,gGBFUc@'jP-@t5:G?.?NQ_XbMXM+t=;Rh`OMD,1W/*U^nV'W@8)0AOGmQ#.
%;U]HW[oBAYZsck``qYilC1:+.?A^Te`%XTL1nkCUf@LlLa>h:9s0dIXk!e9`K4P@9.S?016>uHd.c=*P#Ja5Y.%V+YWK<l3`F`<J
%Bs6%A-c6+7dL@ReP]2^%VG^p@$<&,hiF'H/b6ll+V#ZLtX'1]Q0&VT/UmCm)FX5DVq;YHZji\*ak@\I)OPWVQnO:Dd&IpW[Sj`-f
%`(?YJ51>cTL?(C&h1^tP$CU<uE^cMo`3cIX5>L';)5B<m+HeFNn&R2Lc*R`hcmWDna<0BobG(r_?rg-:WDq(sDAmcJ1]bM8D3g"t
%C77j+,fkPAZ0"e@8^dr6$-='ZXPb;JENrNR:H)^p9<9TXaUIfn@PQOucoM:2+u<q":ZG&M;23al^tqms"bbgrScfH:'3,(:ABBdd
%7ImJ#c(>-;-a8Bbh.L%>+a"f=:$WF!Z:<E7YuHN'-8V_272fKF>3Q`'5tF<qoH5QN<L>G@Gi@TO2\`-VhMd+7akM)</4#2Jk$dV&
%kN)2/N+=29QP9HSTN+_;0_du1V347O/79q0D/u@5Q>uS\&eTGL7So0-*K6^qK=e'T=[R_7SC03VAK2]j:$u,Ge;$^$r5]O[L=moj
%L,-gt@4[7,4bk\"aN+rq@U7=H'!+urDM[A7Gb7mT8&9kM'G_Gu`>[g>M57-W+=uH3[/Hu@51pOhkR]9cr*_*??g$LFNU\T9@n=>\
%2T?1^T2sg<?o/0)ib@\YPn8+l+EpP6Gn#td!b6`b+p'\orG"ZR)&t.W-e,LPFKA.Qp*5p?M^_`N[BcuFWMYE`Y)OT'>!VoKQo7f"
%7d-l)N="$dG><8njlqd"4@t1-F$aJ+V':LY'$/GEV*d>dQ:O;4quTQM7Z;I6K)7c8j5er3)7Zn1*ZENbCFC,h+AkphI.[u8j8l\A
%<+IcG#Y;HJL)(c2^`IlVgr%J`p^@0?j[e5I(peq'0L,dN(YLDU:\_r[nI_4ZQDl#BJC=d0%PSf?Oj=tFi<$&N/o%12_>I,@ktm4_
%3>*,cnlL?)=Be5$TfaR.X9*7816)\X-T#&34jU-2DkW044-;#Q(B[ZnhGL$-6l?s=#rg-4(\o=LW53Er_4k15M+O+[!C@B71)oI\
%>+Lm(fC=:p:rHq?;lWKj%a>=tA\N,[g]K*=dkRn$Dq\q@TroHX5R903P"SkIpeW-;l&[V[MP3US3HPQGG$rkF'Wlb+Os)8fg^N:)
%[,]4(@*'*<hmN==k0h=EBb4SQVoJ9c`\&s'Wda03>79t6d9"u)A%.n0j82/GOi^$oNb*_N<Gc6*g\j)'4X592<6Di33Rj#/eQ@2b
%Y5:3,PZ,j4NC*reKSl6i6V>C93-,TlZ,C32381&r%BAuh9Z`_=p6g`@<h+0.6;P<uY1Gh#Pc/!m\SW=]$e03oK&/QH(9:qn(%]&4
%,)+Ggd<GYoP<n=VN+V4Mqab)0L1Rn63^cQ)*[L2cE/h\,'psI7`+r)Q#tNiO15bkgqT3AejdJr$N*IR8blXqugNcYT8\m$4#h]B9
%+UgG5dF20"?^X%h*Iu-j81J"00Z\fC24neXDhLkT6qnPh$l;hV1Z'E:<\Ck.N92DASkR5J<s].M,2?<:anT>L!_4R$?YiNV_a[<V
%De+m3<2<F6FhS*ZXt=;AqBKqPOLR6`=#/;[bIiK8^=I>`@Or^[3),AG$UP!,fQ^#+\a\Y(6mKHB2$H)Rk-2(/7]D5&YlGYC:B`J$
%XF^_AS!rm*%Xh8+hennkPuH6us2AZ8`tiA,2\:`D8N0n/\;aEP(sJ!p+HDLLNSkQ%9fP^!mBk^#R-PJOOFuYW]cVt)r\ui$+Xna8
%juDls-'l1_e$(S//(*r,qo@>9hKt7h`qpu!@3FlJ!Y=I=e[0U`PM[`HlOB,L*=[o^HW":K*0IeUZOc>pOS8p<;e(2jPptV;c`e9W
%g^-(da.[NKEb/BkQ.d2s(%N1ZqdEB*aKSJ,m,^;MP+-TA,KmIVJ8jrnYm"&m`Fj.RVnQM4cWPEO)(qr[^7CKTY,R?f.gI\+&IUsd
%b"sDeB4[<kXgY$N`i>8#@qh<hGD1!;<&^<0KKEb8[VS./$glK1O420f,#8COR?<S*(=,+h.X1Ol!Rt%Odh8UB^n\KZO,O==5QN$7
%NA'<#VQLCMR_UWI$[6bJ=Eph-A>-TV%?$Vn9LO'Fl!oHi3QH-di#n!6=P#VZMJ70YNa[eNcK'V$ND3J:pE`SdaaaQ87G(kE9cXZJ
%6iiPg=@8Y;GnOXej:.qq:DL4a2F_jgl'efCD(t%p(5I4X/S6#l8EF@FJ=FarO$+=9<a&qGe$0OZ,P[\-lhNA(q':Qtk&G-egRDLE
%!&0PD0s4jWpmCeJYC"EaPfc:0Q?048?;.Xbo]@[-]A*eA])dr7nru%dF@"):.[+D\_2>Q[@l/6FH(a+E/#1l*C-`;HZ+T&L5ha^m
%s3A4%oWiQO7>0k+@0$TTZ?!+A".=Sj%1R$-/,rlZfQ2[Nnn+6RpgfP$D2:7i@]84sX`NVgANF<n.__0`dRHEII9LTXD4isYS/8@"
%.^Fq!ZB;N(1cDRiQKEuk&9dm?mT&:Wp1Z00Fs0RSrEL#M_6b[L8b1e2rQ:!kJfpLuajEm*j?&oL%#W4J)[R+&,>"MkWI.0VQ'rB\
%W&(qo(ZdVR@,f_cM4QJ<<BWiDBU]ZJjeLOMk+7;4GY8<O#Na17;YJT$Cf-ZjqF,-BH+F1&^V9ZjLgjiPU.3iOam>"dR&S=%OlgD1
%"aOLP*r)*XN8g=9[(Dddq6?kmMS_DmH2PY/KD\[$QUpWNrc,G$SU)"Y84rSE3oeh4WpH0ZA_S%WYIDuD]jd[e&(VKi8S'#sK9J'q
%l@r!YS)kq0e)66I28/6s_ap$OUPr_s4tuHO95>]<W%)s6'i-\@69D/!a).>'>booDb&nS_i2)db&/fUXV6=A6ZQ+\C4[;De,>]9/
%L_32?\,%kcOk'i,FUpUf40%H!OZ")Y-G:`0H,lR574&9l%JkquZd#;p/G4>&7=8#FB65?],hG3$nk,q)A.=5JZDmp=^.+h'[S6ri
%->oYTZ`FQJ`_SRp-;Pi5:E%=h9g%!cLZbTTN7/0$!NGio*B/q`lg?.pi6D84NbO`/$lJ@jdSHCSGq`%n;^^'Y[!'7Nl.ZGaNl$nV
%q!feZiPq?@I?!!@Y+):G'e[FlaC*%sikt43*,in'e<i[V(NJ0T7.?SlG9Y3Xk$050P/rKnF,b=W$8/E]a9WY.bWaj?N\W:2+%.IJ
%;piT8o$a,+LpIu2W0mjAe!SY'6iu1,IX%rXgc7,W]%5L\Ef*^&U8>A/r+VSs7(et9[Zm2OOaWXTA86YN9V*,OqSi*hQDL1&4.R=4
%]IpU#Q8p;^GW@*rCRl!=\<6M*1O__c*RA?Ya48]7Z^"UQ8Z1t\R:HS:"K33$mi*HlA^eS:83ORB-XN_8*+sHVAU(209ZKBNTQ],g
%TZX?u5l_1hoQ0ZEK.H$CN"WQjSt6ao=^r@WR-X1d!#QRVOE6c7eMhDd0TM0>C^-pij/?iMZ[?Vja#6Cm5Is,F&d'D4ghm-=n@UVj
%)u3T7f2!HdR2c\5+u(.un)ahcq5>lP41^h,aYD.U@siu5_LIQT\aeZVVB@,f(RfdE%<i+XA=fGT"r@;)E6QA/P9a#RG"%F>@E<f`
%/T%IB?Q`Y!j&_<^fbI*qc$ZT>c+1nLI'`[gdVt?,OT?7Y:r&-#dnf7uUdd>rR"Y%k22jW7KWuHX&*%V`-h!#<jp:(``gTO:92^At
%!#97lPI\mjqcr$mODH^j?Wa<#cd:Iq%rt4A$(ZR./DsMu[I2MDW,5f`j!]^7l%^hNr1_ZMI50"/1tZEG=fQBijB$t`6H"B^)/ers
%4>8>q9<s:Ybe.GumZX^4*T7@)mJEP-+2+A?4HRrO.7V-plM6Q.ckH&3BVG8^l`oe<nWrkXc66!P\bSh665i=<>D[bjr$aR$J,DAu
%j[JGYo2R]V:%Co);[]Lq)O,O+LAb<T3I/Y/k3a0!5E"'G62bOlM9u1j#Wsj5L.i5L"@cH5-^[AKa.R1I'4^I-a;@EQY!97XB9o$J
%mS@(^rE\-!RGU9faL/!Y;QO:5rQ)sGNY8FreO1LA!'(6"dr&MM(KZ?\-e\*rs/=J"PXbW;-<Y9(]G!331=-^GI/[3uIA0<''ID(q
%T+o78^N>]blkb@R0D-7iR<"48?REh!:d9Ss#8n`Y.*a?<#Ld$]1_6-kq%u-hEDDT@r2'n!+Jsa1K0n.l1O`7Fj$hH,p]sgCj/;iV
%bt&.*<*!25ajEk3f+1_[]"P,'U=:pcEr;70PfQMuMsN)(APsi7$o_\B+^k`:k!JanNK#rW+eObILn@qp`Z!_(1ha>l3+6$JN3:$Y
%/Q\j34<^ccC%LQ.\)C+R$Rg*9n`)AOgDB\6+!8tZ6M7r?@pOo'-P36=.K:O\<;@iVJs.II)OQ+)o0iBtZQ)!aVg-^:Q:*W?(]!u3
%,cD#uSg7S^N5[t[>s@jIG//anB7's*+ZJ63A-%Z9M]\H7.5`FH0^4FC9HPe(Fd$,LNX2n#*#_W]NJ4Df`N/9doi3k6T3#1@=)TfP
%j:>,Pn#h&JXs+Ln99@Ln(qUr*]0cIre>+16bb%FlSJnJ7YKO%W!(QN"G(gY$[(Q;$[hQhgC6s%D4E^t^LTZUq:[AEE(ooV?(7Fg$
%q8T'NkEnuuB]+0^*//KHH?*=#(UC?f50A.Ch!?M75SJ.Cnq]Z(aceqh:b+F*VD%*(blu#!'`&%hZh:36W2JAbneeFK^Lpol>aM`H
%P$`oC`aVP^EYiWY9A,[%0,IgWG>>:QUE8HRg"aBXj[H'6MFJG\L?E:'^[]H/]8qmA*[7(tP^Lm:T+rFII>NI.)9Mi2UHJSTHH3rA
%WUc)n,tro?Id2:*0rB>NGF\VIH5(kT),[i]<O%H4Nt\(H4R7$X/&l&Jk)k.'VkTc9T)7N'=fSD_Xnq,@AbB<LWNhAr,;N;kIG%0i
%T%&^^->\fjh;F'qN"m9b)o7(skGL/_'9XnS>\>-:mND>=k%sYC[%FqSR]7@uC<.K4Xmm(.q>Nb^Ehd6%<rN41(=07aY<G#;:PWL>
%'D^jiIc>J/Yn?9G"Y7?F]$&sQ)26KuGuqc#;9sZ&$-tO@)Yr[uWoLU7OSkX1GSBlUmX4%?-eS)NY'rgL@5a^L0nnQnO_KKtZ_.`%
%1q2_f)\6Pl\hTW.1On:Epm]N,:YiNmF7Xr;s'Y?r#VM;#^E]uQB(bi#ILZ$a,$`3M9D.^mXZ:-rO4E++7B8KgibPB5g@"A<HC`ol
%3h(NUF8N)eAKLsI/b+N&^-(j]K6DIgmS^1Mnm(s$YB*8_*tN[arN5KZn&B8rjl>3+X73]C2!PP(J$k:E]8,;-bA(Hsl_8[Y._HZV
%O/NTc*nMhug\oYQ3c&o,K2t:0V7-;eN[Hg3d_=9nkm]8.%V0:eqg5BmlPgkb--bjtiD"C?T;D.m::&[p'_k)OpNHFX3n#@;-+t[;
%1NhFj%/WF<DT$ZQQ^C[e3&T0]R\R2UV:4]N&*)O.f?E/ai@J:&s*8V:la2E`EJJ-tr-?<0NEUu&DH@<hE&g$2]^#/N#pEg_FXgPT
%_+;$1@4i0ocFX(Ir,Fg%2ERK'l(H]oCEM[2T6!31d"Jh`ER>@s4n"9m;t7iH>Pq%Dd7dM(DA2e>&F6<<pA`S]*M!eT*"JEiG3]K<
%`:BM,]>lbTrQFo5Q)n'UU>NR.OP<!8p/-d;%ARO`YP:Ek_GgO$lSj:!$^Ilo+<D&^a)06XRt[,[DRXmWaFC4I$FW;BjVA[!JlATf
%htZTVNSj0[poRCOrZ_1H)Zfp5o]J):p#h]l2h$+h/SeZee6IIsq-EK6r&J^[C,R1(m`9V.19^gADuuC*]E#\^M8(/=kqD&/i%"]U
%0oXJBgYm-FZj=0BNR$7O7ua7I)V-,l&lB3/;'i52NNuQ-b-$+oLMU\b+$[_trot7W`G6I)XO&%h-QaeCk].FJ:)]S4V%`AdortnV
%kg+<T#QJV\Z5`F;[qg/Pr[N*ENp&.'"5VB54PpgDkII2Efq(X.X:olZDT.TK;?:]gGcp?nY3dD?=m))W@HgEr^^F\<U<p/tTO=$O
%f8<foHCe][2LgO1a.X$0:]F5pM3ai**um>O=D)%W/G-AHI.QH,l)ZZ$;.8;-O$geql%?3'>G+LDM_(>ZZ6S8D.AA>@7$"&'7ZQhk
%(;_'C^X4&k<iID)UW$^IRu5NHW[JuDAB1rUDch]Kc+<E<5<"&'jSs>@K#N4Xs2;CEo][<[rMSQgFp]<T=bU@#o_.C+hpu(BM3993
%^)rY'=4i37'F'k)$AhuHo'L6Rc(;F4QH,QW(+)1d0q)B!OWOb@"/>XCE9%6_'S2nf!Qg4T5XIDK"A3LN(-\'E_M\b>S#Phh&iQQH
%^e%'h?7:2c#:7Qe<[b=JId"Ca/1t4=h$q9#KHQO7^*@_2#(A#*6T&baBiF=G12Hm2[.&J.eb52qJa6o`rm!AAS,.4hoD4%*Pp4sW
%&(Dl.RT5V70If.1Mg@"OHNcQh+k&eTCN5RZ/FfncL7+I/b("#;OAn+DVCMTu.@q)0*eq36nURqR7T2CZn_:m>hkJ!1C>nP!rlbdH
%ifRjIX2VmRa'p/`Y4&oI25M.75tQ`,]YrQm6K+7^iAm@_iuTP4lV@Fb0d)"(4>/S]LfW)`HnE*qD\lrXBDH#<0XMg"BOgk<Z3OPZ
%0<e=A93sMWcmEr.<U0qg_/gA9Zup0LeI*U)meN0H.Qa=UA>*iHaV=:72:Z4J<`F+g<$p$`DM^&,14#%V(jI@Y%_-OEbq'VW)PuPL
%R":&a9b90gF(L[biECOKNg(J6W[dYF(np62$U\"D^_WN99gFYTO\Sl_;*@;m]7CX\Fndba"g)Tm&_Z8lr@\M/Z:CCZX=RUD&-?3h
%)+b9m_NW]h/0`fq+u!MjSR^iKGZ%[THBN)_(Wu]Dq#b%c2Y0-&&?F9qE`gR"W;)r*Eg++Y?ks;D`E/9k$OL.\`(Gp9_ki%tM2AQm
%`)qVB0f;M=3f>79eZ4JF`l1*?-\?kn8ru=U=-6FB]26F#0,5;&+W4S(@iq?*O_0]39Ta+McXp-IpHSpn@ZNp_d8%%&4=/I+G<cYR
%l;]2>;glLlZ@E;\;5pesH]u1&eQjcRLf`"VWm/AYfB\T(dqoi`F&'&@"5*p-^*I'!]TR0(k7V\I?BN8aBH=-;edF.i#gLkpYWj&u
%c<EkGfgfA,`8S.=[&%;%e#VtF=OB^C3`RjLL;.2okW`c(QmiMnYpF_CC\j_(joD^Q/4X+`I(#L6_Oi'hi4h%!8M$W,6719kL[oAe
%?u@4pB+pl"_qc`"BnMCsrkg4''R9Oj8cKZ*-]LaAL(^<Ka;fPC82gMH*t1_ule%#pIl=%9ZeU[*7g%TirRknIHarUIg\Xd5^D/X]
%UMd9I>1e'p6S.#ddq+Qr`of:&`2:rM+RXn0e[&l">EDiqnLBTL6e/`2he[el4?C6+ZWXG3Bb&lfWCpY#VDiPj94rIA.\iV>RqCRD
%2@"^I2MicodEC*<O4;K1T9U-+BaU'k*<NRS_8DOud=:JXE49fH\&+$Mf.&hr>MtDUmaB4:4bBWfH#Xi%$<g,q"8@nKJhtRaN1hV)
%9HO$%BiKH8j3..0dM1,hs!<uH>5ohiTn@i-mGje*IPccdiC@><@+_LZhWjMM+91mOna"DUg=6.9*F3,.ng&FAO0]!;FFuU+cG=Z6
%[atRbG2u$]i&sKCrC@1p#@<(T(NDDbndlM?8sU8q+phSp&U_+_f4#nMNnJKtN\NVcA+gnKkEnEQm%99BI[rK))mc;"B$W2YNnJKt
%rn/.Sf9t*11#'%sQp&LV3G-Slqe'E??Y<-c`b^!^flPB/A+gnKIl>=CFlmd_b]`-94icnLB$W4/B4J#MB27'uCj1omF3L4cp)LDg
%2TGT9k&bIap?%`*a6YfucS><0A#s$M:=mL%0urW@B$W2YIP]1fD#aB?ld*Cj%^pG_]tT%kAhfm5K#_)?_T$(;*6Yhdfe/Qr\3QP&
%XqcX+*b$FcaKqGJI6<;OIfe<pq\SFW4brCi6h^0b[rNmb!Ip@jn6l75/7f8p>sQ,*:=6LJRH*u\[j>q<mpVaHp)LRAL8ccoX!IW8
%<EIh8jG&gJD/$;j,KJs0[RTgbXE3]RNmdq-V<<%Sc;AnJdW:ZP$!?HDRF?:U>0QG6S>5]rV>g`l>H[#>*2=:0+#4lB*obiM0m$Y_
%JNO?hLEB9/#qrUH?p+b\Ig"?o)\hIC4U:;fZcDhOIOSoiflPC:#FIZh6#hq<F3L4cp.r_2^Wr@PNS3nB'^(iHa6\*8qBo[I?Y<-c
%7d9_#M0"oQU\#P&If`[IFlmd_Pb-cc3(N3n9$^B2-X`cXB27&Jl1s.nF-N8koGj]W!`o/?k&bI)T&6b38*N$+cVaNd@&74C:=hu"
%q<a#[Pb+ZB4QGJ"A#s$M:=mMPq9=e<bar><*4(,U`qji?FC!,akI3(h0mer6F3OXJ)!feAe$UoWIL"mQZfd]=a6]FYZ$r6(>oU-5
%G;.;sH]Hd#bl6iDldqQR[5!#W#NHf1kEnEQm%9<CI[rK))me`%1X7_%NnJmeZRoD\5"n6"mIO+)H9o=QIt;Hj!J<9cqtNNd$3%IQ
%Hi?FIT+eP&2uc.A4hnaONnSR(Stl!Ta&rAjW'.oQEK8aoe=NH/:WHT;e#5FEs)F(QF4?eVp.r_2s3mo0^E7KVg2kc8U\7L(=T?jK
%4hi4^NnSR(Stl!Ta&rAbW#a+NM4C@7*4=t.rR3LPs!2?/T^q5VBCs;6mJZ`I^QY>!jA3a!2ZH?t""0?8@6$kRon1<r?2e4lbbN,'
%^8G,>Hn>Q121t=ZClVCL==S5X?g?J-nmKB\*-.0,d?j%0mbWI4[(E7%l`.VG3c0*8R[r#Ce<8;54.L`S.j&(qqr)58"=ZR;1'QP6
%"j3Z;h"YaTLgH?W2"<Ge@@./0n_<ZLRLPn<o@^!9;[YBFAQe-[=m',:[cGR/5;*Ln*H^uSk]5r>><;!UC='BFdH*ft4/t/.`">XL
%2KSup#%%gri.AF"gWt5eXU1oo(0:FEk]Ef@H?1n]Zk"f[XW]J]<A"ddc2Z71rhZY4oo@>OS`<#:X(mdEYXP@F:ZH<aB>:9<Y:OmQ
%?[co'L3H3K8];A9drg.YFtVgt3&-q"YtL7^lD`/>dpITN;N^M&RY=A)hU-W7GU>31WcroJ#p-Oea#%1NQ:V_8m'fI1Gr@HPe?&Xf
%1;uI*MERLYZ]V!<4RBFeP)NOEqYtb/\3;<Wr]WCpT^IlWn<iCdj`&_]p]9=A^WN:?_^=_%kYRG[ffAa*6>gI%5MC@2/Q!R\r9"=C
%n"0U%LRn.dY63gFAWcHVZIS;8RIXL]I<mf8r5DZc#je-sErThqO3V@+S#Z9O9PrUX@;:;9-Ds)PPf2*NqK&M_rV;(>ak#FOM=Wao
%NQAEXDOl`0#AnKlB:@\%UE@L3@!(2m>n2lu'uW'225'kI*5nb%ouE'Ki1`4<:K-=:Bm3`ZCSr&fXStQmJ<b1:28N.2E7u4m22.FC
%E2tnG1rgR68hgJ'\rpgc0:SO+BJqE#li%G(Z*N$?J$UgnZ14bmm<*`-R3lZLrupN>?&AR:hTkfVQu;Dgbjl+3IFu(MPV5QHbQ_Ng
%ocIb"=0,otiimR<<NYZuH@XqAVE*5iLR@DX(/'/(3ut\__tNQ*bqiB"-^eJJ5AFQ4s-bZ-CXi>lm'&"bN;qY:8QoX(&49?r`nP)i
%eA-eds7mhXER>[^O.2p,^G)&=*tMuR=Dd9H,`tR`[#V/.>-6gd^&DfBn+=_gLgNh>%B%B34,.(EYNtqPa2^an&ofOm_t,Dd%K!h9
%[N:iQ)DM;QB#jjn8X4S$kc!)N,dT+A(!;l<?K#I:3,/m.OKuQc[qr[L8Q.V;p5[FFQ_VF^TQf(]?FN)aFdf(+i=OcC7/ZT/;5)n6
%[g%Opqr4p!6BttI<+uh3LV;j.\8Ysq0TK"=1h_&fr?cO0d@W7up+c4VcU0[`'2Inri6^[?B<Flg.;$mV.h?**pP!S*jJoXKL+DSY
%A%8gb1'ZKW6T;0JGIjj"mdJEZIR5YK[?Q$6K3Nuc>D6.\5=UA'EI61tC`ADNb(lP=EVo=$n?PJuIAsL\@Th_Ti_=R4bKG@.d=En'
%V+'Rm7g3Dgc;%h/R*ABAGS]lsF,+`Ue\njn9m/0[I:CJP)Hed8`lGREm%.NA:KrOd?9`&kEHglo!e\\j)fH'fh4r7A=YF];p;SP@
%$IrJ_cU+IRF:Q.Pl;_&&?dMo0.@P:$-najn*hN!ba$`RaM!9@!L95:Z8X%:*R58T>En23FG+(qsh4'Z>]'V_bY4\[J4mr8]BHg9M
%8it"%A&G[KGko^*+2K14278T2H<i)c.oI.:O-X?mbj_dg;#K.(So,BOZ_91pTej(Q];'I*MTjXh=>4^Rma]i8Xe4XLYLi[mN'20R
%iIpH$d4EY7(gX21qtI6OM,UQjk3&q`'s1s5\lL?+>-lX%[G6dbX_ZSr$s]Qm29&ja#FBdgg1?nd&LL#rUs_<!?@%6?hcrNS+L1"6
%"q#*/H*st!<rnmnp\-Hj<F3ZCIe0Kq(qsks7Pq!fln+h$89=I8UUZ:@XUSnTVS]f@L]=ln9g5u)g!0_sO`$q9(H&cX8FK4i'e>fF
%Aq.F:eBHITPFK3W\_Ik!^T+u``nD)IkAVoA,]2i`rR%7f<i7aNIo=fEWZFA1!ll):(J6N._2P_^X[StHbJS=ZT@NSehIXmDB"Y+1
%6`'-WLeC8eEbB2fbtL=(B,X<>`2*B&^Gd9,mM-B1aP&VEFrqIAb"U?OF;WbOHaH9@(>j?+QjidDlr_g<(aWMAPfdsO;KY^K`%%:q
%Q7)J]ST_JB(m.gf;q3h,2S5`-JK1_fT(S!.Q`Q?]=CgUVXi=qMUWGn*5=BU$1`.T,mO3g;s2.6rb63=g>Fd.d&RC>2]f"HB%Jb*p
%TI?rN3U?_U;mjjgYE5B.9BS@?(#D#/?._`43l2LOooKgY#C.Dh1m?Q>9uJC/AAH4]qX:eS`2\U;::#:heReU21$SYn)YB0JS$;:7
%RCJh3kZD:UGnA[[g88k'cA]5fY4ch)!kH\,]UCZm_;>GmQ,-CU;f#3nHXp9Y.RLjC&TXu@Y2Z8U'IR%IWkD$WhHU_s,<_raf5`Sq
%fu6M4h9FAs(3d!s[snj%U%VLIP'tVH03S*cJu.d-TU;f;,KWoG=dn#U1o/l!(qS)^Z68gpm87cZ.#4-&>&PZPjGe)k_c!,6`dh=K
%m(gX+iR5tGf(@$a)kOP9LG[EM/*[RI1nA%_6QB?.or-L,,[+sR9QZ6R3j[4N;S%kJ)^+e%hVhN0UfT8.mj^Z%DEZ)\.;%&g0%-ou
%fJ&)U:?bmS`M8FWPi"-oX*R8-E_>0enO;oVe`k@CMZ1+7P-$34>EbM$CYJ4f<4sa474!(^Xkt@#EZM91Z?=E.WmJ(FdDVKQS2,G#
%23+l)3b187Wa<f:??t&L@3H5o;oU;&%uaqM:/DR)e<al1)Gl:6#_.jBLOU(S"0utP'A*c]].":3^W'-:J<Oc>A^'F2Sb5`QL97NB
%SRq,HnGu_O3:7M0ESMJ@:V3K&iCoI66^:D'[83r>m\`g^fGks@7i0GLPsCU@O7=ZC"so)f'ig9??!?q6ir.?gJZ?!?+Cm[)L<N/?
%it=A?A?=p=BA&_$Ufl#iK>07l:T29j.b.`52t2Ms9@Gmt<RT"e[Pb>DONcEZgtS)/J%oHi_kV\Dkg(\s,qC!YLJrJd.ZN/Qe:u"s
%=jhnERf+,FTdig,5l^K9][Z5`Nh6[%W&BV'_48HZ>YW)E+W+/C'$$'eUI9c-NlVAbe0W%g=d?gtr1P1Ks1#)Wd@f++WX^SQ2Q?MQ
%l4&\6,Hna4]^*Jt?oW!(PA(R:R]9tSg*:ZF=&h.YNBa]E7<<E3b`$(eg;ultW,.J>:QA2]UXF/F$M9OIqLau<G:N6YhXL(iQ:X#R
%[>$NohclX#A"kH.D&@ZL(4B<M[SE<e,V<Ro/K!oG^G;@8:m"^QpPRfgp(7ProE=c*N[bObRUg*@VGR`/=sJ:?>oI':O50^ieUfpM
%s.`pnqs:JNG?q4,(h>SbGf)2<lKMF$#o/_O1a4r*CR\:f_3QUOP/<];<CDP0Bod@&c!LE`)WG^qiO%_0)TS2NH.\O>='-U+6Od\T
%(gQIhZ?nEf=_&i?f>e;`5;KCrluqCtL+1ZUoH9/H9Ijjhq!rF$YZ7n'G3&Pd:<B*gT3[O9BA.`YAgCB.Vq(31j"9[j7\btrrg[_H
%,rL%EZR[&*BkHK6_GuI9j[75lf;\VWfU1t'EnIDbN]8_[mnf?nb<e7a(e7Xq&ld_'s3^,u[0A"\\7R3"5_b^K&":PC<t!:@Z-!HA
%RL(*@D'O4&*lqBP_D'OjI4Z>3\b=!QZPfohmDOW:3cs6TF'g99Zk.%+p\V)T^]7Xr(uP8)[6kFH]AI=f1P(Us^MN7a^YA*f(a*$O
%4q;:fTKYhkgIq7HLuc[P9$oD<&2u(U*DJ!O=1>V);/70qT+bjq`FAd$g3[$!;LJ5sJQpm]I1k@Q1m\F@/,L\UMqd[UkJcH=NE'6W
%T"KHX\bg%S[2V1LrsEu-?(Np>+)goRqWk=oEV4+L=M0&tTibQF\j5)+@_9AO=7VD);fj&i?>S<eiT:,I?^67>V]GW<oRbp8_T.p3
%XiGHMb@dar*khRFI?d"O]#A%B?]VXeip0nL>&hHl&+OdD<ds`@BG4a6phMm;iV)NRaoXW=<t=u=S^=:bqtU#F0(\j=WI0K8gd\E"
%Q]IKYT=aa[c>thG=51Vo)u.QC't)K5oc\`c\+sj8g)>@Zf)pD+YCCuiI0C^]oG3:@F*9P$YAuN5NQi7U8VKY,jO=(Br:b[?XFBre
%>%l]l?'\.Op;>X&ARg.lr9F/uWDTkSG)5!*TB_1j2a>eeDEV.&4hGf#1Y%ka/p5JjYZ>']SiO21GK6]=r30m`I;Qasl`]FLc+tX^
%J(d*Z?`h(in'm9]Q&W,.#A\W[W&Y@#cre/;'=EM&celo4j6Y"k;.jkLZsNXHKkO6C:MHi<SpdL,o<tg7Y_a[[rBb/*?7#aaQt\$'
%p)f%Wa6+cGETQ$RQfXRS&!ng>NCAmuZr/s`rctX>i;A%P\bGgkj2smlCZTs8ps,Z'n(JM/UQTM=_/JPj+MmU=q=jGKn+<o*YHbM$
%qp1:/=53JACp)<4[d?TB+!(T$p$Kb?hn=;\o[dFhk>.]bf,fkTJYH':l"55@cD,9bI<piBV?@\W+-^NBiPV>frhND:[/'XSq8Tb)
%2(uK7?lrq!ZZC>+pggj_B\g3M5C9ka6L4GaXg0"]pe]^+hRZ/3<B?1%DP\SD%YJ/!GiG"o7pG]@H1VDpZLHj&?$j1bhS1V5X]=Z3
%alBZi=C6DS]ldEef1QLZPP'uSXg5;)+M4jm7K6h/ri<Q=C9JEi8bj);Nh:\L(2IhN@bsDY=FBmcKTRmc"^A\=Bq`'5r9a7<mEOiQ
%1V6mtWhQ;5jV,?[2HG-top>\j]sIEG\9](Qe2iu0\6N9@rj5g5]Mj/`]]lL<(7,)cioU'L!`EuQds>8(H._ph>cmJhMRT56/JZlD
%/6%LN?@RE0>lRq+<\,8oY80&lg\6WW`SQNI4UbL_GB%`2k[#>*7Bq7/C!j]%pph6o?O"L=d>hFi)W$\;k!ANYna=d:QDo+Yq+X\5
%nDNPKn_rg2Vo;/3H`^E']Nm$g5:h74es?V#MiGF=O,?`!qB(W"]D]_.Zh;L^EP&dRV>0uIg1kVGg#"9n3%VOsqcc-gn\BHt:jd]e
%D5$a5GGebps5j4t0(\W#5u@LWU@YYbop*$c4FI*J^Nf[bJ$XB?r*[-]en^;'kKDG?il1&ln&=.$l#H7jd@9UDd2hDl6?0&O\Zj_i
%lms\h(7,h<cJBTnXAp?G$gY^,Y7&oVoBq3Gmp+4N(<!],V[MJT>:U)*2nL.J*o(Me>BhuLpO/`]p2YYVnbJT^Yk;_2Z`sDuamR%6
%nW(*JZLag&E%lV:C>k^P*ITJ_()FXN(V_L@?I5NEmVY#mm/uY3@^5rITt_C]iA.04#QE`"rnuquZM3j)EOC5iAoW7VJ$Nb"n%qMu
%m&hpp(X:pu]ruWU(*C6fp3s:?r9<Y/PC9L:\GbRfro2eT(Z+/PDthj"h^u"f>5T*-(D`Kec,!lTFT5h?S+Gtc?"UA=Z?ir=>V;Z*
%>hFILEq@kQlKQR$c]?Ci>'HTe].&UB(H8+M?bYEFn>p!0=fpAdDE`'`lSj%=hM@XSmgS[BHrJaHI.QC<lb/e4c,C2P:Ni>#h)t]u
%]Y)o>4YA<$mp=kKb:G6[ID3D%G'WE6P5W&H?1LMI[AA5rQQIbYXHWUZa(I'NQ?JkU?X;@r8ro:p/WAO=II<VT?TS2;p6WLAq7=&b
%5<6;W/flsbj]gog0:#8S(]@nu=LbuU\S$CoIag!Rct/LbqlcVDn%:gP0#(T(F+=#aMoUUr9rmY5T=2[nj_jH[C&)dtp!'W#iLBLE
%l`H/U\%L=b9"46&\GPesj]TpA[C*VrHu&32K86qmZrd+55$soKgcFu_XkgS@hYM8.FT1JId.#V=qo+iK8b@2FO8R7fqqo9<9"f6=
%mE,oIjN=Okrpn4PO3OGbj/;kCPto<h=%8Hf$`g`dXeXF+lIt*0YeC!Cp#5(BC%_#jg2M2<FFLn!p1a3ElITA4fkUE#.pQ]ZHRBN:
%QYPF0DO6YR/Dg(be\9pipr#8/rPZD&])?*Kf=_'bfD9mlYg`Mpqn2ml_sL=ibD3LUe^I<0:>#HLG5'+qiEGWLFgC`=:9CkrB'8Ph
%Xgp,j>5P`AQI\M50*Af0SWtjdPrh`NlhR)ulb*gQlGH*gcL0)!n]naBHg[H"YAX<a`SpW^onDh7oC_dQ#A`YAk'D<dr;?G]ok0hZ
%hYM$Xd9ZeKn]fAUH0OGDqW6sgX0bq'YZ(+Z%m-UXB74$^o^)7nS'pWiHT+UBB*V4)SYt;h`kk[KhT#E8Q\QO=nY4[7?9\1tZ+E#:
%2r5W=rObG_-oSg.I6P#=<m(.fpL*OHH753klfi)$d<^4EHXe)1E.ui=$en<Y/),.`gO?lJ@GfsL4gVVderG1*$QT&jY4h5MPJ,Sn
%de@q<EUM^fEusu=*TpSuo/l.&mF#M-\@!D<hmXD?\Z<.:Y3UG8?eqaWHJn2pQ)F&JkiO,ag\,@F/\KcEkVD#7W4M-I^DAGJ:Z&9+
%G].NX*-nZ12i$8:]f?dBkI3r*H4qica49I<37ukh'h@SfQM>plG2V8l?$YXhp=C[@UU%/n^O!Hj`BW^jFStUT]B.uE8'_^?e`-ij
%guH`,h?L/*39S-JTQ`I7*^eWIm(Nep4aGHdT2dCJq#8+ck@+8@UMnQ>mNX*">0lo:b4=kIoV-eX0DaD68Wk1P]<cdprU.YeAn.N*
%nFc;@k.B2IJ$]+=IZ5t$pZAeWn#f`?gpgRhh&>-u<Vs.Op\<"^>B`S3lchS.APq60<;kC^[s*#&Ffu[3>eTn1jSd^-lOVlQmm"=1
%]R'U'oBb]?Qe+0gh=!QCmXmT^T+)jsY8r(<nGLu,XTr4imskQ_o\9?+L[49Vo7mjJ%mE/3m;MGVCc:_2*Y/%kkg@E<j,HRj^qKDS
%Iq>VSkkO/M?S6g,FC'-[+55iQn[m9@S's;Dj_qVsB9c]qcG*AR(RGr'B74Plq-83X=Qp?Vf'"m>ddu42[Hq]oW:#^9:TGjuO'gLV
%^:cY3"hW*9[AUX5;XMr&ZZ<2JF_AJ'Z2C8#YCsAdlN\Mija-gt`Oj-l2rB@L],PB[j*BtgTQ.J')EockY24XZf#,gp[oT-]164XO
%*UPug^:$(I@R\VC:MP6/o-\J&l49Ikh!U\Mh0J\[_,bi(p"S'6LSO.c\*3A?l0>,:r98jbinDl[=(e.sT"T#)GdapT@JK3gqp2I<
%Oo#h)Gd^,s/)fFBpAHWSSj0]tJ#dsDqs=!2D`b"Cnb(1[G,;eAlCdP2I&l$S5$n[mc^pL%qM46P`8^CO(\^,EG"XoV]=YJsQF$Hs
%iUY:^p\O]f4m/oW\@;/#j5o-adHAo8ihr!`(La)Jn7"=[=ea*P3*GiS?`n53=YCl.hh%2u_i9F)0:j7Jh;;lt+7)5KG^6h!H$?[r
%WjqP<m8`rHiOr<>Rk)+S:.H[e#Ifb#0-4(V4PMuC^]3N:_;Nl"o@N!nIJ`]_fn5jI-d21$DcSCc*aRo&q=Nb+c22HoiQ^<A62dqc
%jO:TI]5&p@hk$G.*5,SRH8BeIqfHfPmaDCgHs^]u:Yp#]D*NFJlHX#1rC)-Wqh';P]`$fWHi!QUn`Rdp+'7nQ'gG`cg@%7T4R><-
%<;]^!VTX@uqgA#)e%pt@m8(DsS`$j+oG9a\(>ka3D?mW]^6B*;l<gu#m,6(7gU";kX5;Fhf4ro$s8)Q/kbrcJlgSEUiM5"CRdV?c
%m5H]-p0J`qICZh2q"jdYhVmDdiQJ"cq<0\Ak%K6XIlQ^VgM.f,G>>mn^GrM'`ttpDXL>d>Q>#[AIpZo4WcqgA\50g\Sa=(9H[0X\
%o#Nt:*I$gkGCTG3l1qPb4EFkOn"/o`>eE8dS.>g@n)N]hp5=RJ&+/fVD&B/-r4Sl-Du1X.0#%!S\*fkYbFR\bf<oX<55`uMG4*mf
%KUm=RG3`VrmDX^98,)^1/j;@VVqkQ-dB.<bQMn(8ZsheZh$H]KhU<k?S)2iWK6r$eg0O(6m=4rcn#[=sdUg.J?QY*mDml)BK;)Rb
%%3Ccu]cMR3*BYCG/tGE1mt2mgOlP-Gp`:dtq\[Wi0HTnSH-5%XSl5oMs+^'F_sQTYXatk=Uog4EBc#@bUN$%j#XLl\jkGQ8Su7].
%\D:`jRQUP]HdWG5C?0E5)TXpA?`:q0SEFGG-M-c;$Er2OUl%oAm7T<-<<Obbi7XCn&C%]a\aeE#s/1Htr-6MTT93l8Q;ujuIZSQl
%cSON5gZj^aatI!OogMr_*%$^KXdjt).gK>_8rj@X3ppK>X2Y6/Xn__3PuF]Da2?hRSNif`>c'j*3C1t+!jR@s^I<jAe\^'"9IY&(
%l6.^)2!V+_WN)KaRT/_GGh'^3]g,o_deJ=h&iFEK7&]3.*Zbo.$/tZ(fPVB-*hKsd+%+'`G`$;#4+Z<n'->-YL42^=DF"E%d.JX-
%_$pQ*FMi_!QE247$Z9XEX=3WI^0_46gF]o9eaP.$"h*UhKd1=I==)i?:;I_m@8S71(C";In?#UH\3:W1FM`kA6Bo-uPDrE$"^GY.
%IR$'N-/XcXJrN`eJ1froV9np(@GR\-$X5N1S.[\_GH?sCq:)fhQTQd;$L9>;j+gsW[@EE?$_Nm`V$I3uAkkmf$9KMjq^'Dm6DCbc
%Z3)#o3mC3K,`/*oZ7Y?,(SDY4&O"B2<^['_'nel;C?=/o=L+,iZ2tq9(spgN;Wn]QmDpnW%@78j<J&"=<2lGUQ97I@W)#VZ34O4u
%Z;6#0&4IUCO/0^hV8b)rHp(J#Pk/^c]43oZgQ8?Y9"mf#?q3%ViOX"0[BaKILi&;9?:8nE7,1F??sY?4V"Jpo@Os,4YH.sT`sXKP
%P98FFPHa-E2I2UqB00'0\O9bZ-L%:o6drI,Cr!BRiS/rS6u-Rl`/qJK/[#G-VZ6eFW!G<N+Wtsu8mWe06:BY@6s>X$L;\Jh.#`uH
%WNNHu;*Zq4<U_2aH=HNfVd]Brae^&7a,(VC"UL-"%W&[^,S>4X'nVMomLrDe-!E"+&G[X0Z+1%g#_Ik-d5d/RL@"]RdmQ>(,"D_B
%9>7&gNYRjrQe%[_5U-iS,H+:,.RL3f,,/SX;M5*\:Rda'Yt,c7_9<id-(87-AL-.6SID&eBK<B6nO]<COr`GWM\@rN\=6[L?p36f
%W^a?JU$$r(JY7(-7,1([9sjPKX'Agp&pm\>Ee/(Dn2h1K=r6+L9akH5&N(j%,uLEMf)\Bd<8u>p;\.(i,^1DOZ;"e(A]3Z:!3V-V
%R\1Dc]SJe6YXD%h)?qfkL#b@q"rMAoa>PUbk[d89q?D`P[+p8k#Ae<I1f@!q"SFo%2+@r,A'Pj`!L8=9&f_/9DFH*h/s.J)#^%,J
%-qd4n&BBMKE=m1I/IYZ./tkQ7"Lo'SF<Rad5rj@4!F!DS/hMeC4-4TD8jl5WVAOo#+cs8HZt*L#]1P\S.jfs,YeVPaZjDisRhu6[
%%m82#7<^mP8(T)jK"+7V<Zqp)3=?Y!<=^<NR@kq#L=DEf^kg(VAE+%e!*^Xq5en]P@;V)##HG^s3!9hAE/CMG<eJEO>J;)V6dQT8
%6:4Q.\*]!7*J+em+G0[;8-=NsYaIFU>Oi^fTc7C4,gd\.NR/;_iZM[U,K,BhL(R`c-7rbu#jPlF2TBOC"XNFH(ND_@6&J8H;20qe
%q,3:WTm73sW]Auj65<\;a9s#C<DO/o&9(*&pkDo&Jq-2Lct!1-,[nXX"?Ge".7;]2_U/^Q_*GjFS9&OH%X;HE<S'a7M]"j1Cg(PI
%&GbB"bmAOr85.H+MN[%e((SiSW3R?TCd\l/Q6d=P"[PE;,Y/"MV5YT#i^FZYTm8QKO;=1VMH$m>9=PRJEge/RS`^+BZ2,(ZBb?3O
%<'hD*h4P;[PDJ"3#W%)-O3A`8%8"#:0ot>U@XrJ*X;T?`.>\%5QqK\7$3>=PV<12m:*_-9b'`40\-rNAYfeR'"3XHI+ts`K>?iUt
%'mU([R2<Xs4Ak((GaT]4?mSIUZB3dZ/[?LH<Pf;@R-tY1`$Gt6lI>qm-IkXOZSg^)4:pKuhhd+[S<TG7$9]>$iW*+\7ikN_0Zm.n
%(RHg.&8!s[XLJgtMYY4SklUI&E>cljk6f$tLX?-'<TMT.6DiGK,0>s4!)Oe/pDe,QBhKDLKq=)j,sApAif7U>M.>NX[<`u>8\/*`
%#C`Pg%`<BURTBVDKL15ufVHV,X^'9jUgC!Q`&`L,lM=o15W6!KRNNVER[TI\#]:o'!]T7gA-,RHVZ?>ij*@H+I(=dAP'YQ(KM3X1
%JqV.LAK@MP%CI0Z`).T*Z>ASfk7Xq[*=71mF2VUnhf,D_&B$@!>(R,Q7[TPq>q.*:jYC#2P(NqR2`JU,BeC1c1*19L0dsZ:[&uQj
%rrD+*dIXnU(h(./jh[[HTeH_(]9HaiO_+oJ!Fl0($RSHf+f*)#L_(0O.3>_1dmg#6!fn27-bG%r/85QF'2fcc^tTX+<0A5iEf"(T
%WjK5T@U?@2Lk-cV1NaB45m/VLbHh6LUk?e`.!TRH$E<t1PoQG1_(!27CGR^HM3`fWQ31?BoE*d?Z6YO%*0G)05"/?TdtlN`R?Fr6
%*bIph*g-8ZWRu0W=].OP1(h/)k.V"/R1-9\lrFNO!qK7jBdG6:,J[`4F_J#dO<kdkW?Zd>]7QnK:75s`ODEjn\Dp$)Kbu3H9nud%
%!nIaB9G0AN$BXHaLW1W&6W_P\/qdiUpu7n)!onTH)(?(e/@;hrGD/jefp0M8!DS>ALb-E0a@GP4OWkAQ9NFYeT92d:7Eh]hCKE9L
%?jecR>!E'tP7cg%BHqQ/B`1Ij!]`C\]eJSO^@C59!kdd/9"o":!UG@,b)%*M(CU3N\B:`8g8l[;599sQP?\;^Oi.N:!q$ap8=Q=h
%Cr"EZ&e!t1-01]&LBQ(VHpnqU)t,V/fW^t9-u(fI"t`rt1`$`j6=&0'A0NaPOc`lm7B:0W<6HXO$@K]8Rlj?iO5Lg&bFQ<^>'<Tn
%-O>Na8NH&YCe7mk#;t-6`$N@kTm*W[AjqD>qo%D\8%GKb8g5*p7cnD%=`=HLe)8m`0^[P9UCTb5Rn@(Z"cfs3M0*:SP(,gRi(DIS
%IH?!uSETAP#.X$+3*pFF5tK()Mn%-cp1hN0(Y'$J8/JNo'/73gd5"=Jk"8Q"J1&J<Q`#5'!1X54K%gMT-m4(`Tsp;/Kcqm*)B4eH
%j!*$p`Z*S<dKE<;aQaqT.+0#5(Acs9f]KQX!ocn`8.4M5Ci)T`9j@b[N/\<NXLO?S%iQl8lE69_j,.h"-:F*Fp'Y[a#Ehf^).,*N
%_,(4V,FNOC20ee5T)r--*WZu.QM:V/F@Bq7H2$A8OYoUd8;p#e!/sV(dC.6Ait22DoJ!9K%Wkt6aG,7VS&!!rBN5=5<*(,G-WiZf
%\h4\=^j9.0A7RBV\u-:>"XN&[C*o>rQ\!/1O:Bs=!.=^Y;ZIKJ[fT,?U%jU"'G+3IZM$Bg%7BAM\O&&2HEqq_"2NKliLQ*>8*q:p
%F<PF^koBp19JB9[49>d&oMAQ-K"-ot;TQE[.5M<>[5_%"."TB1'faWc3&95#<QR?5f\U3d"%>K3-g\]@E^,C@JS6=rHj2Qb2o7n:
%m<8&_W$A6[bD+87rZXHO17UumMW057i'RkrA4VFZ=f5fM$H?dH+;,AT!-[`5Cr.=ejjI8Z&ehF0:(Bm4"FUCs69Zt:QB)FZl:N2)
%ic>5'h:i(<<(Oe+FlF#8ZHXV-76K5F1_NGNemnf9$&T$mLq"(+Qk/@RE7dl%"Z0Nn`X.hs(&Ba+#3!':T;Y,bm,W2,$-1d+6Tq/L
%>j)`k^j:f`dKSe+i\G1n&)*Gq(5=[J+h3kpc&a:Qs-F-BG.q'F65f)#Cs'R<$6WhT![OR-#kJ&)03gRmJZ%!!"PiZTkVR6Ci\"=s
%64M@i*hjKj7gR6K["P8a"h#ZbgeJ\fO`V^ShYOYco7sQ#P_eYBS+=8&5V\W.&W8._]E-iEXp$/4+=MSg*o^@c$sp6-%i:Nh04B>2
%Tj&W.^`;_F[S^Lk6;j`b-7R:sQ'<]EWuC@,7+I(tgR0h&@U3k$&@i5]q*?9c9;$W.i`e0kkE=Za^g@6POl3`cddnpl[&AY]^6DHG
%6ZQ,!KG:u<(%u$n"Jd?c>CitDeL\"3!o-BRs,I@O/dEOQR7HVgZ>A4Bie7X)_&7kmlg!fPAnQiA4CXu3kQQK+82#Kok9qA([&iGI
%_U@r7-k'gt!,`6pSr9@8Y&s?($o"WVg*MRU4@]FhHaHHiR3*i-/U\mm<""g;d*kI^Y_>YmqQ*ePYX04pYu(`Q?77&Vn/3Ih.\N9a
%77-p1"6E?ji+>AlfW5G<RfpkF-#b3U5kYX=#f;F7a%$Es,OB,a0[l@l`$`KsY,0SQ'*,2AO%;FXB]95T!H:g4Ynn-Cd^b'[jcQJb
%*5`pl!L507>a@c%U2r/'WJ2Q#/DSTJYf\-mE>\68F([738'KuPLX1L/D?ObuO[UokGOg@D.YGeCS"O<f-m^HT>_$^$5%5Q/m_W09
%&a:H,F#Z_PZ-U@3#tRJ-D*`tLB4=pDZ!S#R1@,.rXLq=pZ5NuhSg2_)k9;G9TG]>X/#+Z^akH7I/AXUf[]=+/lNkSJ-cNek6r$ck
%*UVcEcj4o2Ye@lX=%$1NgeAShLQrFe9&NtnC_QkB4Wh:l#[h/C"<f*"<Yi=]R+S(Dgt+eb,!m:)%TLB+Cd<%938PZ!U50%^KJm$b
%(kDoh6$1[E&83(D%u*LYLdU'57.fY-PmkdgYk^FaBEWDeZjcILQ3QKOC\&.c#(gRFKHoF'`=@;/*nV9J/u^911.5,<`oJB/F<H5?
%b_*_ANejp?6m.$1!-AlrHJ%tsn\^SH>\I>\!(^ML"UF7-%bsS8"V@fp)'ePt!]etWLNJ%sGnu)t/3,?DL=e.H7$UDmDA^OP1+kk?
%(h,jGiW',4$'58G..J<l*+Q%,(D9IY#>s%Qa$=l+$k^,rOB<kR@s?;IYdY[!8k\]W'2;2e.%>h_V?hV1_Yb#nDlOsp0ntUr&9_M"
%Od)rrEc<;\KjY:)4:,\E[IK#S%]QMG\d-[g!EFg(YnlZ.Wsh0Y%1WTF_aCeqeIJJt,!a/,J1V5T+bLBZ?I[-:fUP'%S$4a]-r@()
%%[:=fK`En0d>Iun*3?VLfN3jjitD'J&0GtQ>1cQ5(5qH,.5CPui^0)\"LfQBM+#Yjpa"J?-0td"@HkX>kdm\^)9V1g@a>g(*"9J6
%$5([K@<R>#3Q=L&LT29/cF=!5!.'IJW9*fUS`5ZO5q:Hbb;^>k3/Hk>j_Zp5LigW_4DcsQ\1j>0mV.&pC>+e.`-$Uk_CUq@b8f/r
%IX_?gjI#HS?(sZuSqr>/,^UNgdf&CuB(ST[H*2h\\/0g2Yf3/<9:)lCf0du?af'>Xj-,[j:4,hFHcBT'>em]QUpgpP_?09n.X9_g
%i(Qa:D`9;eQ8J=)ii^AtLT;I5rj=@e7>_'UHdfQpO$G[]AC=I_@X@ZdTcR=k<BU'H3Qel[/d7Il6F.JKk9#^a>iroOKb<KP6J:.o
%+Q^JYKo!-HY>TR4A!\?u`*q(?8(,e**9]"\-t/:c1%$J>0msmEW.u,^P`1!+IYuMb1kd]DGMFj16G3IrOR-HJ$??BB&T@+'!p2UL
%)BQHuJO/0;R9%#>hc#@7E?R1IjXuDT#8mdgie[-TiY%8PW\GgMii2.E`[<,]IJ^fNDK,^u,Xn(6+c$N4O=XG`k_PbMcm`40fQ@\P
%(_@dK99*OLK`h8l(LeU,Z#AH\riWHE8B"$e0OTil-60))4p1io@:e&W>P0mZ^8f,,La3=SEull'#I+DJY!F0i+9^H9o;+mO6J+sC
%GgJ,LW(J=FS+pa9bR4u?%n0`riW]J[34]OT.B@^P89#l@<Q9?@8bF\EoJC2I@,D\'-e*6kTH?&mGkVVt=H:g6$1oEd,G?%'=Uu:K
%FonqX/,[IG8e@i)1O^_FV:[MH3Bi/aKYUZB$07\k/jM49IUU=^8ii3#oFmRYQ\u6VM[![FTTi#^,MWTG]4>6bSu7-L%ldBo/o8,P
%0(2&.E4@$X&T;:7QIO?cjiT__lsW!0_/qXpn%7#>6V)el1;m4$;IV*.%OQPS$ftD9G)samPW;P[l%M3QZjHk,[e6ogN4bAtP1p`l
%fML6n+i<8)*%_Lgk3tCXOVJ_N;Mp/P&i)'E@</#c6kG\.Q7R.lFpR"=,pc$Q8KiAWm,GuI+Wl4JDA",B-#Ak[Q&RhVor`0(':5)Q
%M[SQBEBiulZVsN4j?TRCicht^SZA)LTTd-+s0o>u&1L&\3-LXEWWBCbI,=Wu4r#7S*93+90#B.'je[@20c)G^F7[72D_TE3N1hQr
%b/CF#TQjtqoKH+h3h`,>W'Mgf7&1WW]`Igl>W:d0#2#o-E>gpW#g7nj26g4Wo0K#R429kNR8.liTHj3@[He8'3f`\CmlUTA@t3D.
%i=Qpc>bBZt8*!omJuMiPiYu]KV?-tCZ[eSYLD@%1ikd@,,7f?b?!0Q6N;*O-oc/FB;%/,QYR?<gN/VgKRn@Q2EA5=?O3In1iV(I!
%M9YQG+5q\>.og\FO:M.[:r"'"+mpOtTrZ+/)EDN(]qcb\j^9KQ=iA]/fF1:g1Lia*2+U!M,]n]pD+07)a5J<F#7!?+7M#q!i,*6I
%WKPi>$tNd$"T4TcYY1&hL<)B36Xn\+V:G6=fF/^K1g`K:<,@OCMe0;Y*@E(N=@(e[@:fo/[OYg[@>Ho\Yrj[)L/"<BIb4aWT&\WC
%*>BcA8f]&!c\NTffS7>iH5pDdOB`X.g/_WQ&'6j<Cmi[C'QT(G*7X$^,QYi7cVt4fUK,hSA`ab_;5h@67Z!)F)?i^f2C[/7?/Fk%
%h]@Q'8NSAY(m/:'Omm8"N[K1p=CW4K+_Qk\En:^mHVgjhM+W-9q1ZtLUY?i+50H]V^kH@id`=\aV=mduOdEn+$^jUh/GMGc\Z<YU
%CkKfWA;'(IjqgKG%c5)O'A/f8D&*WO7kE0lqm9\*2?MfM+edEG'G%TSOH^UEG[))(4CG(ApKljm#u$TXRa!Dmc\E*"ZVRTHE0Mqa
%2^C"1YF$$(Xd-CD^%i:Jce+r]Zm*t1TJ*$[nO=%-6Nq9l,l9m[ki]#r\SWTShYQtP-EJW;]a_Bg,WDBtAG)+6.\\s>g$q1/m:8L,
%M6NMbSSWLq^=#UCSesGGA&`QHN$QmDYg!3PaOja-.7NGRhLd$XMT-MOqfGDd.18_@P*i%1$WU)fls[hdEheb](^-"fdR>og]H9]J
%,0QPO8Ca$&kG^j)F(`rh(m(#ShZ*50TE/=7muapRE#@Ha9(aARE;I\2.gX0WA+?EI;JeC=^tcO*;:pP\[s13'aIt-)gVAUg8?=Ri
%MhS(Z]&$Bj6Mh2h]^b@0h4Ft@H?+AdOTJ!mk^^q>/iHhLEF`TChW`%;EX&bY+mqe-:.A'6?9eVaY]6E3f&IB!7$&,JSbfjsGW.k$
%U:KMA&7rdd?;_6`'1W:L=%S6g`M?=C,='t-4l_J)QkCGas(5^B$RLa3RJq_[^6D6X+T^^MKeKYF`H`0GK+^@g^X5`Q>=ab>H:^^5
%&m%&df?E"]S<8ft$;tDp`S7],guak^+Aeb&p;S?#AZCR1ch(Y:q'r'@gu@?>n5:U(?qV89(S^M5DMmlgR7\N5YkX_;(\fK'`C%Fr
%lnE\31)WQm^-4PtEdL?Tc+s*?r\YnBS6^bD,*)smP0C]b3hm1'QC)qY5*A`Z4%ReFI&J%.9_j5?`E@IuAe5;p1J9&+@C37J+eY?9
%'`,+gF4</a$!Zs_ITjf@PZB,h#pNXu3S-$a#s4KL5GX]XVER9ta:(/UO@!am2B.8UB2S13+k[IiR&/6?YdTZGI8QDq"htX-&1\$*
%(G&YWX;.RQ]6m7cI$k%j$R.IT7LGO*&k`Rj?t*$4'@+Ao`3N7'P9rUSN4i3U)XM+[1(r@B34tY#pQUmZ(JG/rV9YB)(9hf"Bm829
%6D>qB*+a/^a*T.<aI7ubpc.#'V0?pJT7D5TCr,005QRTNET+#ueuVC\6llpH07r_6?6RO)hR5/f%t.h,mTE)\H%Co?a?2rE"Ius]
%l#]Ff0*n^HpMj*,O6g]?1(ks_(oS%6`lP=d;KFHM'7pB-r$O'Q,\fY#+IEA70[i#am',3+SKrUf:d?WiYg*Vf`tZm=Ard-%/%Lef
%0njqjX]rkIO4-o-UlXhH<]a2s'XknJ'IG92-rKs'"q%g7,F.rDM6RP'\\\r?3=MEAMkLJZkK4"!9MZtCb]Y_hE+)I&i6"#\2aDh.
%^o"\8k7+XsJZZI^cEAfemr;ej4(KI7S36.Z:-5_AR:?XfPKD-3("ii4,7Q_0=(]hjh/k]b_ujiAl9^`>1R9Y5OE4hgFKo7dUf%#*
%+Zi._[ZA$AAFM*@h"Hlt:)6Hbhi43Y)dBC)#<XFiG#.,731h2cMnR7mj.%47%)$$qVBb<L2F^S=G]HG?mO9bC0:3HrI/1:I328[O
%Ssaha6G@Fg<DBWicJ_8"S!.Ha5=6<Y%XCElK=eaO[ZTUKHNn:r-'B2Tj9f@`WXK%`!omkn)^f5Jgc=MC.T=\]3'^"B.D?`&AqUCF
%6JaLA!u]0W`>q8@`X5*^fPlc;]mtOHn^lk$Mu\kG-H:7K:a9&@Z/cr:gadu)2WI7<EfoEd`4(X-!_Gk4/0Rpna`p-a!LibR^^lcW
%s8)/JJ<OT]FSZ1W7'LX*Mn75'Aq#N$]H&?5)[6<bNfh7=bQM>s4\G=SRK.Pq+e9mmq'PV15PEsBa1C*:%fC4[s.R1a+<*>mS,7p#
%[Qd?E'-K(OA.V0c!X=:3dS_%oDI48"BeoPZ_mQM%/=t+8XQHc=_g(2!lJC'HgjFT#<ipL8PX1;T_>/2(/\ssI^igC=T/G,rPU=b(
%hL^;t8s;1Q(G^Z-6s0n,$S4X="U#@efV=h<Kd4To+\I[FADl:%GRF^2Pp6WQ3kYD^YS25;d\R@]F>6W)TfVs36`2[mQj=(oM0g$@
%"n%O184sZJ,$Qu'RSZEWC[kM]LDVT&2,Z,o'33_?EYnEaYs'eVU;QI[<jju6cdrH.L:Gjs#$O,m7'">V"gT.[[.5p66ecRuAMcaN
%fs/VdV.S6hpVd=ljpiFrE;?oG4KK)!*T'c_UA#/o*j$4=a&CQ`0&0SgW5t/;+rasIht=d>KCcCUW'VJ!pDoB2$p4q\f7nG6U(_MT
%k&n7eYk"&Xs4IGo@n^@Yp$n-+jhtATKhY#FT+18d(0ZRTY/K;/#YZ5'BeZZ?RQ06S5ZhMV1#s!AW'92Sek-h<()Ml('/<6tkU>j4
%oOdFk9Xg!S>`1q&]C2%kTIMj9\m>,N<icj[=/nQi$$0p"@Bg-ABfOrDd+P5dd)'S'*mk!S_f&t&`'A>D]!r^H3&YIVD[LIJ_mLnK
%AK-WKPP2-[_jp4-"KrZ2)Cpb6)Eia)R[?$cQ*[KF*91_QG\.=V`f18+;Zi@r)7_k_q"SHO[-#pnBHii92,q.1mKp7P(3a'01(qiI
%OkGj%]X7P!mDB@[L)jj$F0W,h.c<PB5`7&2H(*mL)Kh'e#58oURssjH+B\t3-?[h7eY:i="b<l(7D]G>XSm(AoQC3UN.!1cAhAr<
%&R>t,-Y;aT4"djjZ0CB:Tf4_D?uYid'gUbU5=sM3ciopn+)<uok7iFqQ*t@9*e<YA^uM51'+hsBEMt=GL8dmR1!1sW&V@9S%3*"+
%J\&bqZI?L]XE"rnJYP:Ke%q(fLY,l78N++3dj2UYS_Ff3c?XJj_BGA>B]_Fb,E<HS4RZae@kgF*X!\\,/SV3@=uZW$_[L0/EU&^r
%Hs!JmI[/FW$_A#V%)l)>qM.YGS\5u1oPN=MIYJTN8)hrYXrT4eirEHbgMg;R=@]A%>hl\L]rR[9b+.Tk=+4+LSZo'=*VVTEM58Y3
%k/D``mY^;G#@opS5A=GQ5`UNd3G1V4,3\/iI0Lp&f#0/CF<$S\/4=&M7.EIbfa`O;UgZ4EUBf)/.%e%(E]lq&9_3;#aU"bEo7Z0S
%%3N.G.`n?O;B4jp#r<nMk0<!CAH][9-6lP54IffcF)IKChR,.H]K\'1SmU2-F#.HuX3<YaH_kWtB4g'3#:l=rWrGa[]_U>Jo:N!B
%<H":;YBTt%Y\9A/`OX[C\AbjNF/hM"5Ys`s<m@TYrDLNl<khcbbrb22"^/e]@i0"u&c5DtQthF9LK;baVC\Y1*nBV\c=-"RBc0:M
%r=$LIfPbLo#'a@N@90=q:G)@LH<T]N/Mb)LGI]JLhlIse8)15IZWff0\Yt,FJ_+ot+2.A6kK*t8PX^6QaF<!7.pr6nD[eM(QDnIp
%bC-@]<kI3nc%cn]cC6@!'eKCXh<E]5mD&TO=eP%n=Ym%kR-drB4>q12=MsFZ3,s<')I9\L87r.*TG=J=eV\dSS^gn>rRG>ASILpP
%,;]rZMf")RMg;Qc`1QlVB\p-K/+^Pn?Z^b.ERBR!$C2-QfAE#q"oQ'R0Ip/HVj@6Y6)f)lG#bFu<1L"%4<"RdXgj@[VcuOdaicq4
%HIe&!6a(sa\adL)+D/2Hl&T5VKNG])@-t_@'4h?L6oCT?l>,M<Y24Eb-mHkkk/W,ZJ:l%jL];D?KGAs`=%0Vd0eC!H4C26^b7otK
%4@rPn._IfPN`P&<rQmMSn"R4Z^UeZ1_(KNlHKOSE!9Y!G5k>uUHas:"LiXG>"P<b"")[4">_D</I*8B2rbE6*[l?K,EYGLVF61b#
%%XR!L%YqEqUqQW`iJbe7;Y/Cj@@HmH\F\fN:M>[AJBd6fcN_8STjE:p>*o'A>R/ZEZmXEHiQ@3CV];;t^8M7FlCrOM.L*pQll2uV
%ks9n=`<(djQ<":S%>gc2ENO2JN,fs%9b0ljJEr*ohW:ehk+.@@$*><"J+G(dR#R<J\U!2VPJ/[:B<)05[[[bFh_WJ]l*/n5JoAqX
%GUA;)BN9gM]Ws10A!#5T@EW](1:P!@S9\lTV(u<;ZJrQ%)e]_$#Ps_U?fj2sWpLeli!I4Ir:VpkN8YYMAQ9=LnHt_'?-TB1+kR$j
%HX/4(rD>.lc0&!@2t*&6WUmj`U8Qjn@:.BV3(*-oDiqI<<lf:]KnJ6Ji-Z7&OB2q=AM"9&j%7j-\;Okc:>omEMtiAA!>iCq[PHE?
%`7#d!HObWh/.W.N8JY>uSDfNe5Yq^R*"ZbT*&f]<1KX)C;(5kjko1iL>^&bAUQfu]?/0*2?=k%LU3Cm[hI,$RV<RkSlBcBCQW#rT
%#2l(L$h^Y1:l]sV<3WF%-*Q8$UHDmIlL33pF&-G9bACd@O(GjdQ$rE6B#+Y%MWjsQ'5rHf8GRbs?clW/+TUBLjXRsMs)3-JhFX#3
%DJ+4,B8"?cVHAeD>]*;a@g&2Fb]0#BGc%dT]"uXX+&A[s.np<aQZsPsE3%\[)/t<O\Ci1t*?s'K-]]+)jePJlZ%MPOaSW^SbGlTc
%/0*<@kar%u3N[b>*?H;A,VXmCa^%>b\b`q:6r5MF$Mgl+O9'5U!7]eI%Dcjf22"QCm=\\Sq]4MMERDa[(2.'lD?FYX%!eWoqna\6
%8TPJF"M,1:6gnId"\Qg:645oBBZ"&sY/Tf?5>?deR!+`B$NEK+a<XK<0Kk/nX[t^',k96o@CKQ!DSJ9h%s03RMu`UJP%G)WJk<W$
%E47JJ2FK_MUluH"/tYrI"F!1#^h/=b9;q3.;qf4n?qN21!k_l965$\gi)Fg`S%ff2b,%9Yi!hCH+BXO2_kCkhi[Jgf0NaY,p_Mql
%XS9N9SX!1eSg"rnN^m#a8U*54Poj&2'rF&pc>df2e*O;2J`;>9DGclMd0*K.6Yu_eOt4\/-?!j,JK9g<I1-2]+k!fmD%^1899Qs*
%EETpjDR`[eAG9:`r5'Z6A8g,\1\*1Q9FGiiid=M*<>=e]rk6-`,2d]DY]<3bK`trfQ/0na(bD$k'_lBGOWt>Y3$s\e#\UqdKE$HJ
%0_634K--^FU`*G!%Hpi;g0*NRlQJ4K.L?"T6s7(U@/S'GF8Ms\1?C8d+3FPC(-KgXQ<T(@<uY77=*&/"\?G5Vi-tk+ap)3S7)7i]
%q+e0dCG(O@JN(LpC^BVBji.R5KGstu<k-\`-[BF9'#<rEKCfB6#u43"7M1fGafX9jWru)O,1fFF'CHHf==NKt>M;#o#>Bh^Tek_P
%qdH56nk%"ZBs/KZ7Yj3CgJp'\Xcprr<.>k]?%\NQ(9mbA<W`@a1gRTeda")!Q%Z8$_Ur`S=%W21*oO7[oS*A$AV\5d#Mse7U3&^\
%EI*b4%P.h>:i6nl`!l1CM`32J+g*7:+2\r.NBTI`a410k,8NhP(d(_B^eD)>0k$][s8Fbl9eUt`eMbAs0b.idI%\!E@F`^+Aaq9>
%USJC`HEs6FS5W^*&U*hpqOTObjt.eXg^hZ%b[oBKs4rQ9nS2[<$CA=6-Qf(E8CLX@3lZrilU#lg3"?l'U.6;/mOKd1*s+tkSq!'a
%+`_g^UhaU3eY0ikLL<iHJDGDYP1@2rnSjgKOG1MT#6THkia!`qg_VI"94D9ZZ";IcAR@9IRhmZHE%ga@ZD![F`]P73-n"5XN70eE
%S+(9Q1o3]'gb$%>hn[?3p855`p^TF_ar*,qP`$:EZP_<$S`.e343/oVG%"3!Jb.nKrm\1*(rRoAoZo<^qr+F/&_PV$&?GuUP#`8,
%k*]0!El/jm!]&U*fa9I9nXd-18hG;2`9E"(\lrBun0I@S2r$PUgai4V*3F[5dtE^e8$0USLE\h_O5r7p7FR<^-?d`s\f)F()W6mM
%N&C!XN2.W'8Bn;(?->)>ra#GVji2PI^>TK`L9pHY+1Aa`DO9(;ju:@0p4X+1=hN\>-4&A#25d/g[&>7RP4YbGAPU($W#UIc17aW;
%q?@HQ7a"efkN.oR@CuC[bf&U0P=R<K_E?d";!=LKT):*B$6V"(2*7<1p`S&">9SG3"jCr4Bg8]LJ:$fU`2\aM$Nf5"FA66nO.C7\
%Jo?*,D_O29D)7=0LD/8_Xr\(4gp3MVDV!0e*q?/G/]#JZ*"eY2H\]I^'J[-WbQ+5G6!GXJdFLVg8^H`9`T)DLY0uE$G5CPTjD3i'
%/EGbB48=]Lh9UN$+R'ao@/FB5>g;\7hpEhVQha4ek:HA?G7X7A).n+>mA7r"#624B/$L2P9(73Q"A"Dj01i):J@3mG#<I.]QR?SG
%0.R%#Bg_RAj)W:W#&p1kLkG.]\2`hag"?`EBtEC]]0V3GHCu'ka^YG'G`Nn<Q3g'!Qpkq4h[Aq[JL-\TNFd"0Ykjq#if&MNlPVY]
%6]sL51`;K)X<M&8KN"OG'a2_Vm+HErC:NamC0rec#*P:Rri?kW2_6")Xd3T2__"Z*S+<g&.'3WiYl!MkDLM=3HTBoZq3&I`LkI@p
%=iHMeNK,rEdc:*lY62arFZd3`Zn^2oqefBIq2#N8.YosP8Z\EM$IV-Omq"2I'1mEQ^dA=`H9>*[]n'k)7=QXe*TE"B^'JrO71Ln_
%Gh``><<qEg!mkgZZ6R)r[14u\f&S)[([YiY#g;Y8DH78;,K)i01[nP@j].UinH!dMdNGNcQEC,4aq#!4Kg$-9LAc-u0Z']9<FrSo
%,j#I#(5T^LgC\HN6T@R=Signgpihm>*^Lr.Ep(M4):(O7,@G;;"#ZHZ2`ReRM1i5B:aoe&4aoa!#WXUp()d^.8_Mu]I^($T_2(TR
%^4-uii?iXK<@];$D]j/G.rM6"BFum7%'S>o>hWS@cdBWMa;^Z$@6?j"*?6\LGXi#ie47TD9^`YugFhtRW=W,jKVIuXidMc?3;hS6
%6alO(L;C!Q9Zg&ci,Y0ZZ/0'&_E^kePksnWajDoFa,TsBCVpRU4:/TFH[!:F3+p>2h-`/36:,J[#lKAM<AsmpT!5OG+I*FN[P-")
%FG'<#?erl!%hDP\LKN.'.oIr7%"<Tp(js5*o7f-e#*4cZe@7H-)&[mI@g"('^[Oct2U3\f,WU6cjFH$7\r!Hr0m]JK%[tLa\AEZ/
%eU7r%6[TInjta%K>LWe0-%H[24Rqc(*j0C*NMgTJ^q7*Ko0C8>p^LsgoL7o)MSA7b-c6ohdo;9]+W,1.ZacX%r$uukdUmMEE#?`I
%Lo7G/pI/R\?'[H)k(=ngI_B2a^2IW1C-REQSnqR^bDPt"GAn1e7q1PV_p0R"?\#X.b@(Vc%;bqb*dotdgL@OqmGVa%_\Wd\F=02i
%NOqHF\i2Yu8Ec&g#SgVW:5<o>bA`I,/jjbV6"f1:jiDPFik8^H)hJGd5R6n6p[Jabe%*=pr'1gObE4@*YdV0O`#uU7#C64=^YI>;
%iH))&s)A:qEn2dGFmc:^Ha4`i\AlEsc"A!Ne(<-D2u$D%D\a^+nL/3M2b4juX%-O?%c2PZ5<BR*1HYBS9tUB90!Te+ES3@rJ%3=s
%Lb6YJPA?^ZLMQgm>k)u.VVhbB*-tWdb8BI$.ss]D8@_n=aBU65)rDo9@X<C]nr'0-";c_V56j&(QFf3[-!,Y3[_@l?AL.e4=k(c<
%!!O/"6)A".9Whggh+s<g:b^T^8b!6k#O2W7c&R9V[\J?g,bI5,<TOCuS-aAt$k^e4Sak#3?!h/qL3k=Y2GYk1a&BFFLJukIEYA&!
%$BuaP$'*:emRKB8&V*.U$Of@)!L.X?=+@=HR99pD"Tf<V*($0&3BC`AF&.$kV^2Tl/GoZ0T`m%`8MrOEShi&b'bKG#OkpcaV(A[e
%+qJ#c,(pR@KOsJD;\ca,GRD%kGD3-83EVs#<F0*bOt!E(BR%bGE!iosSkp_DPshC3XeI_pTni3KRiDnZnISL<6b/I$H=jE%.X@^L
%2u;kDZ8!FA[)utO9b-fQ;YB@//K/eKG\p9f!NI%s#)j\UU-_DolU!Z1%rm]-(l6A]@K+F[L33\nG0LT!?4:gr?`jsgiX(>H7dYt&
%C$A!X)[,R:eCr$?'MW$[iG:%E^4B-3+S=R&.L?I_T:u%er1^NgE>R`XH:jh<c&7JaS;,:K=?@e??j.iE+eBXi*pM,p&-J9bCCk$@
%i7AgMjW3NIjj['h]7;i.o#[\1Sih5WPqan;:51bJZ6KBj#C0Aq.V<[ZE4pcY!pRhgi_+`FaLeO3ckd#D\nMoU/$?$(E"-%%I+i!7
%;G0M;,Un]H7W'O]G$@bRM':;UM,/T.1eb&8Mn33'T-ATD^7m5QL\\,8(u6NueZs9)n7A`qQd.LdQVB6U8rb2&mVE?G_&AAI(sFV&
%@I&F?dG2MgdEaEm3g0e5Qn-+k*6!uor@k?#eQ&qsOS`i][;[_(>5i;+Fe<jeZm@H/^8hj)ZmZBt+WtgC=WtT'E%GHaWE;)=*5!ac
%Y03!OhnF9iA!fq#Gl;UWWBWfsFh+qnT;BU+i+R']W6<UhkYh06PE59KLCKq0]6Z/rI1#mm!Ja5f2I@G]pNER@ocVn,aRFDr#+dc:
%$mZ$;dj.qU2g>i"_XHf>(8WE2X+ogS^EB5%!QM*Zo2EE'L8s;\+MMq$fYkqffuR9=aOpV<K1U`A%[19.P\]1Y!bW#5KYsoSD/p'u
%57hQC+U57-a%=b#o-Y?")PT?I^_[;uFm&iU.a:h%EroU%bJFI@cE'oqGiOf'XQU+FbC!93\;#U8\fA?'a[i[qYVMjTJZlF%5k1[;
%Dk`C;\rH*4\DG*Vfs5[\qlW;gJ8f$l4>obgi0T-_LP$Y!<aE(T6d^1K\APD(^W5;i44Xb^QC]>D&Xn%[_BRK_JH-:pW,a-ANeNjf
%9mGc.O?DVEW9ZD8&l,,KJ]BL*f)ZE7UrU02Ht;4*LD)D+hTlI?OU&j?=hZiH,4?P0W'`]0_gE]hLV_(\VX"P@d#6("Jh7FCO>k#h
%>':DH,J^!l*Wmp)bDq\u#Vg5S2<[a[>-rhQLTYZdh4VK770EfOd>#U\N4r<\*X,CW,ElJ\'VS2NO/V(#HJ>D1M9dc3nFP):O\OnL
%'6c)*I3nQ_$DcpAAHhdJ5.%s.0.a*_BHJ#3d%kTd@Le-BD.(:.$u/mR8RMKE$<Tfd=[8aLVogllghUpG8@0ci_m?(J7oEWa?GMB8
%-TQiO_jOKD16l/(@MJW9#K%PF!bf=lM&nhGi5X$B`XVPAo\/7q&rqHLYIGa%K#D7[MV,d]SX@@6;+W7al,58I?L@uA61dAN-UV/G
%M7!^$nI3Y'a6f,p(H,)-hY+(>)pi_T^OjWlAXtqc7fi$L]A>pdHN1d?:p*!k"!RIGI;OefI(Y"F^d&rM93H5h=D0(4M%/M'9HrBG
%&G4hB7?=pOEk@!9VIns5pJH]Li;t7Rpope6(lWXI6F8L:<Mh0CJ_#*Od4:SAG.f#R&;*!='rZ[k\"IlWAqb(0G4bJs6eD_aZI_oh
%N"!gGR5r?tJjZqb/j$,M[A&;=JHQINf=aQ?Hg`#0fnutp00QlSC#^PfPaF"X_Di.o`*`YOi$n:FKY%&(T)OLIg.tU=fBaKQhu+af
%;hDk[+dQODotn3/[c-m"LTD;#[4Nm<]g%]1,K&1rdLZ\t44p2HKJWKKmSOIJD^%M$?:61.4S]o,YN!A*.LGTshC.([&V^L[&g*%n
%]7LV9M]fidjZCR7C)Jm23hW^c*'$"B9sfT6c6HfsiB^\hlEb8fs/\SqFHEM*i@!;nJ,hMh\QDS@Lp3A!@!B\4HZMn'"7<'.\C5CA
%XJR&`1/qJUK<L(LX*&@ung6Kc15OZ1Co"JO*2F\TdLY5@_IGQ%_9a3Y)TN7/g^S0E)A.8Cld5A2$2XI-265"!hOuWV@%2^b`^]\f
%&-t!g\+QaFDk[D'k0*J)'k]hDD:H3:jSRH#`[fkcUY$VE>hW6gH5#BN/RA=KX-mOCXmBGt3-j%)gMT3?)&FeNI=tCiC5?>oKE!n'
%?5[n!M5_Hd1D4&L\/=!BOp'/T34j",_?P]_NoE?oNK-F+hR#&29j"D,D*iPb#]6(WZIq,!g(5Ud`T,#;m#X@O=dAHWo^jLY"HYbR
%NQ;D2DTY+n*\PO,57c9R:ZMb4j?(#jl,CsF$.WWCWP;:0*9Em_UjG+(_@]ft#NlY3^<+6]'g\WB-p?-WUAG9&E,&6*TGpj?AXpi$
%O.I.&ik@rZH*HPD+7@!I`p@B0$]@'@$%nSK47`(PbBO4%/n/s"(u_bRk79t2+8`4m<4`!?7ME]9[#2onfcUu@Po,,>IqXrK+K+()
%ol\X(+=2#GDs3KE:9S6<X0T)/Y!Hu0jqE=VmY@k>$G5XSe:"g";(gm^a>TRY0LT+s\T>RX"=iif-mHhJ,X`o?b*-#*(bc@FM,0f7
%-D)P;3\ddnImj+/V)LH.o6S$rO\A4Hl(0fEd;I+l&2q,,ZR6@LO.jeT"kXn/@ja%@Djm^dap6l,+;oNj:lU&M-BE**eb>Y9G4=^(
%e0[%"T"%8UAoQ26=cQ`)Q4(?'T7"ld#sCD3i"^KB,M\aQ]$5uX44,V=`t^13Y")L1k:dOr6!^rWPchDH1YBFNm)Ou-1/tOj34>I,
%7D?-Gc)CaCK,&5LX*M,D?Re*=:GXn4.W$fBRIc7c_b#\G%#XT-T(K8s>SN++]Ds2^bmg:sS92;"P^^Ua&8riQl,4.,[k[n]#&4do
%X^\U$S.(%a*?%DiLRFs^+1.Eod_iUo+YGdbDI@m45D78e7buh(q#>r-C^?mND^Zi-2]_XU'.h'YCXk'f_N\6,qP-J>9l:XT5Ld+e
%(#3u[RD<3bAF753;aFZ8i6DRBHT3gQiX1bA.4Su#6FDso%1*r<7=n#c8:eiLW5'5$MhWCQYS_/M-A9\jih-jDaXL2?UW-CpC_api
%RZ.c2bD>\PbI-"P`I;GQJWMbU%1ROek=biX@7D"$h4tl'"Ys8hN*uX_+@uC(5tnh(b^oX7W'Se)0"VI5?YsI.>g9EOi)8$dc"!Mm
%H7%%oNd,S<0<bMqZ<ooSJ9TQ+2)$7kp_;CC#-fub9X#.deM&sn^dY<d6RRVocF2%:K&J,<l*5dmg3Zdma)`(KKEC-^."gDFpc#Eh
%98!raoIr`AEXGg7+l(Krs-SBk]![\nin/qWQ"D:6E^Q@bp3AWDO@;_@Y'<nt!Xl[>kfaqlY0KrTM6W4T2%VEuHn)0W+fq!2H1cN=
%0VOc3r<suBn9d:Ii`I^u(9t_qH,BrN=oo&ZS4+gtp$A0[%ZVT0_eDPN(P\L*3nYZn-ofSJSm#GYW3-6.gD[1?P56\LB7t3>659n0
%"4_HA[N3kn>*5uT.u;8*4Q+hm%]*QL?Sk1)hWT4McToYsjNs2m7Jmr2C^%/H>2er931dQE7<RQu$m2#6*^/#2(J[Q=PpK'`ShA!-
%2`1m4D*<16Xr'Yt3`Msj->,_?]]^N#B;ms,YGb;42q":lS.0`4M9s3cXW?DkKg=E94.hV+ebq2%r(C:Sc*'DPO*0$LL;JlQ2dD[i
%DbB3O^MAoO;l"s2LTC]iY]fSdlZ#tj$a)J9GCEuTCj'er<*F)Q-h*!/.*-BbMVSGb$h2um)C$6S6H40-@Nit;XUB*HVF"f(C3X1k
%_)Ff[\_?Q`d/ej<\:NSP/;K@R'dR_,<K?V?774f9=k(HMTj.rii%idm62e`0XM/hT?0dnah/DA]$fP0gl%TCE.4G'':0os(433J=
%MW3GU*;\/:fr[lpn%NS!N!M:[],tLD@!@F&SDFAL;/6;Ch-lcZfYnIfJTLk"bO7h0B3W:Sg-`!\%1T$li3L7@SX/)[(1%t7pY0>W
%FL23(p$jm,^?mP44BtjSa!_edE1u4maJ,N/a7$=e:j:3`X(YFN9[Io>D>3NHI+($#=j`(<K.lT21CH#ri5?MAh*V&i`gu-dmiVR.
%3oV4YIM.f)LV]6dg[(B\?ne</<jUqE#8Prmh8_%ceDaYZG!ED""ENLs[p-hn4,Vc:f83ET,oS>:[gQ8UK*qnD,'-0Q)q]t&/aA2&
%6QqM',NV5*aeP2I_8N,Z9CVLIqSE7g:9o*e[!%53%7n)i#4eLBE%HqRbbUs1<(`*.,[<0V'4r(Z%YD&hp^^di&XGYcn8<@@_ct;2
%VP-]@cCL;`7:%0E4A)nlNHt.E*R_8RQ/\GGV%YhqANHI3<J8[]EaM#pW%+K;8R_m2"PksS\'*cqi*q(OWWGq>)Vt`^ZrQ6XLVa9;
%8'7#Z[u@&9OU7S"M?dU4&CT!fG<>^5PA4F6ll+s"gJH65*Me%ilm-7`gYI'(KXCAX?9ENl-g-:N9ft/X*Lb7r;.9UR9luq<GQr%Z
%LV@k1PeLq2goeP\bV+E(Ed3/o]o>P%EWm,WAD"iD3srtUp95k)rFm+H(4F4@ORIXunj!$b`UN?u`iCONfje(-b`,rpF?3/hi6@nb
%]NMHe^9s_Ic(?H@X='RJGgVhc?Zhr>3,E[P?;Hu^oMOs/^Z8?2b@&6jWloE/ZTiUL\)8.DjNS(BrKQ0UI/.V^<il>4K53cBYB$\j
%[I1=T\A?06/mNfP?%MPD>LAWE_hYtCll<Tkp`\M0/3tL508.5..)C>]TJs9LP8Lh.ONt^Oo@Z.FIC>iWGV-O2LMLHkL8[HCMje;1
%H]P03B80l>&FU2'o?=]mA3(i@;LrM87Zg[PT:5B8Mi`dYe$OCg_Sj:"al\LRWs@>7Wmg5L+d?:^@8.!Y,f\<=c\Z6,7&4!KAS9qR
%l6]np4<(4e#47k!:Vu'$CDU'N+@9NsB9N@NEYaQm.T"NI>[NT^9>Ut(Bn-En0[:(=CrdQ63kNHF@[hp1,e<[\UTWEQUQGg8'`0$X
%l\`=]XggnIeXr*6$#:HV*dCd2oq7JhCm<t;kg_?srku-)2O^;!!6T68Gu9>#djS&ZhL)I8<`1XCc7W371L'J1-762>n*jUj]J7C=
%q^FM[d?`%4]O4%HTpiSRn*aNTNr>q;Vpc!)kjd2.M91tfLI?-9BV(K^J0E*XkA3_n00*(@?`l]N=e#Gga.,)\LWq@!B5-4tmc2U=
%1k94RMtB&H^Z9hWI"i+$T6@/Z_fA52q6$<XoU66YL=qd#H)cMa([Xh0drk)gfIk^W7c.Ks0Vr8"cNgi2P^M$\'VbiUWMCUZRVr:b
%Z$$^l<LSF\bYFXn+5@bsUuO?3Lih2J#DqeQM"=4Oe=&hm.,Z\L"Cf$P-P=-"#`Mm$H1[gZ[X1I5jKR?V5fJ2hrTBtVR?4ACA>h]=
%E('0[188;B3`R393F_0M%q!RoRj_`uP4S(d;)p1s#C%T+7D<gXLXB3K*pO9^9cM:rcQ2#8CE70(ln,^3o%lRrIH,Cuf,FD$[\DC?
%Y"QOE_R<>/giM.&i`9Ao0ZT&[;"K#+=?!&rXM2&*9Co]:+*ZSP!V[R'q>"Aa6X!f9>)j*aPH)I,S1_ugT52]J?#nM#Btm_-<4nk[
%eO!s(0pcP):!O,-$g4%(Qd-lAjt`m'28B_4LT69@bKLs:h,g/f[jte`TrXPlGHL2hoDep1%*%7H$Bf@"Z3Mur'<N+Mk3*V8(U9Jr
%EEj+B&=\JV<j4-?8Zm3'I4)$e$X]PZNS*XA`K*>gi^4'n6G,@:,R6G+cO?j:--E/T]rK0.S)bu(Jl"]s,1E]*5A.&#8Z?a=-tA\J
%7I:V$G31<t/gD-?4%g:f4n4T`je\YQR*R&P<\S/B>)8@rOG+,rZh3q0h)eHLZm$mPnI;:iL;?MpUC(9<(=fX0$)MN[OP$<4]a68A
%ms5H!W;t0Xhm.<"ql0n/E4!k1@R&?\^rqi0T<5-Wb_h!_0:(FK&R5g*Ed3.I_]!b,"FDWlA+2ud2N6B]=_LgP&haM^+$sYl7uhhM
%i#-WfMXr"j'OW\$!e\mGQ%Oo(0-A\iL["BJq8Yk4d>JK"7I/TRnR*BSa!#8.D4"ZWK3M*M@>W)&g;*.t-nh@RJ3QHK0u+MTi6pfb
%eY"i=@>A$;m>'eZ7+[TfSV,^2EZjufJdAi#DD:]k;/i-bkY21o[=!`*WbHY.g("l/KN"rI$dK^VR7n7cPJe"d-70B(/7N??`98nr
%N6jA:BpDHiYk&1C-n'NLLaUOg]EZR-G;<l?1ukIB/6jpF)aK`jpn@66m7#O9L%PmY,?_,Q3,;/$a?b4YGU"4Cn\.kf;)H#sLr/#P
%B67U=R#=OS(oJ:ci6KFkUPYQX82NcFK.nT1(%lCABEUF`=\>3E<FRJ1cACmt'map.GOC5sP[i4UjjaqBc%afdOlL_d<S.g3+&NrX
%eJ7aq-mVSh0pP&HQ>7[Ycm[-;,+DQU&ic8n;u4TEj#`L#DQlTKE%]9])t2NjTVhH9P`fJMX,rpk<-G2<n.66Z+Z]j=E+m$.aj78V
%ho&l0a&VLr`B>1@+c?QqQlF94e-^d4!J_E.q\ZU<AN7V6jEDlg+habTM;NY:$$esmR[3_L?t(/+?Eg$'&@r)j<(HGm6WiU0kN3o=
%ZONc,$DOUZ2p_o5e:=K)2$ccXn`gWh-#.>Lg5Zr&dM31UkM3pqf=M-/?3_:,"p_<*\qr&7d1riA#Q2H4D9_)fNG6$^@YMka92'W`
%`*`^tnL+GYPg$7\d(c9[oqn0Xi"*XKQgedRe564IOs!UL]8ccF&Y*gtYPD/95)5;$&1(g#b_mk]0e/De_:1mt,Wl3cBn.J9:R`VK
%VTTPqE/3X_2[ls^jE.O.NX4:j%Tb5L=>-_&qjB='bH!u#ahGm5JM4Vl:,P<CN50.U#d7;slO`"%.>Yngf@VlE//H_knAr.kZX%aZ
%MSOpc(G>uJP)()-"jm,+p46=t"$o_E?BqIT$GEDY$A<9O%sM%KFkJXnJ%)+P5#S\-`NGK9N-ApRF_0;"\`-nJY_;bMU<%5qo[8??
%faa8[#IuTI'Xqe6VmYkleOOZ;2<[c1!Z3IdItk*gqofu>^ZnWGSn1s'E38Hi237AmOG-1-+lahm/*0DH!qZntNJ$\r)g(/Lh'7/O
%>3/T?:rF:VnX?i?W/C_QIT6u"G/DG!rtRE*Tu]\44-frr>q:a`&[ZrN'1ENYAHcGZjGHs1@ej-f5X9>C<"A.&BbbS0hH'<Lc^\GU
%TtC"]6YLJ?75L0?+4L<L0:;G(+X,ZFcdoOk:?W)korgr(UZ.4ZN3Wm%TX.4+q-^HmL3,RX_<!a5cIApD!ZQN<'R;JF.MA0#TAdX[
%Vn/<s6i7`Ng.GC%CW4'<ZOPQJB^VL"Iuf*W2?1c1rVZKm;188XOK'AsJ?6K#6b<,G%ghP:T;&F=Zu`&983BUNO2TMcogh2@?-`]r
%OOk/<VQXXt=TWp[K`Qljn,\A/iFs5-10t2Rp'%"\Z7j=3aR#O+kNM80o+@ZZn.DM1ifg23SC/WcHiDt9@XDYT#dsX&l[Qr>(0u/S
%"S[R^.IK4*B1_MO4_JKsR<Y%]?CM*+p\if.U:_j97=($J5,,`'UCW1LM,.(-F0V5^^IRR7qKnNURK+Gs1nqc55"gLRDB$s\5JN57
%nB2B1U;ASJ-HP[H,OOSR?Uppem,^fBI&<G]`n/m-8WBnuA;VB,CD1kZPHPA_Kd^:=?^"Ib>`GZ'o(hZ'>s@1<_L*W"Us-l62^6Me
%KH&>$';$Vs8(Wg#o8-8,kG.n&o_D$?:S<cuo+_%7bRo^2E&:p'Kcuk5LOYaf+0"E0p"9q`Pkls+/?/VMeqG9\5$ED'YYTY8@NVT4
%8bOkFk%XPZm:i<nY*g9[54Md]I3tP_gV4]n6dkoCs"s+,HY]'pT;e`fpXrd"jSN:%m3<Nu&-)/fr(Ju@i[6oW`m9'ORZ="afE!-[
%f#eRN^UEWcPb7_-/O/C],V_N#-WAOm*,8F5r+qlR4[7mcJpqgZLn_ZB,EdMIPicZUmh^KT=hhg0FT%YML9P$s@tM"Y/,UB$56p%%
%D*Nq@8_j@9@PanN#<k`=O/,]2r]J/[M#9!ULK+9LLNtY)SomMEr]F$&'D`sL6^7S_7m''%cgj:cld(k;&c:T!,AM_aBWgFq]$nmO
%q_S$m"TQ^(!K)A0r2q=F*qqMk1ffWmrqV=>W;^KaIY@'[G0rhDr`OqF#lhI*4@&_gS'@5jT=9hpg4.s`#K6Y[[;g/:)[HF_r]_M+
%_"8.n!3fRda8g2XQkfbM(A^9)J:ErP"5k_t'a1b-KNUkHS\t&n!+.bYO6$E;LBdq`Y[.hd!r.O@6iral"#9m^$V!G`c`]^8JEPOH
%=9-apb6=,@;h>%rY>^Sbc`]^`!5`f_!N#ID_?"?#O`Z-3Zf2"q(l[MXJBnT/aE:un6D1-'847uoNG072[/[e#!9VQl8q7lQ5YOFE
%LT?pFmii8J$Ktc-?;c:]i^d%!X2@J/J62K-YQ4^mLpV[NcfW1MGWgCA?@WnU+u!t[Zl$po!1soC^l4\I)Sglq(E5X)=h+Pp9oLA'
%e,VH]3ku.FOWE@*H:3".)*B*+n?iM/JI'*`lWAnWiEh>5K0L_P:m0+]&Kp=/NhFEW.7it+3g:m<Gn*7LJBuCO+SA9mT]#Fi"@tX.
%:/L6UJ36+hrI@.!8Ni:d./6W75Y`k3R0$P7VM,A=H<.&=?_,5h"WdSVaT;m=H-l\hSsM#os3(ieI)Wl\PVDU:(GY.DccR*O_sAj`
%:bj%`)$$9F1I15N3<K]YTqDGdn:7;8dm#$k^^M9G2*eb^KFQ)SBd@QR?nZCo/ngI>#1'L%!XBQio+D;t3LU^Dkgu,oe3SXu`=>LU
%cH70#:$)TiOEt+$i8Z\+/:QMs07V@/T+sU>W?73e5jGBU!nO?5$j,pD+U"S^8Kedq<XbZISX2^Zc9<n;J@!t2,Qb\B&4PeDUWF^)
%fF&qrpueFb0]o7O&c)Obj:Qpg$RFLJ?\U<B*WAX(":W%ZW<A1-H*IJdHX8>`j)nr^S5A-pF@+Z(7cF^XSs3#9L6DZG83/2n:b"C:
%;#i^+UJOhuKG:XlNhdAF:Q$YUosC5U8Nd\c!'Dp6JCO1b$:m<5X.Uc2'NSU_9M6n?.gFu?(_0VmKn9d;(?gE*P$#LA*YMW&SEFH!
%YVZcA('%-&/bH+8=E&id[,_:DifrX.#L]./!g?@e07:DfO!GQ]b.WZdi.<\F@1`4?64=jb(F]Q_F(,PK3[MgsKX67=8389BJB`!T
%b(-A(a>*ac&S?!ql_GDKcA49@FAq`=G8#!Fd_O_/P%e=H8YH?SAm23#4+C/0iG4Ha"5*l`is3F1J>]1^ODmt-Ta]_=I"V.Z]mp4D
%3=,rYfiJajh9%r8j+)f(64QOH.HQ)UP@>"AfiL0==9:sD%Y!?k_ipf)G!).SFh$=`#N?6[O?%Rk-Ckfp?t&1C*]WfS6ls''h$7s2
%4oSU##?\L=Oq4oC%7D<1J9m?++?hCTTVnSWkm'->[.o7pQ6t]8fM2ML#ia;G&>`/l+qX7U)9>&CSeQcAdRbkn\f;7!+G`h:6!R1G
%"&T?`e$9N)CX^-3*%dB&&3A5d`?@)2S32H6ni;8WY:W:4W<eI^Ti_Hs0U.J\<^X\/r8A70#c)r@1kHdJ&'.5E!Y5Q,YfTA_&cBPZ
%GQc<(,Pd/Yf:d]ti(44],b5a6_!,nc,N3Vq,gkYEPEN`[F<i1VpoL!=Un/<cJFR5X;F6<eZ_A)BGYZFSP`?Rf96f5b95la+M+d=K
%O2ssJK6`"ST!'2tR(1o#`^1>DW#h(i?j;[J9sA;laA$WQHUMg>)epob!IRpk!g@;$GXC:/-D`)OH<u!Y/&o)m$q65,<eph>Srj]j
%n9HaGkLZsY7G/JHJeW__,q2I7OXLCk3EZ]bS.qhcdRe-[[(nqs!rL&0Sq>f#,Cp4#_n8A@1O)<`!d9Eo9EkIcJ5?CZZk#`.+G32&
%.Th7I\I/284<Rb"?$hj<^iD4DXhY0sZ5*;T"2YdHs+kb#$kOZR$H54_?NK3Y8AG;-fKd<J^dA\Ai6sFs0Z-Zo=d6i886MV@o3rL0
%(AO#f"n>)N/NA)!OL=$-HUQM<)*B$YTrg/;\*3<W$='7qAgK'kG$a52d96&r(E]8JL4U3FSs6lQb)tlkk0-Bi!r0FtL#b9>II[4r
%(;D9m;#\>l?3$bYZP"*$l+@9kC$0aZN0<r:+UiaE,_aY+T,#6lXYH'X^^(qe@K<$e`'EU=.#*LA.>uS,bX6B/%fWgtL5`o>JIDt9
%H&2qDHs.fUj/$B>QN;J;0V]nbQcpioTqQ-h3U[Ji1ZTT2,Ffo+n"hgZ-(,Rq5jCr:$s3M-"Z/j2#:).Q[Nc@np]umj1h7Q<#\d[B
%T9mufe)7<pLA6&<a_;/2_1bZn/?@1YT,#qm&=f';5iQKt%<VEY]Z+$=PEF4HK>#c(#CfWfUTB2;\IFT]_$pp)8ob"?k<q7$b+\/+
%n9Nt%T50YIkg3+_DkMiKnf(j^1]\(H;dC\/4RPWtYV/bpE*u2-(ZGGB_7UHeN_?]f*<"kPQK1<Kb_pKaot2g\>%Ug&")2DE3PP'E
%3Y^hO]A]hb#85>iFjLe;;Q9g7k^cik(oCs,3fnAWY_-8+"3D&4Z_AK7#*P*j#OtCU%X.]5I#%ODbm8PJmBhO:2m@c9iL(edpkRc)
%E#&!6s8MSQo'7Cta5cjMs7"3u?i8ka^V/G;prT`=iR^:*6<<Z,9DQ?lZp'`r":Is"T;AWXjW?/Um4\M!8,qO,^\u\Ir:W(as5B;o
%p%7eW9(=i)rpB1Rrmu)'qt4lVpr.1OnFX3.If>sGIeFl`ron?n\cdLa9)B^JnleqU^])d4^QXNM2a@,_Dna8aIek/cO/IL-s8Ctr
%If$`)(@(.6s7QE`li6\WYFbaZDk=]@oV[1,K'nDDLOVSbji@/:ci<08rl+?ns+dKos!,>Z>lIT\J"bY"TBKeilQNDW#nJ\V4q!bM
%n\VPrHS#.B/MJk$U(ni"5Q:nm6*$8855kBipoj^or7h6WYl@jDW_`ZZl2U[rQD\*hAbkA9JW?\Q%E?ALi;VPb0_0iP$jPn=0VDEa
%bW*?g*[nA_[dQdM\1@CWoY=lR<%/QrmCYE\rYlob_D'FGj//.('u?R\h<242\aPWiMpLNd+@AbU<cWgbDRFeFeJ>C5.pur`12=E;
%C>/RoD-h+H>p#=2rT.Dc7;U[9_j:&dkLpuY(8KH1IXSI!Ohmt$3rH=4!,dE^00I"pou!^[RGABr4T_$lP*W:M:++e9/=]j9fZGq#
%Wsq%A:>?KobdG<l`/c'6rAqXM64*IS)]/]QGR)!1n;K1H^rXK6\HTH.:qLak-\ocFf6t9I*:.'I$6jYg0^fH-$e0*>aND@n.u]S#
%>teuCh1LfIps3b'JC+_"ckgAm>M0`Aq:,g%<*R.YYCIAIbGagn%!!go_\Vt8VqRNuG1=\0_^"QmoRiItn5$MNT)5[m?"uUQhP7Nl
%cBR@f1Zbf#:Ui:@'lJdnbAnRV`*u=a=N_KZCPM:,r6HVCXmiC'm:aoCi]8AW'>NE6r8\)H]SFSaCbTeXefdlZ+m2eA\rg@YDWFl@
%42hccIHT<'b@'BaD<.mF;-4bARpd)<@*-+aXt)!a4/.:,1REBu%-gdsom^&b5@<\(V30=liOH*MPb(N/,WE?c<lgQTTt[<D`p6:J
%]@"r$;M)UDRPE=_\k7Y0gB#N,FHnWnY1VGLqMg6>I]f@0jbd46>41)IXUMK.n"BVc]M@9o+6R3#GEV1sEgbm11SW.kiNb1A>jg4;
%INJhp8e[r>\fqPKhkHGPk&(L:<'pk%GJJnA3[AO?H!=&1]DK=XS3VPZ-n!^c&K_@0KEViQ+=YH[q9='R^!VNI6$#Ub1>Y)h?!D1I
%#%+_`BMK`R#OssaUES_S"#>&*M&QYcdBdCos/DV?.25&r'Ds%i#&s-9BS<k@)"NFP=_[0IC5FO?CW5.HB,ofJIe8i=HMX,'rpI81
%ro"rjIe;+hnV_npePEpZeITFmhgY+-s&!\m5Pe_Or69`i_a".#^SSFLGhC.Zr4-u'gX)j&)T#DdD,&a5\^ooGpb1.Lm[1T8buZf0
%KW4BM7e]9_J_'JOl4="kCO5Q_69N%@4dNMSfNcU0gEQ/sc)CcH/Lje*XQEGc[=6C3oieBH931VPeYRk9K1"S$)*7P6%07NeWMVqt
%\],cjrEOF!T?tkE87Z"[)u^3$M/JD3d-:_JIkY9;.d%8hM6S-Jks-AfD]-3DJjZnVeIXZ5.TgIbZ`5mc?hEBS(9IM:(;=C'WT-4N
%,l[R7\0R(Q]RrH#jC%>ECio1C:,Y0@4PB42>93aSgYE>:>cij'&-s?q=T%I3?Y&6%Q=Dt"*7EhlPk,f0C`1t4OWD8:TIWgb'd3H4
%m;[Fp\R'#!Q7-YDLkS&>*;]pu_d28<i'jbg3Z^aeN65qC4Q(b72jPM==&)Ne>NhUDVZp&cVd=4n=Hh-0d+-epLo#`f`&Z[eOsSDZ
%qkCTp*r5't@1?R)a`13(`Jj<g(EkO<TFKJVK)efW(XaIefqcC?acY,kqc_9p$m)`K^)uNdpN6TZPRBel:CIFJ]_=,4<KrJpFRaJ2
%]to=\j@*L1pG5\h%72AAHW[iPmPB\4R/YN^&e9Sjr4.Fld%,C*)_Z!]Tn38dcG"qqQbQ0@$u5V2qoM>Tpcl=>RD-p;FBl$fDF3"?
%iT&:@3!AE8>>h)Y;nXJCR]rn(K?87o.L0&&;Lc>3j.3l742Sb@mOJdQnfYi-,%`oMILSE(^U8Llr_[3WCdk<70".n;'une4<O'ED
%.I(P.VWIV/DTg@nRQp"orXT[U+cl!ArkQGMFH;[)UH[r#ch7^ZN^s&b=F^X&B&'fsj)b.I(n\c)=WFd+pjAYgaVlY!DX)@79g-5j
%QTqJP[7#gN%!1DnTNgt8-3a1dc7M,"LOgu'MJo,,OHt[.f"fi.A6q<=?\BE!I=ptR0_i#l</<?)QFt))B!md:G)]A6j"W(3QXOZi
%m*Xi_n*u6HLPP)li??Q&h=R)/UW2cl:H(M9c):_(+!0Zu@I"CseGGlf7.!)"O9U4'kJcEB7AL#c"*_>.9&Cc4[@A'SjJPEd:5b!I
%BZ];6IY!0lGJ.J4h4u`lP6.P5'&%&=5X/rJlW63uc%ue>mdR1*d=%oN`Mb)R\_<+I6V>@A/k8#XPr9=[kVcNTTMY(1%W]O*W%4tP
%0dLg#CUS.$+DYGq[I,oNDq#-;8qS6Xc>/'sX_`ukhsjh7H&)7!pTRZHIAjSD2u/Kfs+Ao#QS;_V<eC([0Pu4TXY>BMkdk;I]*MpK
%&qW__\i'?epo];U/(&%L\lS)lDp;l.OuPCP3ePZ/mrpIM?ce!*@L)EccZ&D`GShF%Nt-NsOn:IXp%HjTl3Sge2enX"e$$ONd8f-2
%8'3,?q(,r5f[p,gL*=)XB`4p2:sF#WpHPFpqh)&]qnqSYK.#&:\jK8po,Y[Z^.5cqcX[jLmd/pY&hW;-E'IJF>l3]7lP`2KCQfu:
%Q*-\VA-q`r]`0F_Bh.(B%WdiQ_6"SZQE@^Pf=T/Q$JKs_.b(c:epV'cs.GA>rp]_a@cZu&mDL.27p:d6Y)fs?r<7&OZ`').pp_DM
%L=P!$OIXTjXq`)N[WNG!(.r\EG'?0)<%n!eQ=GRFYc;B;<m.[H^O<[4<NVMQVco@Ohd([1N5kNfgO&SaX\U=rq=^^fmfP^<\)Y"_
%q"*.kA%8kO07TdgrD-j:LHoi+JIfYc2XsYH+G*;&,(nq;)8m"XPb-)&4Wr3@$6cWH;ihi00V.D;79Es[US6#-FT*<j[BDU?$3h3,
%[k[%V;4drH"W<'uP]YUTgCkcN,&aBL^PJN;WR0YPS^BLo5)1Ft"Hrde"g)%eO4s<(?-a#5kU@(X_jMRNnF(&#/=[4[ATJ'8R/p.p
%7=u<1,'ASOl'I(Vm3)@^Lp_OC#BCJ\B+Ef0bKsJmH&9?XC^kaZa,!*24+NQN;SNK'U;(E'i_;mL?X+(;5YBVtL2LY*A1WgX3MI&q
%HSd-Xh+mc=XXd4f]#*'^4NKd,fP&&9nRt&q5*JeP%q5lW]7U:r3G59dca_:[UlE6kc*(&8).DaG:(<"'Ae9k,nN7hFZuH\]=oZA^
%jKjO7AmO]qh0Rcka?7JLRo"YK-'nh/A#%("U:.mG!_@Fn=h6.(436s9*<(l11pIe$KKKh%<L'-Wc%u6C8q(ImP/Z`(aUrlC=Q"@R
%2Bg%fPBP38X+m_<JY/Wof-%)CLb&\'P[]_KLnZok:d7nhF>#eNr30q7RpUf!falsb#E_9b+c_PU3Z,CMLYZMR;&$j)66(]Lpf.HA
%D?jn"[NH1U-o@l7P:V<`NeFd><?1ZS8W\]c$);(cMCtT#RN@QTd)Hrsh0?+`I"5hUD9>cpC3en#,LE?DUsq[BS0?UOb;'oe<neZX
%7#N"?K^@Z3JTL-BoIm<K4"W2(e;J5!KUEAJ"RQ-nA!IkdP2_>WLm[,>eosGS>?:\B@e[d8be$l1'M/Ul*/3g@&@o392JTH@:f>''
%'e"_Z79L1;&)"d/45I'T[&48(@0A<JOH#W]'p!%H]b3?JSE?J5Pu5?<npt:-$.0J;Z:`4$L5ITF)rY<AF;qaA&cU?WJTK;2\6HTb
%l=\da2hZ'<2UjD:/I0%8=4@a,aLoVu1.M5o,3[?rgN0K-%e]Gn=uVlL-uq?C,oQV[.!tF17ATVQ_L6rL%c7fgm2):K-rTH+f%LW$
%l?!@Hk$@p9l=LlRi9Su"B\0CELQBgT4$*-/BEf=\1rH#Ra66RB-o)t[0tq\B!Wue4pZ\ITQJ['d;]uBkF@=&1WP:i_*hs])5XJRW
%+f'fDQA_g@U"Md5ERI7.XJkVCT(@sfBi!DLLf-T6Gj'Ba-q2h,+[gF?9Rqp4O5c<))S;4M>q)&U$]/GBP=5?l[Ibo[+JAn;?RUiB
%[:]cTY,;s[MI8O#.OWb4P++BQEfHb!aBm7:VH'HhpHpVW+S&Z!JehIR;bdZ.9/Tp;W=U.t/V92qUuC>+636#.r5oJs*bX2]]$[d\
%mfHW/`b7:t+l%0o]7Z_Ch-<?`/G]&Ho]aa2e/J%QWh:I,[0@_G4p-VrD3o/ue?('M\U-9G61cY\/"7/K@WGEDD3#0d0q(Z(L1(>l
%?V6(?HC?ON[hr33\+23r\d^Vd*`3F]%(dj#@E95]T7f`@X:<Z%/*O"'l:2P36b1-#5L)WO3;G@I6[)rAId'^9*]Hta8-fJ,/d%4e
%A.bQ0*i(?[=Wq,TcAF^c`sD>V3J4AM4.9R3l#V>dBkaH(,#?1?7fl5g.%PD4M7GLW5?^QRl,VHV0WU[,cbaYlM-SUl>KW(W5D;0&
%j<l3)Oj\cC21c/fRA+t!=HkKMq3$H:B)K>-q0p8J$KuN;?Wh]"<k1Rt%[Df]Z:Y3&h//I9b9e2H.(NrIP<"u;"Q.#4Y"baS;JSh*
%-Ckn@+sP"4%M@.)JG26E<Z6UX<p:mc%jU;-(;3(4H3ZPS!@"s'b),%fm3t3!;2:Ln0S`rH([u\k)gaU1\KKEq!Z4?o"d\H3.1;tH
%ae$`lKLFH[3\E:lTfRp8H8OBD;[Tof,o2MF']pOE![\42esPD>LHA6ZV-f''rk[&5aW8KA,6rY@k!bK"ILGd60%7-^DH!r4NfnXt
%j(JmFN[1EqFkt<BU-D<ap!)j-%s.Zg[-JTTf+MSW,fL($E\Z1Np$HdEg/Qh'NPDcQ+/cP0A;`:HU+_BNSgW)3H`WqU6P9#(8/"DZ
%J"55+(fWZ\6eQRk7'/c<dpCAeV_DUjMQ)-rVW'$Q2YdB`%._i`QH?/nM^<J]'.*qZ;Jp&p<P:$"rDC$Dp>$=n*kiQX[t'Z)VYBs^
%6etVkjku01%J<q;>'A<=)M7rm$"TLpDJ*^WhjCS>P)TdePof\?>`Z;qD(F6UCkpe3Y5LPOTYN$-Q.lP-d3CM*Q#0'N)YI.%6;k\p
%3[RHH-ErNKU`1I>GuN?aA!QY9eCPbqKLLYf)d5"M4q;TH`Fg_2).?i#J7P:Y)+;4%VOpQu>Y!M3,I,<o%(ZS(PpKjnYS(>J?XuVQ
%(`,+Pdf\kE[2cKLEi)-<"m5"O@UWE+%746CQg.$PWn4LC_<b@ZrZ260:heft66'6cC!eO0VoEn$4#qsV1?%)g>?AfJ4Dhp[BX[ab
%SClr7m'_bXWc"C-Tk^RKY(QP0ER6<a#p!k7UN:)`94SoXipTNrL-Ucb/9[t46%DcTdtW1Ub9W<A'0u<UP`9Yg_I5>N=t\m:=:&tB
%6.;&.,m,34J'pdGgPZn7b#h2S[:6=OJ(m^(P]?e"hSPU)9Q06X+_YL,&)@c>D'?"WM6Le5$KlVJ^HBJqJ<W,PJ8O$FW?p3GpqhTr
%AV?dFoIdq4#"$sY(E[i+@YA,)m7Mb"LjD%6KUnb-_"*-\<-M9n@;qJU<0qlN1(oa;/F4U:.$Z-(:n>ec!p`[lBVA]AR@8?`(:]'9
%9'aA!PcY30YB[6BPWhd=/01VUL"S^T/2>4s)\Wc?[\Q/*0neWCK?>0S##$.[P-%St<Tm#2b1N\#=#U![&!^F]nf1k-#b'%E/Vmio
%BZWS+l'B*M3r.@ns'.1B6_@9gJAObI'SYTT-<<@sk&Homh^UaSd]9u;`%Fqh*##j$U3[H`b-=[:XsSrgLt_ZB4c7c_5#D[`\-%$J
%jC-G49H6(.mr\74On3u9]a8r[AC2pd3k@%t(0632Bh`+c4nTLUA#"fO-JP6[6:4bAKhFii@j7o70sAQa$W)jd-T7n*G;D$.]+he4
%o''?RdMZuTG7]WUVs'+:miC\Ks,kNOkP+n3im,k1p#:&.@i=MdmngK'iul$meR4&R?]/$gf)(<W:j9nreEq/&0;hldCu%A7`f^8W
%UFfVTU52luLh[FW&+f0Q$p@7@i,l*h:ffR]\gA"-EUD+L#j5>)G09nUPl3SY4k^r01X7ICNZY#K#FN+P'\%Q5U0YlU%UCY)l?[-j
%%X/@^Vn6lF[Ka5P5gA[UmY6Weh;PhSi6K%OoVYs81<U!_*c3Ag,g[obWcHF'g-_8P%O1D171(H,WFjPI4&s2AZiis'YY5!^*=dKP
%C\r$61A&Cl^JTWF?Cj75&#59\E2SH(-%d.^PnSd2T/,d_rf;*P_1J!s^U.p*q^'FnK>JgE<2=B0DsnC*K:qP"LAJGJdd-9Fd&2s%
%GF)`M=BOXtb[ZH3"-X\VmA\a]UPGd1K>:hP;EPWuH0H^n!d+r=O)f$]<1p_ph=?u!ST:)dJr"RjC%D2j2Gn4R@k&72MF^UbLej)O
%"oo7OXC\)6/48en::%Qo!<^^o!]Z?%d;='*Dj3VSP5FBWW1SF'WHC/mT[k\j;=:!;o]<-elOX5fXM1O`N<nUP$Tr+7G=E5"b"9P.
%)8UkCj0#_Smu/<&mu.a!#1AI?a6buQ6G#fnF8,`X:Q"sQKSB@LeE6geML4*!"hSg*oH0aoV9u(7e-IHTRi[^ee<nQi`\dG>#kZ?k
%W<L`WS]Orep4<RYqB[0]ooWs4@DMV%4OhqaT,POr09/a*WKC0U]:lT$TcLXK[&6AY'[c6<)Bm.m2dHjYV%GqWHItS05B.aQBV<5Z
%`kU0:<F6Zd`NSE=I;+@27MH5<*P0iWhOfp*^*RXL*I$Cl7c?.>kQu[l<K/!*Nh>fDdHA2T*C%`$-dnW]R`A20SB/h#bi:';FJ\WT
%4FSop5*8h9ppk3QF#ER!LRNMDUO-#>n`[jQ>(.^>hH6ZJ60Jm)$aGc]+uG9WMliCo+SHT#9oSJlA2jWdkI?`OLkVYobJ>K!c/WWA
%W1U3(fEjW0?LH%t-goVkG:u+!I&<U6c9SDG`*MiUp/4BM>/!RL'1BT&,tW"&]WGXG53]d7GQ"WNm@G/!ickXC_%d$#pa]9Tl(Wn8
%FH;5M3\\u(&C&K`lN5HD6h$3$Ck<iMLW4kF%%ngLcEU8h(qS)6C49XeFcu_1-Ei4K`1`06?UIZ%-TeN5$"Z*Mon(f62]:KrfZj5F
%5L(.08jucJYF?KV,0UN(LURPaK?D87."IQD6k&-rlBnc-'T8=sJCQi3P2(F^Lc/u>R?7/_Ep,E?DW:bU'8t2lBYdEPA6s^RP7S/f
%VlVB0Nu5?A'&>$4?60SY(hhD@l@lIZf*HNBC%%qtAUSOL@<<9][V-@"D>_#qP*V&]^@\B#0D?k1%aK"J"6CfAkf"9uq)'1%[a>H/
%.9,[e0sW2!j_#66`=k1%MX^.i7N\j2;8)4&VnuA.)/;(beU#dnW&M%kT^7RsWp($ecUBoS;03B0/k:!.3js1=Kd!HnH5!PR$tD"5
%_\!97+,7Bc3?iQH0t24t=mYWJN_)t\?-8BHr++:!;77J>%UI5[h:.HOhF//b\m\E*mhGTSU$g\>h+kAj\2.;UrI)6<i:"i1D)^Jg
%[u1,D5=2ucPp>U8DoZUc3tDg9p>U_@^;:5mSJ#9'I-9r:VP4"dnITiP^8Me6)Q)ZD22jn.'7dok(6:3(I1;XI@MJP_CT)0?CY_2)
%1m!c]l_8<dLACu0Gp8jS:")p_NHI7kHYc(JJb2&j4gAiGU#"=>(8FiJ=0dSWVRb8PRKc1r':"'fnYkcI<k&[ep6%5QpG74peqcaO
%PY!ZX,dC44SJ(MRI)n,]];I4E`:1eKm@qpM6]<T;<8X'h<PQ<i4$(Hi(MMUFZ#i4Kh(C8%WUWtM'QRUHQdi#pGsfMZ%7imaZm(`A
%060uCfHrKY@^PqHXBZ;bq7K's0o:6197PA%(bd%o=A+c95_NpP%&A^++EYZ'(mD/r^uKm$06,i83"WqS"iF>*%)SoenOdiks3(!]
%`/C:S"cR17"ZtclgL4m28U)*'j&Hd+$CoTKZ;Z&SZK<Q#fRnLDORoqh],X!%F'VdMRThgJBWSp33nk.iB$0d=@CnQ>3pSQJI_&[G
%@/L6r6#8PD?`7?bqqdpo:[+6u6"0E8-(A4E&5]e?.($Eth&#htZ\0=h(3VgK6ogV>H"-06=C5)i=R>6)GA%Q4<<!t$blm<S[N_!O
%;H?[NXegf*2$.WC/R\`c-in)M_(,Mu\"tg]iHP[E4I69?cM#[$0s:I,T_)E,5+27GN7`P5QZ3cG<s'j)dh9+>$-.grUpgs>YK/tn
%#?G(>G]#"`.2PT:bG;(*LQI47gpsg,04I`e3Br2_=M0D"GloK4N)WT[)R!8%$aPV_K_,-R8]-/F*LUtIUdGs:d`\N%mp^BLS`G&0
%99;8/Zh!BhNp!LRT$h^;$Mr<A\kou5/cWKPM])q'Tb5*DUZe.tm"+l[PIGYV1:!qa!3[o"l]i`n;g\K$KW!`ichcmf/DJn*hTS+k
%EhtA+\n'lCf+TFC]AuWE<!0`OY2d5m0[QL5Ot1Fn;9uDXK)&T=`K/8PQfM`tjRC^s8,FaD'tJD%eehq+51KUr-Zcu=EKXjZ3SiZ;
%cWq]41-q[/<S8fZ#2%k%4eK/he_hcZ32$d+PE@'V\>5uRDET>IK;CK54dL6[.2H<#ek>iBa.d@oSI'ofkU@SJ\D"`Q<3RXKMAnEs
%K1e\j+sRVLFdl\XBRK!i.uPu$a7!X_:+bdSXr>NZ'?$Z[+(kJ^Zc-@XI,8%+?jI<egI]4>&_:b&UOln]#CR[PMc!T"N@SckUOkqh
%G0FPtYY&9U[J16<(G-#,2(Ft#qD>NULGc\@#<0Ot#E.\75.#6S0r=+?YK/$7@^AjI7k?jAI%'S]e[-!i>*#IJ6F+9LBS4+5Sub_U
%Bu(;X\D%Q[N%%99DXWBIA@h_8iQ<'65C*YPp$og:OU@W/mB9]U.-F\ZRX(E6DXNJ*jN?ZP8-Q/>$8j)+1/^7(X!u/#cC!+teTOo\
%Y.ErUU$D-q9M4k[4u&NuM63l)2eGu4QIQ/<)3kO;H+$'LPG/_t*,AOs;mTB<p)6KRlq5]!;4jt)="7%HVG=N8q0D$P9@@h-T"+Hk
%Gi>n](n-`tF?"ci2NZn5HmUXl/YWTQDR.Nu7+qC'c#@jWPru2!+Q)NYm.iGTlG,[f'6@:/_eNSRqCL86SiR5m8)5WZ)J3G.fP:;F
%>:_Dm9",O&WDOl]S!cjfDtN6dO#AeX6d<hC8A3$ecGZSS]=Gq]SV_%42Dl&pd);rd&n>IL-MGtVoabtV@^i4N%Z3)$'l6`GD7(Ru
%l0Re3>[;L*F$Df9@+5T[*0GTpmG/1G>Y<KkC)/1WB.LRIS2frE#Fs1uZQtE@]31\82X)uqAgd:K5+13ZSOOXoRJfUa_j&DKcrh/I
%ln7g:ad]B!h2U=0cG8?oE>A``pR<Yh#.OK-Yd!%792;@%="SAFZ]%&6(MoAgch^lVS%,siFmnDqNY4HQ?d&nB^T5bhZE+:Kmd\T3
%ND]:!\C>tB=uc4f*WhqFopqg?RMU5!J=uaR:@59.$Yk5-EG1-<GB4;l*XK9EB3XtBIlZ07=%^TW.4h%SA%9^8e?1O^J$QoY&`(@u
%N_XCn`+r^%db0LL"9mRRH@\!aT!(rS/=55JgG'Q6J12b!8]N0)/9!g:C4NM%V\a05X$cWSc4RF!Y+$Gjc6-E@*n<8!e[k3UeNM\^
%O&>sa*UY7QK:PSM1a>5-N!tNllCJka-*fsZnoYm=^p^N$$`TX?"$LMbJ+$0qd';HU)Z2$>0YSt2^mousVXEM@Ob(rO(3Lat8?1Ui
%[A0<;4m#M%*cB@c*N\3[`+[`6eGpU*C8juH(8A_;Db5]a_^/DZnXHL43c'qGj<_&7l*0^A`nI//Ulgur-DtuV^P;(\DGU3a@F^S*
%5mu0k=H.*;OZELO_5gmDoF+%q7X;;?Yr^sI@=Z8?#O;prH4Fb23W,89om8Ze?_ND0+jWl_Ri_`U=9Zt%,'NJTUi5!?@YYDcK?$<%
%W(*_(hK:J@o>RQDV"KpS1>P_:3I]h"fFDUpD!,YT44G$.jlC$)3sC8W[Wor.j:;(d9WNkoC$6&c+JrG&h'k\rgXi<_m7Bq2YSOq$
%_(C&4K<l"XHn"gj*gr^iUY\H/Yk\(kAKa1;VKRa6n?>@4Ab?:28WF`dYetUZc97\Zlgp%)QoU[\o.mD&CNLSV4T;7#QeqD>OHU.D
%di>YFQA6]$;[\+Fo5HCdC%pRKIXo"SShcg%!$O#6/YIl<e2Q_0d6h$<],&i4$'EJXS0:%c:;SXJ@sSKpfJV32H8lj(Kj+ZbX/*rD
%0!'g;TRICef>FSljo3JQ?,YVa[0IgT80(>#-@ji\f_\AC,"g&4R1_isE,=i[Db;G0<[BPDRfGE*W\:Vp![.*UQTZH@PIfWRb1/n(
%p9k2cbjPQBG*W7AX!N<=MQ*p-TL^f\Id\fo+`?H):b<!)f;d>''%e=kq=^*W1gN4RB1Y?%CFF@1f[HO/`r-s/NLi?5m\`(TW(sTC
%KFE:(p"kiC&9OduC1^$C?rErA"Caq.+D1uG]d4i;'j!a$b`VrSkL`oM*9JgZ*c<lgJ4lLc9m>eNTfC>\^u+_%XBH5:-"XG;9*/:'
%L^#q6!gq^nZHk'.kRRQ;[3PnMR;V3$-%Wa?%js1ZKX?ZbfIpWL(3OCub0JqD5L"/Wo0+Yj8diOUL'7.GnU$WH!F<73e/8liL+();
%Db*-3AqU]eL'2V2RZ"0h+YWn'?aaW=^phdAg`$l&;MNCW6NTXXGgl:X`H>2NL'2UjH;&QN!f&F77(a\ZU!AbHctZ)WLe>st1F)tL
%e#9`$TH<Ca?7cKI)"U9V9*4CUecBDS5drX]],2/WA"+)'Qr.L;Ij.HgUOf[WY0(D($jcs>Z+F3.X!*%Pn.n)Q!ets^RaVZO^pF?Z
%+T[cpK!:[eJWiZ,5r0djLXu.TO>,n.J,71TdD%o\rgjJAr24:2%iNn[m&ib\*jVe3U41%]#(cI[Z^OFg?b+]T<rL1Df&?&V"^1X5
%_chiiq$^EWjS)`I2:QE[["``@ENR@O05PDFG.5Rjg[j$]d8j!:1%-#!G/V#tI)N]Fpm$8%n14MWn.>cWYWT&3?IN59f9hQ"_u#`<
%19u&41LkS'3'3GH]u@#06Y877,AoEY0C3MjkP<emHCgh4Ujdih%B8Mng5pX!dtSd#R+e@5ZWq@qb#<+ndW&@&2C["<Z)tpU3BCbh
%)[uKrHX"<.i,;!JGm64'*c\]`(Ip#o*l"0b6RK8PGL7+&k6mcKL\k>2N,B]O/*2T;c,20fU4Y\RlmA8abO(&6oB^?c4jWSOe0B],
%i6rZa;P@6Z\'^EXZFtC*5=^KfD]R\Q%R\f+O7r`obl$Vnrju\6[gqlYOs'pt2U%NlY/d">AQRLpn`F(:b^[9eNEP4$r3!IQB"/?>
%k386RcJs,N5@fT9n\u0miLa_=/#aWKM(>PI@#@>:Bs+t/Gf1@&Ga^8q"e'(_6gAC23:t*NCE-65GiR-h,N^tHhi6S<HX)>M1O7%a
%kM\Uk&W<07qtVsWP3_U$Rj"8+LNffJQr.b.5Ra(B$N:%7*)]S=bFq/_q;m]a`%]g'TAu;+FllihOF!L2%NRCP1fmR>^bpns,ITVj
%,JH1r,K;an@@hNMWTRFIOF!LB:ASjoGn-h:\`Y72Q$ogU5KQ-F`7#-:Z7*q;d)ehMA>,3\29A4@`$6Ti`@kJ<K$UaM+n[r>*Em0K
%O`%P?&"2ZC]\cP?luX9)*QuJ3FWU!1k93KhKDVh^RHcoiDgFdZ3c1*9@pP/mU\BkXY(Q\(I*>hSk`7HN*Un=a]97K3`=@afH0gW=
%R`Q&IT'*C0WJ>;5*U`^hHMk+.G"=d>Bnq#[ZeB+D:%I!]omk^*rANTBlf#j$#CMut:+@s>E$t$:a)P2/cEc4Kl%%s"K0RP$-])KH
%mZ;b5G1Y^/Z8ZC.'7?,;:+"@>lQ&l!o%kPS4S)kY%Q!1\"$FhYLXOFfi:ZD<MrBd:?[2'N0puUiPN?28$P/*Wg$k)LQ4NHE2lSMf
%?AJ9=A]TnpE?Ed"oC7D!4l2_?L+ITk^\dG\.BgY$1X;@>Dfj>CZKChicX=tefAhiPDj^R7+Cc2#%e"-rB%$:\B=IL.GV6WMpWqB"
%7_Kl3nenauH2Oh86Y="Ams9*"XuC+:&^-c$qp,_>p,]iJa:Htt*8I1<a,G@s?TIk2ca3&)eC2'W-1(fYHUp<G]iS)Bg%U#Xq"Hh^
%T7\?u4qICu%!_Oel@K9]qIqQGUn),XP:iEfj$W*77Qq7"&LS[k*3o'WGX$+:b^?1"4(RP*p]DLa83P;ILX[Q?4q,4=;kM,!VYcIW
%YJ[tBj"Y%NL\LV'=Sj(c=3;\-?\`j/acE\#+n[sI+&^E@p`];mLEBD)=T"sp-[GWc5-mq3K1Rk2oE.;%kuSK^_!6^)o=TNC4_"-N
%nP=3&+n7D$+.@5Ahlii)JDh$<k;iN6l<0E;8UA_SLShR8r<[`-qGVX%m162Zq>OpscSGK6QVDN"+n[t`+52.]qZhM;q%#o_k5OZU
%!b2F"WUlAWYfE57FbbI8#>hEVaTO#_437Y^qTlJKb!Il*#Dg=iN.Ag+]0CuI^Aan6)iPX941mWYN`cEHhV/LZ9S#@pm/pk,5`afN
%GJk?^iU3d.Ae"+\M>qPOjnJeWqsq4.q[8[,?`L.&Q>.ZC9NIGE?g`^.R#&#bq[sC\(d3?"O@)@S*q("`8BU/d]C-5d)*>KLarre*
%bR"-tE5ODt59,=O__F,]]^5.%LdTb:%e!(`A*-FFpXcu2qk_@%^,ol@m-q_<LFefR#00E)4l5l#O:AP:r<r._&T_OcI-\3!"?<NO
%r`hV^@=^$eo)*/jI_^;f5<Qf1b4H3`T/-A$rDYSEk<EM^O"d64boYh/AHn4"TP=[4*`W-t&LLIhn-Bg[>BcYJ(!.QW6Y-H40VU?$
%J.qScs#_e]1O+EdPn!Tj1FdbF!H(l6ItSi-)3">fnV88TCA.tZOa?bW:U6cOofQ$M2T.^VC2X@pntkV.S7PCE,0k8,p'Zgh:"9DZ
%Si;oP4MmVg)q-onW_T@(p/Io=J3R&_?Pui3rpY1C<G!r.U8ju/Yu*O@;C+M9;ro)jI&c!E4JV32'6C)#D^Uoj-^\g"Qu=@>D^Up%
%\J*3C`H,C&8cEn5q0&e6=*:P=E2<L/:HBR5mG<0<rc5F'%%65QLI\l9OhjEOo$$#(IX,NZ@[Oq-_l#NWRJm5QH+*)b4S-YP+f9Ns
%n-IW.13eIhT'6K-o5*+]j1O@fc?]<c/F,F1iXt$mB(,fl]QN<epH6nh_EP.dH0([]+6FI)=g1CUkjOKN6RI,]re69Ea1]+&6[\N"
%rWja^G5"*H]roPbXRs*rbk'7=K1D<na'C]LDm(,L[k6t$(A;SQqmM4WX4tMZ&*VtmbPelOrEJ114raZk93V,SP#aNQTcd#.LX&-C
%"&YB`&"P)e#Jr%J+7='L6ZEn>@49I=5<L(8_Y!F4/LC3[+tZ@cOA$$<(^[V>%jS'>rXYPeaTli<r?(I5)G7I1J*>mo*gCMM#*0&!
%YeqQFDIEa1LpuSM^<3qS%jM+ArXYQ<cj(aI;t!cEeq7o,_70*qhroB*IrJLS4?0Da>'GaR:W+?;HpS#JM*<YH7qA5KK<+Ljh&eg6
%rPT*c&:\0L4s9lYoFD6n0nVtATTHud"H#4#A>&^QOUr6,n:24;2TEBH'RSjP3@JM/L`dBfGXN1%"*,XoFn^Yeb<iIENsJ*-K1D`2
%fY%fO6g;+MQ\XQs*sk@"+0H5RqM/dI.&MJ^-Alqp5U^C0SG@"<q6l3/gI8jD,2[R+DnF(\VX<cggWB0Zm:7V6a?Md27YhHoOX"E5
%7g'.O4X3P8]0C[HP`R2<5aIMr*t]i1h`N)WL^Y=;-Y*Dla:i=bMa/GTAfssLpdM"*IQo>]aRkN!($[WDPq(:TS/*Vc4$Fiia:(Oi
%L&Aj$A0I.$,$K6SGqt[<eEUDZ$[]O5U3fGH:hqp?@Ar!F04N!2k%+sDjd?o?A-S)c)32?"1!c&%)q_V/m+Va<D$0[e[Xm6VcM)\#
%PAcrE^\LUk__H,@T^?X'F7A^B0jg'-k>#+pMC$&9[,?oQDJP%b9'OuYKVdIAbJ1i3[IR\Q!adOH1GEBirX36MSsH;Fa/>R0!NO'!
%nh8:S#VO$#9"!kj\)Ibdl'E:s-]D+\pls)V]^DC'%9d7dqGP`C4<nOMEhomC6%V5^T%*LDpgJm%74^!.9WBMs]Vos$OcDMI%YU/+
%p'j3_(d1b0K,sWLFii!hW?18rA_C))J%'u04sI7J)cd1D46tC2RR9tN4DU$Xre2Sp2-[r/!J<j1ap5c1Xtcr26<&[JBODm=$fonh
%;Ke4N8j$ek1F.f4.IB!r9VtW7H0?V+J1mW<TZ=5YXeu"T#O,Xc.CkhoZ*4+DL$8eg9.`SbHtaU9[;+C*TlhB/DcFIM)2;oE@W&t6
%ptoGEL1gh2nJDHo5Dl(?*uN$l4?nupO?5Uk_)sh;RR&ep4.\l`?uAAjT$kiM/mk.jeU"Zo*7lM0,9r[>7U,l@dP(4l)9_qt/6pYj
%YT9Dgp\6tCA.]AU<r-l+a-HapZ.':#FuW&[N.Kr3oFg0+%MRu"[i^7eDSs@0UYs>(S&NF#lH^iPDq?`[\[LN8+#s\-s2)!APG'TG
%?NP8/D/uP#e)UkrC9]HPO>4#IYcGDf\B^CoVJUrX@Sf?g27oRX.+;^8@'XA,+ST<*C(UamXL$F[K]rl=k'`LN`EL^Kg*Yh_T%L$n
%KGgl(]*#:uQ7m%eoO'((EHn0=ThE$pFib2L^WTet(tcM4kb$D,^eRXB!rZO*Dc@?f&3-"WO9T:M],bG"_C#cn9[_kbD*M:q]].(A
%J1G;eX>VXP5J"!"Z**Mm?c@d&<Zb&5L[=WuK7d2\QlWWP@6-Jh_(S#9F?sM'4*X3bA8:m+%;KVX@gAGD_AFY!K,AD"r%Pihb)]Mg
%EgX%&n!)]5/E=d%i,UC$#n$21s#%"7Jb)Trd*Te9mZ-PTAMqeYSjhJXgo,(7<5Of?*+J`D+=+S+1Ce[9Y=Q.b(^BBd$n3aNM8@pE
%5VW8>%N[$b^&-Ks8;)TuK6);*U=qt<$U,;7Bfusr`FRcN?>`]<p!$Z1Tr,G)FjsR50JF,u2jcdf8XL>O^B0rm\_MV#?D'oCU*Z$/
%ikX1eX,$.a=5u%s.euR4l+//N+`"auFK8u9_0D>7Jn7nCCXCC7\5q%HcmJ$af>e"gNBhLf6Qr\0dhJ\s$9#$<*]L/7[i?smnghm5
%;anc%;Z#o9h+0BpKl+,Ri,(nUFb<XpZT"Oq&qR-W/Y?(7DW^>h)n+iLVLS*,)1&YTa5`tBF&G>FljrSkOH[m<1_Jmg^,mNQ=2Yaj
%NW`HR[rU##'_-C+P$(&TU#)r\<ButAA.9%7c9)hrD!E&Z.N"B^,=!RDDO_Za6dI5Z;%:ciWI'E_k9,9<EN#1ccq\$UXU/!2i1*\\
%N/:]QD9$U0D$-IIH7@?E":/XjNQ`s)g_nOmIZ.S;XUJm17Xd8*c?WWLS:o5$L4lmNhF_!9OZ3D;oD"Y.MOC5EC*J*>@bD7c-e,9b
%I:7(I#!HTa>h41:j^tpJ)@'19'/FpSL;T$)gQ'q:lV@mZ70`OZ$pc.18)ToQh2[IN"M<`]1;+)+8AgUK=MhK4&7l`D?54dSbO8hG
%=CJqXeA8tFR>gEN^I,"+[7EU42HAldS1WfZPKS*GN:PEa>?OD;j<!ZBB8iRiah!i=ilssFC!$kTA`Z@Ne33K67,cRFQ]3`R2'm1Y
%=;8cRcf&%]l,`&>^\RD<J+r]PIf%s)J+LQ2If"nu^BO>+)q^7hEGg:!oJ]#5h/@fA_`p9^kU/Ujn_;gehuCl<IeO6Jpog:g*Idj/
%prCDZ_Q0pq4T5$srrgoiN=SA>i'fcjhAo^5:;\gI\5"G0@R"#3-$/"8VR/f]b49X)>G1aC[GS**Ul4%,,cc[L0-Y+!)7Oi5]VB%.
%(Sug@&,+f`Q./jI#1a^"m&i5EPXT?::(I8.90L$RcrMI_6`p%Z3o=7f;a6k'$9JLLam`V\-E*3PlUh=LS?.sPS2kWCcr,HG(jtGn
%+jXp=iK27g?g6:jeqD`^QW&P%(HE`MjbcDA4j/hGE]Y\(l;np(dV@GR<f:>V]%1nHKc[XUK0Rs+(j=BqJRLLp,1!I!D0!DG`;Vrt
%X5Z@mXirZW,45!I5m22^d(n'BaVkVSk5B8Gh&o=taYkH/YjD.4G%n:bNM;'J_[R!<l8a6((%P_6?nIp]eLGO;Vn82'd_mD<Q<&Mg
%*m`mOQg+aT?FagKA+eJ[6Nh2015I]5H#&-g"lC+HeklfPW,f%Z(_4hp4jBuN>q6cEb%=ee)I2V)a.-cAqY1#+LY3=i9,ICADAXf=
%EPd$r3inGT`1uBo\l@oi@*:lUiYN)mEaVda>o*Eu_1%!o3>fgL%GA_*@b]'7,l8Zg37:[X$B?X;>dd\S(2fU1p*5*0@7*?E37.O<
%QNYIf6/NPj$KX14^B;7eNgg'-D"rToLCTt8,Ibi,PQ0VACHp&BLYlUk6L#tjaeoZB7S(I"CcM@tLk"cb<\Nr?an9L8\^Ri)Q6c'G
%=h!*en=]h_es+[n.cFl/fpX!84iCB!R'Mo6_`!ZSU,PC6MQa4f7Kac3dI"2#-0X:&;gUSRFAo?:l`*@-bRfqiRGK$1pu\J_98/UG
%.^dZM_q,%r"/(!a`?p0HeOnjS!S;3K?X')s:^.VfQUZX`9"DU!hrR4p)s7>h<5[g!aajO'`YDeg+P:6)_).T(dhf+[nSk;>Rp3-+
%qq_dP5+r)Xi.b\?UY($KOi8KWf,l#/)"r>V68;t!4Qcp0JT(rW3&`gJb"3TjZfE)fV4e!iChtH(q9I5#r?]:[b>p7UO]*0Vh6&Y.
%:Ae*1]j-Ha.BF!c9nH]*gO3@,d.:qtb:4a7%Go6/#jG56G8E1XS@>fZMfA83mr5'?%r/VPYQE\lKT[lqrF2Q*N%c)7V'&S\//)WD
%@ZX*J$mf*li!JfeO;'3h19"SO"L"XX3"/h`/LCVJb4%KaBQ)+V9Z=9Dr6(qdZ>SR(N(<4jAV@mbLjKq_X-Q1";`@TpDPudWAo*!:
%(Fbhcgn7T9.#98B@"h343Y=JFP\#OQhKGJi&=+GN&ANfK#ZA7r+EcGh-]SCr'E0Q'0"t1#_Km^6p1mMoF'[qDV>Mup^!6dd/#?t;
%4m8@&#."rnk74:u@@?Rq"'(s:=QXm;%QI+sV2l=^'IF:+jb`PE=9-s<6D21h:i7#D`MT^b"/7DZ]Bb@gIUtL3q(e.SM]QgcT4CQS
%QsF#`lB_lXH@ZPo;F7\4X9c:uA^Y<[%c3_[8trnR'YJAt9K9''B!K4#)3s]o[J;_Qnb1fS]j04NJXJsYNXZ"9GOb>nn*^\P?d00]
%7gZj?[PRBX7dF_;><1+a4@mVV,;IXg662NMrNf<FZY+@cP?;MUYcQP<-[cQ8MebbgD]k",GSYo%he#C7",+]lT&UGYb;cqmTbpd4
%?s\Qu`l<("=]JAa"\rM567TB1$l=tK#Qa"%':eLmHpQ`jL&lpZ$grk_f3i!KarSX:jP>Cr,'`7m8'B#>1e-*fC.6bk]Xh:aZ6K(0
%>WC@>nGNG0ooW#8.$,C5p#&LPIUeFN%c)lj7cV/(AaSET9H"^/)m%N).(cu?o'h(ig0$0M$G7l(7dF+1GN;0HHN.0<2m"FHPW\P/
%j(7V^7F[3sR;kJ@V(Od2[5[S,\B:Y@SQ;oW]&AtR6-Rnh;+:jMj^6Uo_!S`"_BaBSf&)Zl$>R0Enmju$kn8P^&re9pM;ZH@fsUET
%9A<qFmSH+uR0hD0HOr7m+04ZpVh`:36Pn>V>"A(h+QkP`*)Vc@AM!/HYHBUQ3h^Ai>DfT&]ISJ;CV/SI3L"KkQ>Khaldo]b7>.P&
%P?Q7L%B_R'CNZbh?dQ33gtm?/i(IGHDO[^M2l%iPZcsEA[s7>I\L!^aS5!kQG'dU;hefRHBoq,).MLsWgN[jQ7GFJ.-ZK'A`qd'[
%L]10V>7ihunZKUk6P3sgNU)PdW[73[JDn8a0$W<?RjJ\t0?7*6,r2)*jmL6D/[MU]!'#Cs/'#>^EE!]KgkX/dRgo2OlP/Y(L"\TJ
%6GgO]COrT7\mS.%;)\@qn"fO=EaZ`3]@)Vqe/R*bDREB!.'J#pfb7_TK/cc`8h[</Fb*7f#.Y#kKilJ)GB[8n[6j'*[?+;]HE;1W
%Im*eA3G_2RC)KhdekV?<l-C:eNJC5SBcN4o3;=(IPEKbnY7+3ICd$jmR!oZ1-HZsJ8s&KX)N=>\'!.*!\@;'A=:j;>a7B,U>E?Rr
%+S-=G1=U`9?6>YbR'ZZtW5Mhsa+^bQ&'hl=6UutFn6(`*UCN:BD=,1k(L1C\1CP8TNcNP5=2ku,!qKGA<Pm.XXHAu+^pE$VVB8c.
%X4m.;Md%]!GJ(<2b!CMe@C9!R)1YA*XhMP+BL>4<[ufb-g\!pk$)=&]pK&B,XO+]8[:"Dtp"$1]e"@bQM.cVG;T!<N4a:A1C$;J>
%1s`ASL749Ic;aE53c1sDIf6%d2>5K`_I-k<]f4W[9)Xk!7a9`[AfG@OLuAQHnjcA4re]h0`Z$H-Pkdc^cP^]sXu0k/W<9%Sijdt>
%2)C73TO0M9Pb63gE]E;1N&`Z>5Ae\kI[r:Y>iJeEb)32bQQoF)=le_(4XK'G\``d2AFP/2iJbnA.s2o%JdOVU%,qZIS2mMnSM^\4
%l7n/n)V!N2MEKZOqp8T$M*,K+_BbU-)?!ETEi2J6GK(p#n[pjgFe:Q?NCs%;p/Yg@o!gV:Tka2]-B-l.K+iQSg>qn6()WL7\<fl-
%UWR%$D2uJWk7(<rX6.c*`RE,FWN%3c)QPQq+#$d$Zk""T^=iu_6Pd<2!E0c_5@ViGPoh_nIBCd^1RH#V[:3h7,5d8%M^.TiF4VL4
%5CZW(YVUrPCRI)7+n`2sCfJc2@W<HWaZSnuAXIMEVD8XqBk&$-G0X@deVQ=BUTjnJ%;D?-Z_fR.GhSPYeTq^aCk-0BCcE*S(ts5p
%RkqI#V.q4g>e+)JN,[+Ho4BuC3,+2D0B.p>m]6:H1sp;MJ&"Uq_>AbNN])H>ToSmmVRirg`R':YRLG."`2Ck)Rd6Ie%n3$IjaEs+
%rjlTN0`:6sf"_4uGZh4a':4/!]s&:!V%nZSW1JPn"NrG#2_Gj2/:Cm67L!,YZH*@eKI$b#p8+b@L1P-s##Q5^)"#QViOP!M:0m2W
%aT7dRnD.me+Z$`#ETKFoh0'uO\ocGA$>Tr4/HK/(r;k/8fsm2!e9^=$ZUmm6$l;SU3'QbcXK<+J<:4<8Y)HqW>>C>mJm&BD<Z$i0
%VaCfRJ0PL@PiTpJ:bW/dWGhs_nPE]o5Tmp`>4/'@*=Uq?a`rOrL`&Mj4Sg-T`si/1C%]SV&6`N(C`fX<(5<]-d)sTAf-&[%W?Aa(
%^e5"PL=Qb=Feb%6D(jru;]h/4^0Aa>:a>FD+$a88%-"CA(*R/Sq??FSZq*a^-]O6LJk">BET/)]9.d+P3@WrgWG?$h1;g&Da))e`
%p^$LMD6RNhjkjlL0Y\(8\_-W27%mF;>^Quk\-Uc<F&akLUpLWXra.L^KHSo9<CarXMr#t"r\3gf?>ut_L.L?=JIRjDC:t15HLe(F
%Q)CF&IWB9.YNr^m4`N!?/N-dIZerpB=@W&LHK#.bH7YdC/bOT(D*%"Q)e8NAHo<fh'Tq$3%No)=*2Fg]VIbcG.e2a+!\'.C)nrPU
%,a)Ze5n7Zsin1?=!G2Tm1Ndd"G2S.R:?.)#WeXjBi@V4d-[!:,LcO2MXse@u<PToi[DI?f6!B^pV5YbRNj_cp.b\po)PXB][Dfj.
%OUB4&I)ja5[.QakE':!IF4W-h's@_T0E5m^<2>POQI:ND(L?9:PL0slb<In[P)YI]\mO!]?FMdV:$MrHV[8mR)0&ZSfErQ![--a3
%Cl$A;k%5b![DmMmYYP4eIpF6Nqs]ru_uPd?EPR3TSFGl?Nl7^+SG:lWXtfI5rLEZLNfM&Q4e7`4e%7Yd`NK)a#Ch&4-QC$4Dc\.^
%\_Wg5#Q$S#/uEi;cr5nsGiI2ar:B6!T7;<<@&JL'*Ui[IYOfC)oBUA1#<]QW1[0&.n)2OZqJ<P)^An*l]CYpVnU&%>S^6d(c`cC-
%?b:1G"@2gJ_&36JIf:&>kE8%7o_<&p!_NZD3=@88k2^6l01Gk&@'#`:-N^-;\j$i>Sj!naXi-h>gfF"1PC`->pLaTF;l9`4[J&'`
%p4RslK/8+75C#l2O*j*jahZoOrjc/O&MCMHVtGS<_C?mb5j=N=]Mqi?hZmjT<s[<IHo6Ku*5!->FK#$A-.J7/?n:TZgS-W?8mdh?
%SP%&r@Uprr'AYoM6m`ZS*O+l#5t-s&XQ17)D?g_pgWTGKGn71uiS,aaUJ'(I8aDS-@ft&ULCbh<QF3/^DD8^%&8s=I%Y[gjR=-t+
%H3u62'GeA6?o'rF^cR/qDZ^Rm/?$dtU>%-9HKics[d6@=_%061%<;t,AJE<;__&8_Ei!#o\"f\AZ$_ec\Lon%_/],iWK<C"3EFX%
%c5]Ij"IRf;MVr&*&(/\$m/Y95r_%+3Orq>)5gA#*93L3FQdu=J^.U/j3i#HL\G(Dl6At^l$aOl&@!,9?^#0/p7u0NS(tF:^\08>[
%O3MfTP#^P,[]9N*"FC_SM05&8P9T%HThYgQ[ctHu1ZX3g;G7Q__,$$!F0'Wp8@KUkBc5P6%G^H_\HjQN"nBg#kbD_b6YhOK.^^+J
%+LbN^"'JR'([4oA>2/<PL-\Y!eKt?WeT%1clNL,adY5R4!k<[=ZG\,GP^\1hH:nMQG!.A*NlFA.e]kR`#Fo6*LkfQcJ5W$a2RI59
%0>`2_Za+tC?B6Aad'3qQn1Hgf2P<G5d_8Pkh*sT<cF91mIQm8#&*-)2*P*PjQ>VlrY>iOSPg`3+H45s:5\G++AJNQ@mulGBi'($^
%.o!LUe<5a_7[GE&79dE06eEki)ba:2>nML_[&(,&6!I_[Uar_=Qb$k^Y4's=3^c*+j/=9Kc"![=.Wo:EL(qR?ToS'>8(f;7H^U?I
%DVoMVKR-sPEN^d5O!o`hB;'ro[RuR7@Ua7V`.mOYi'(VN`*aD\Pegb;M=[6"fZ&coDWKlu]l)qbB/fGFfC=%`r;+KhcHF799BYDN
%H;d?!dC.ojTAJ4G73$.2^umY#VB0RB^h5V$kL\Z.?f9U3^*F_9o7/2IH5'tqeUr6aEjIDj8)$0TZmI_Z,TU^s*rb5tO6R1_IDD$c
%^ZucPot-gkm,jA#)/T?$@8dC2Tan[S!=Cr=#k7H**s4S%dg#oV&;-_Xn`drA?[)EfJ-MS/"2XTppdjoPqT,AGm2c1.i:i7-*t37P
%\/Ysfaitk:\fJ2J991&(SmTN.KHC0[+lV9aY^aXJ5RD"RUI^n$d9<!Z_-T`-J",q5>k;*(%Of1t;=QXp@r74TI8jg_'uGYP`X^K4
%W<^1UC[!d:gF]l*g.HNbGR5CGpsdBcdpBHeRfAT8?90J=Tb;H]j";7Gk')pGL]_pdD;!/%?nIQG7>(#d4FM/LL;hn5OGVXp;Xli)
%U+-HY-lN_*PTX0]oJ)8`.NkUBZ2eGOj?qEnf'b;TT-0&t5q?"X!u5+.9pV?:*_jWhO#RW.Q/r_ASq&hnb/W*WEB=G8&[/,Q;3beE
%--(Oh`iJu+K=!?*cjR2r>l5)_ZHhgBper>oPBYj8/SG?ohCkO1ja+#qogNR2dt0p]DLmLd%<tjOIB[\,$9\OS9)+DAIK@u(3oP>/
%mT4SP1=Lo)\.4],e\Taug8GZ`&Jc'?GhE?;;c2,rY7>,g5HjtK`]JRDQ"a>JL,^5jVO$/;b<d]"gd&RlOQ@C.`JHlf'feYepku^7
%&;9p`1ko09)jdYg&'%'4^U@Sg_T]+"#"i0t@Ya7H[*%iLH`i?-<itDb+$aT_;Vr"Q+WRQK"up%geb?ofa2V'He^i?.U+!.GehnB\
%2bHsflA&/baG/=YX%>=9D)gN0lVIg))mqWi1fl/MN:!)sA,+^YK6E!e=uS<VGXOML]3ua\4]u7MgAJSM)CX)^C5'U^5UU\C`SKHO
%0s-nu<XAGZ$<^fK"f<&?]FACsEYYr=N6OUgiO[ZUCRM4(q&k*HeCCn5IpHPIUl06E-$A1TNpkQs3^,#ka&$"1Ff9`9V4AP58#.^0
%fR4=%='nX;MlJ#6DIn8pe6UBr$5iR&:g5:]*W`59>N]6[ChfE._(MH7m)bS(Z`.9;DsP5^oDR,$QDe-6P/G!1#c?SnjS@BBZDd2S
%(*'aqN+3,u\q@pq2NTQ`A@8Ob;7W0%;868-2iai8TfVk%/,6)fWZt\j(%S!!?nG[/XOc<-dC7HA?&t%$l>pr*a:Ot-b32dWjY0&L
%qDb71(RG45n_#,r*A7VP)O4!`44^@+i8n@qj.AHf4MQme2`t>@+)gLZIXf/,j2LX&7n'$Ks4XWQ7ueODh?2h'bf.U4W[-,MN_(Gr
%(2.)sa?:AN#L3Ai3uAnCp><(1,=PI8"`IS)%mKb_Q`<G;;3XJ2#:E"D1'ZPSY5"$;Nh6"V\iTbb'5*)iBVXu*,;2e3*q"W>\NCe<
%EUWOEpbB75*BZAHKHGDd3o)XUa6VkRpP4VdEI_"s@kJ</bm,UeQgKECO<6gG&aJk@>p73fS2`lSIf9b"a;Z8j&2DsLbU(\>MgM@X
%n??-X-P5GXq>'&:f179Gc8d(,jrX?oZl_E*/s6E<gc7qHqP]m*]Zh&WOr0]M:`=C6i^.XgC=n@e$V0#$88?M6qLkC,DS=!#$:^)@
%BlJLG;TN%!M.2QS,#PSsXXs3n'':c<\g!]O>!]O"7Ce%TgHnl6e9c%Q<_/`\be`^[@G[j/8ScPChGmS&^9':n^])U%CWhJ"rYSN'
%.dcN)j#6#323^sXgW\F:nJ`oT=cqQL=)a":2n-10ZJ>(m$<Q;T)Jr5&XSrWG;Ya=/9c;@cTRulGel;PC@lLT`9S@i'PNai3&*ID7
%aegp1CPlre@@afJD=J.i(IN*Z$H3jqJF)f>^HbXGI>9r:,#QDh7%9:E,YPZ4JN$5_j-VDnP=G/1s"FO7%cq/aaupKVV-PMhD9iD<
%a)Y1V/o*)B7@CZO=ngYt<nlD\mcDdD+pLSZ1c6[Pjrf"Op/+l$Nu2#_C=;LS'm2oG*7^`Rq'n,+2#.a&Z=g_U]d%G+WWE=._@iG:
%d5(H4l_OD?%E/KP.>3J9q]-!AZ@qkU2I8*K\O!Nn($.KVTf3F88uTSo*liD"*Y>cH1e>AN_E9;O^KeXIF:OHd"tb^fq-M!i*#tn5
%L'Ocd)"iQOU\iaoV9H\Pbh<bmMkc(QfCo5E$AWnTj>+(0)^6/P\p'+hdG!qVO+pUD[0J56(i?VN%_/e7-4r42Y$p\A$UUk[e0p>4
%4di@E3YWG%<$nfYDr(3(=X9%W.Y\!_391KM"GMpXY^Rg`U^]VK-8]u=(]oZZrQ,s1rZ@3+g?U80Q)[CGTbXB5C4B\E`+scRZRsM?
%9JX-55LmbQKJSd:l"sFa1u`;Y7Zek#S@l675nEWc9t`O9ap:VQM*eEd7-*N_quC8a/t*MP1>-/rF&L`NQ*d-AF&I$f,3NZ<@k_Z.
%(RD7B!8uLg.A=<RJ-@&K[blBfeMUVQA[kI=0^FE%7tY@)ld.N=U)bu.h;d#u\<f$C^SWe4p>rSgXEM[-Yo5,?LhbI6?rr>$U':0=
%Br9=#cjZq0eFIq!1b3F3mju++`'[-ApM?\\<Gf:j,aFcQ$Xq32p-rFK0iaOO)9`O%2qtkt_J&[!Dl/7Eg7:1rD%M"aa/ZLK;2jaQ
%_,H*Rd!%.Bk2Bk=om<!,Mc59#,pp0#cSQmZj3(9KT3dWf+i%t</>aRQpYM=;XFVd11.r=3[T+*r[;KK&WBp0K0Wf9qDEif&`!XgJ
%B97JB6gNpCk,](@SS]=4h21O?3N[3_8sk]r1=7s8&30e-F9T_:AVCs@dRg`r4/-_j:nfc]V]AdaF!jM4-k'@.^`=!\_pZV\dSm;+
%K6fga[!l:rcFRuC<UX&%YF=OHRL#Wi@O,bH'NNKR"`k4V$lF"o8106$ibh.pGA:>n'UPN'HVPG(SD$dTEUc93[/bk.\`O=c6t'd-
%][iVGiM<g3^UtFjf=e*+@FWpHG7^Q+ar]u\%J,?ZXhtQ./:Gub+d_qto%]t<#2'/_%J,JsMSfkOMgp@!qh23MI=d@V^W#'-ZY+B&
%56'1a0pdF/8GLr`U99Zmne-f^_al-(hIQoI941cf@bbt/5hGYF5=WWt'n7@XJq^_RPn:G]MgJJ<TKIpSe'\ds>K0nUeHhPb4K=lW
%(N+UEbc_+-k!!&[A9QLn$h%$2\\Yq'#fZQ#^"!TjZtMKqR`'?<b*"P4=jkT%`3mH7pPM;V5uT8n9ELoUM>:4b9aSKfd'7t,`^u7k
%22J4/M'0:qVc]53a0T@]`>K)-H0kK[b$Wm^)W82)1$`g1,Fr//M'Xp@=rH345r[d5hf[g;OW%mOl-Q<<L`PZ3D&#u&,'-+\.&Na?
%f4p#-N\=g2oipbl2--CVBu]R4V;KhH'I_Q<[o9<`*f(b"B0,O%Xtq`Z(u&8$+Kl%4;`Z\*mht6"-6F:>4eFps4nH*'REn9t-ep(u
%_LCK3r7<;$7KB#B)$:rRUVPoNNrqL-4qbMmrE)%UoBdA;\Y#*!rQM:%D<BJmR3!\cW(Mul*/2,'T3Ta.J%9YPU1?1e6qEJhlb_1Y
%_Pq]Uh&^?gZVAS\#Fq,g]Ag]fAkZoIcS`16L!$Dt&n'0F=#;)c3+s1nZ7a7u//:6#,Iu`KfHj3^nqVd]EZ#HKIVR5%O_EjcL4Tk*
%6jSVC-W9d$*D$SGKZ2:P$WI=4aBB3'A$&q!S&!&i2*f#"QnC4,CnXK[MScD\ETCL!^Pk.,`TaH].VN6a$NBFC&m!'?)]e!#dno@Q
%goshuBkS4jBcecB5ra:'bol8IC7o:;6_!q0GsOLAm$&J+FjrMk,&V%3=?&7f'H+'pW9pO;I-Gos'YHK;@\K2jSRmju]q(CB4XW*W
%gE<V45DP(i_geI?)a0?'n0ku</8gj5I.NK[9T=EF3Gd[]bmC!RSbOnhp$!X*1HG&hmN2(Tp\;Xja2?r5GEV[,5@sJ,Slhk5nU=m?
%Ki<=bjp2XuD`o!bD`4;;VCPN^Q:)M$"p-ts,?qTD)f9Q&3A9Z4A&g5Fk+M^<kfdM?agDGR9Z6qT%e;O6crA#/A9(,ok*X;UQZ--6
%#$,K;A$&(!5J;.scd74:0GuD##`A?Vf5[.=N2A*FA8@1A3+mN0rQI7S)De=]ru-1K(Wllc8ODIgQ)55\n54JGS6<j1*V]?(>5%*p
%l'\F47+8rlFfeFMC>2tJ]-0D?EOpnB3j3Gc^"-odL@p".(fGO3+YSb,3,D6>.OV$m_8SlgM&V"+aPK<9Np;:db_t*_YnDh0r:VG8
%qZZ?3SaLBf2d0"sesU'_P_-ZsLcroEF8=WJEW,3mB".6Oj59iGq>'o3s11AnpZ;'g.DVDpTARB\o_SLSs1H!nrRKX5c[WSi4hl@<
%ro<UjQf#uYT&.2qI/*L9p#YGUYODJoJqr]D2fHG1k7:pLofpIUOQQ~>
%AI9_PrivateDataEnd
